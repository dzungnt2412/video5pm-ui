{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/create-video/mixins/update-order.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/create-video/mixins/update-order.js","mtime":1604479579745},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { mapState, mapActions } from 'vuex';\nimport { UPDATE_ORDER } from '@/packages/container/store/types';\nimport { FETCH_COUNTRIES } from '@/packages/shared/store';\nimport { ACL_KEYS, ORDER_STATUS_DRAFT, ORDER_STATUS_PENDING, ORDER_STATUS_UNPAID // ORDER_STATUS_PAID,\n} from '@core/constants';\nexport default {\n  computed: _objectSpread(_objectSpread({}, mapState('shared', {\n    countries: function countries(state) {\n      return state.countries;\n    }\n  })), {}, {\n    isAllowCancel: function isAllowCancel() {\n      return this.order.status === ORDER_STATUS_DRAFT || this.order.status === ORDER_STATUS_PENDING;\n    }\n  }),\n  data: function data() {\n    return {\n      isVisibleEditOrder: false,\n      isOrderUpdating: false,\n      trackingUpdate: {}\n    };\n  },\n  mounted: function mounted() {\n    this.handleFetchCountries();\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions('container', [UPDATE_ORDER])), mapActions('shared', [FETCH_COUNTRIES])), {}, {\n    handleVisibleModalUpdateOrder: function handleVisibleModalUpdateOrder() {\n      this.isVisibleEditOrder = true;\n    },\n    handleFetchCountries: function () {\n      var _handleFetchCountries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.fetchCountries();\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleFetchCountries() {\n        return _handleFetchCountries.apply(this, arguments);\n      }\n\n      return handleFetchCountries;\n    }(),\n    handleHasProvince: function handleHasProvince() {},\n    isAllowUpdateOrder: function isAllowUpdateOrder(order) {\n      return this.$hasAuthorize(ACL_KEYS.updateOrder) && (!this.$isSeller() || order.status === ORDER_STATUS_PENDING || order.status === ORDER_STATUS_UNPAID);\n    }\n  }),\n  watch: {\n    hasProvince: function hasProvince(val) {\n      this.handleHasProvince(val);\n    }\n  }\n};",{"version":3,"sources":["/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/create-video/mixins/update-order.js"],"names":["mapState","mapActions","UPDATE_ORDER","FETCH_COUNTRIES","ACL_KEYS","ORDER_STATUS_DRAFT","ORDER_STATUS_PENDING","ORDER_STATUS_UNPAID","computed","countries","state","isAllowCancel","order","status","data","isVisibleEditOrder","isOrderUpdating","trackingUpdate","mounted","handleFetchCountries","methods","handleVisibleModalUpdateOrder","fetchCountries","handleHasProvince","isAllowUpdateOrder","$hasAuthorize","updateOrder","$isSeller","watch","hasProvince","val"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,MAArC;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SACEC,QADF,EAEEC,kBAFF,EAGEC,oBAHF,EAIEC,mBAJF,CAKE;AALF,OAMO,iBANP;AAQA,eAAe;AACbC,EAAAA,QAAQ,kCACHR,QAAQ,CAAC,QAAD,EAAW;AACpBS,IAAAA,SAAS,EAAE,mBAACC,KAAD;AAAA,aAAWA,KAAK,CAACD,SAAjB;AAAA;AADS,GAAX,CADL;AAINE,IAAAA,aAJM,2BAIU;AACd,aACE,KAAKC,KAAL,CAAWC,MAAX,KAAsBR,kBAAtB,IACA,KAAKO,KAAL,CAAWC,MAAX,KAAsBP,oBAFxB;AAID;AATK,IADK;AAYbQ,EAAAA,IAZa,kBAYN;AACL,WAAO;AACLC,MAAAA,kBAAkB,EAAE,KADf;AAELC,MAAAA,eAAe,EAAE,KAFZ;AAGLC,MAAAA,cAAc,EAAE;AAHX,KAAP;AAKD,GAlBY;AAmBbC,EAAAA,OAnBa,qBAmBH;AACR,SAAKC,oBAAL;AACD,GArBY;AAsBbC,EAAAA,OAAO,gDACFnB,UAAU,CAAC,WAAD,EAAc,CAACC,YAAD,CAAd,CADR,GAEFD,UAAU,CAAC,QAAD,EAAW,CAACE,eAAD,CAAX,CAFR;AAILkB,IAAAA,6BAJK,2CAI2B;AAC9B,WAAKN,kBAAL,GAA0B,IAA1B;AACD,KANI;AAQCI,IAAAA,oBARD;AAAA;AAAA;AAAA;AAAA;AAAA;AASH,qBAAKG,cAAL;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAYLC,IAAAA,iBAZK,+BAYe,CAAE,CAZjB;AAcLC,IAAAA,kBAdK,8BAccZ,KAdd,EAcqB;AACxB,aACE,KAAKa,aAAL,CAAmBrB,QAAQ,CAACsB,WAA5B,MACC,CAAC,KAAKC,SAAL,EAAD,IACCf,KAAK,CAACC,MAAN,KAAiBP,oBADlB,IAECM,KAAK,CAACC,MAAN,KAAiBN,mBAHnB,CADF;AAMD;AArBI,IAtBM;AA6CbqB,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE,qBAASC,GAAT,EAAc;AACzB,WAAKP,iBAAL,CAAuBO,GAAvB;AACD;AAHI;AA7CM,CAAf","sourcesContent":["import { mapState, mapActions } from 'vuex'\nimport { UPDATE_ORDER } from '@/packages/container/store/types'\nimport { FETCH_COUNTRIES } from '@/packages/shared/store'\nimport {\n  ACL_KEYS,\n  ORDER_STATUS_DRAFT,\n  ORDER_STATUS_PENDING,\n  ORDER_STATUS_UNPAID,\n  // ORDER_STATUS_PAID,\n} from '@core/constants'\n\nexport default {\n  computed: {\n    ...mapState('shared', {\n      countries: (state) => state.countries,\n    }),\n    isAllowCancel() {\n      return (\n        this.order.status === ORDER_STATUS_DRAFT ||\n        this.order.status === ORDER_STATUS_PENDING\n      )\n    },\n  },\n  data() {\n    return {\n      isVisibleEditOrder: false,\n      isOrderUpdating: false,\n      trackingUpdate: {},\n    }\n  },\n  mounted() {\n    this.handleFetchCountries()\n  },\n  methods: {\n    ...mapActions('container', [UPDATE_ORDER]),\n    ...mapActions('shared', [FETCH_COUNTRIES]),\n\n    handleVisibleModalUpdateOrder() {\n      this.isVisibleEditOrder = true\n    },\n\n    async handleFetchCountries() {\n      this.fetchCountries()\n    },\n\n    handleHasProvince() {},\n\n    isAllowUpdateOrder(order) {\n      return (\n        this.$hasAuthorize(ACL_KEYS.updateOrder) &&\n        (!this.$isSeller() ||\n          order.status === ORDER_STATUS_PENDING ||\n          order.status === ORDER_STATUS_UNPAID)\n      )\n    },\n  },\n  watch: {\n    hasProvince: function(val) {\n      this.handleHasProvince(val)\n    },\n  },\n}\n"]}]}