{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/views/OrderList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/views/OrderList.vue","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { truncate } from '@core/utils/string';\nimport { VclTable } from 'vue-content-loading';\nimport { mapState, mapActions } from 'vuex';\nimport { ORDER_STATUS_PENDING } from '@core/constants';\nimport Browser from '@core/helpers/browser';\nimport mixinRoute from '@core/mixins/route';\nimport mixinTable from '@core/mixins/table';\nimport mixinExportOrder from '@/packages/container/mixins/export-file';\nimport { CREATE_CONTAINER, FETCH_ORDERS, IMPORT_ORDERS, PREVIEW_IMPORT_ORDERS, FETCH_CONTAINERS, EXPORT_ORDERS } from '../store/types';\nimport { ORDER_STATUS } from '../constants';\nimport EmptySearchResult from '@components/shared/EmptySearchResult';\nimport Thumbnail from '@components/shared/Thumbnail';\nimport ModalImport from '@components/shared/modal/ModalImport';\nimport StatusTab from '@components/shared/StatusTab';\nimport ModalCreateOrAppendContainer from './components/ModalCreateOrAppendContainer';\nimport ModalPreviewImportOrder from './components/ModalPreviewImportOrder';\nimport shippings from '@/packages/shared/data/shippings';\nimport { ORDER_EXPORT_BUCKET } from '@core/constants/storage';\nexport default {\n  name: 'OrderList',\n  mixins: [mixinRoute, mixinTable, mixinExportOrder],\n  components: {\n    Thumbnail: Thumbnail,\n    ModalImport: ModalImport,\n    ModalCreateOrAppendContainer: ModalCreateOrAppendContainer,\n    ModalPreviewImportOrder: ModalPreviewImportOrder,\n    StatusTab: StatusTab,\n    VclTable: VclTable,\n    EmptySearchResult: EmptySearchResult\n  },\n  filters: {\n    shippingName: function shippingName(value) {\n      if (value) {\n        return shippings[value] || '';\n      }\n\n      return '';\n    },\n    trackingNumbers: function trackingNumbers(value) {\n      if (!value) {\n        return;\n      }\n\n      var items = value.map(function (item) {\n        return item.tracking_number;\n      });\n      return items.toString();\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapState('container', {\n    count: function count(state) {\n      return state.orderCount;\n    },\n    orders: function orders(state) {\n      return state.orders;\n    },\n    containers: function containers(state) {\n      return state.containers;\n    }\n  })), {}, {\n    orderStatus: function orderStatus() {\n      return ORDER_STATUS;\n    },\n    availableCreateContainerOrders: function availableCreateContainerOrders() {\n      if (!this.action.selected || !this.action.selected.length) {\n        return [];\n      }\n\n      var orders = this.action.selected;\n      return orders.filter(function (_ref) {\n        var status = _ref.status,\n            container_id = _ref.container_id;\n        return container_id < 1 && status === ORDER_STATUS_PENDING;\n      });\n    },\n    items: function items() {\n      return this.orders;\n    },\n    imagePlaceholder: function imagePlaceholder() {\n      return require('@assets/img/image-placeholder.png');\n    }\n  }),\n  data: function data() {\n    return {\n      isFetching: true,\n      result: {},\n      actions: {\n        delete: {\n          title: 'Delete',\n          isNeedConfirm: false\n        },\n        process: {\n          title: 'Process'\n        },\n        cancel: {\n          title: 'Cancel',\n          isNeedConfirm: true\n        }\n      },\n      filter: {\n        search: '',\n        limit: 20,\n        status: ''\n      },\n      isVisibleImport: false,\n      isUploading: false,\n      isImporting: false,\n      orderItems: [],\n      file: null,\n      isVisiblePreview: false,\n      resultImport: {},\n      isVisibleCreateOrderAppendContainer: false,\n      isContainerCreating: false,\n      importOrder: {\n        create_container: true,\n        file: null\n      },\n      importOrderErrors: {},\n      createContainerErrors: {}\n    };\n  },\n  created: function created() {\n    this.filter = this.getRouteQuery();\n  },\n  methods: _objectSpread(_objectSpread({\n    truncate: truncate\n  }, mapActions('container', [FETCH_ORDERS, IMPORT_ORDERS, PREVIEW_IMPORT_ORDERS, CREATE_CONTAINER, FETCH_CONTAINERS, EXPORT_ORDERS])), {}, {\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var id;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isFetching = true;\n                id = this.$route.query.container_id;\n\n                if (id) {\n                  this.$set(this.filter, 'container_id', parseInt(id, 10));\n                }\n\n                this.handleUpdateRouteQuery();\n                _context.next = 6;\n                return this.fetchOrders(this.filter);\n\n              case 6:\n                this.result = _context.sent;\n                this.isFetching = false;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    handleActionItem: function () {\n      var _handleActionItem = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.action.current === 'process')) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                this.isVisibleCreateOrderAppendContainer = true;\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                if (this.action.current === 'cancel') {\n                  this.handleRejectOrders(this.action.item, 'canceled');\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleActionItem() {\n        return _handleActionItem.apply(this, arguments);\n      }\n\n      return handleActionItem;\n    }(),\n    handleCreateContainer: function () {\n      var _handleCreateContainer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref2) {\n        var ids, containerId, payload, result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                ids = _ref2.ids, containerId = _ref2.containerId;\n                this.createContainerErrors.shop = '';\n                this.isContainerCreating = true;\n                payload = {\n                  order_ids: ids\n                };\n\n                if (containerId) {\n                  payload.container_id = containerId;\n                }\n\n                _context3.next = 7;\n                return this.createContainer(payload);\n\n              case 7:\n                result = _context3.sent;\n                this.isContainerCreating = false;\n\n                if (result.success) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                this.$toast.open({\n                  type: 'error',\n                  message: result.message\n                });\n                return _context3.abrupt(\"return\");\n\n              case 12:\n                if (!containerId) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                _context3.next = 15;\n                return this.init();\n\n              case 15:\n                this.$toast.open({\n                  type: 'success',\n                  message: \"Th\\xEAm \\u0111\\u01A1n h\\xE0ng v\\xE0o delivery order \".concat(containerId, \" th\\xE0nh c\\xF4ng\")\n                });\n                this.isVisibleCreateOrderAppendContainer = false;\n                return _context3.abrupt(\"return\");\n\n              case 18:\n                this.$toast.open({\n                  type: 'success',\n                  message: 'Delivery order đã được tạo thành công'\n                });\n                this.$router.push({\n                  name: 'container-view',\n                  params: {\n                    id: result.id\n                  }\n                });\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function handleCreateContainer(_x) {\n        return _handleCreateContainer.apply(this, arguments);\n      }\n\n      return handleCreateContainer;\n    }(),\n    handleImportOrder: function () {\n      var _handleImportOrder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(file) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.importOrder.file = file;\n\n                if (this.validateImportOrder()) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 3:\n                this.importOrder.file = file;\n                this.isUploading = true;\n                _context4.next = 7;\n                return this.importOrders({\n                  file: this.importOrder.file,\n                  shop_id: this.importOrder.shop_id\n                });\n\n              case 7:\n                this.resultImport = _context4.sent;\n                this.isVisibleImport = false;\n                this.isVisiblePreview = true;\n\n                if (!(this.resultImport && this.resultImport.success)) {\n                  _context4.next = 13;\n                  break;\n                }\n\n                this.isUploading = false;\n                return _context4.abrupt(\"return\");\n\n              case 13:\n                this.$toast.open({\n                  type: 'error',\n                  message: this.resultImport.message || 'File không đúng định dạng'\n                });\n                this.isUploading = false;\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function handleImportOrder(_x2) {\n        return _handleImportOrder.apply(this, arguments);\n      }\n\n      return handleImportOrder;\n    }(),\n    handleImportFile: function () {\n      var _handleImportFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var payload;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                payload = {\n                  file_url: this.resultPreview.file_url,\n                  total_order: this.resultPreview.total_order,\n                  create_container: this.importOrder.create_container\n                };\n                this.isImporting = true;\n                _context5.next = 4;\n                return this.importOrders(payload);\n\n              case 4:\n                this.resultImport = _context5.sent;\n\n                if (!(this.resultImport && this.resultImport.success)) {\n                  _context5.next = 15;\n                  break;\n                }\n\n                if (!this.resultImport.container_id) {\n                  _context5.next = 10;\n                  break;\n                }\n\n                this.$toast.open({\n                  type: 'success',\n                  message: 'Thêm đơn hàng thành công'\n                });\n                this.$router.push({\n                  name: 'container-view',\n                  params: {\n                    id: this.resultImport.container_id\n                  }\n                });\n                return _context5.abrupt(\"return\");\n\n              case 10:\n                this.handleResetImportFile();\n                this.isVisiblePreview = false;\n                this.isImporting = false;\n                this.$dialog.alert({\n                  title: 'Import orders',\n                  message: 'Chúng tôi hiện đang import lên hệ thống. Điều này sẽ mất ít thời gian. Một email sẽ được gửi cho bạn sau khi quá trình import hoàn tất.'\n                });\n                return _context5.abrupt(\"return\");\n\n              case 15:\n                this.$toast.open({\n                  type: 'error',\n                  message: this.resultImport.message\n                });\n\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function handleImportFile() {\n        return _handleImportFile.apply(this, arguments);\n      }\n\n      return handleImportFile;\n    }(),\n    handleResetImportFile: function handleResetImportFile() {\n      this.$set(this, 'resultPreview', {});\n      this.file = null;\n      this.isVisiblePreview = false;\n    },\n    handleCloseImportFile: function handleCloseImportFile() {\n      this.file = null;\n      this.isVisibleImport = false;\n    },\n    visibleImportModal: function visibleImportModal() {\n      this.isVisibleImport = true;\n    },\n    importTrackingSuccessful: function importTrackingSuccessful() {\n      return this.init();\n    },\n    validateImportOrder: function validateImportOrder() {\n      this.$set(this.importOrderErrors, 'file', !this.importOrder.file ? '*Chưa có file' : '');\n      return !Object.values(this.importOrderErrors).filter(Boolean).length;\n    },\n    handleExportOrders: function () {\n      var _handleExportOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.exportOrders(this.selectedIds);\n\n              case 2:\n                result = _context6.sent;\n                this.exportFile(result, \"orders.csv\", ORDER_EXPORT_BUCKET);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function handleExportOrders() {\n        return _handleExportOrders.apply(this, arguments);\n      }\n\n      return handleExportOrders;\n    }(),\n    getSKU: function getSKU(order) {\n      if (order && order.order_items) {\n        return order.order_items.map(function (_ref3) {\n          var sku = _ref3.sku;\n          return sku;\n        }).filter(function (sku) {\n          return sku;\n        }).join(', ');\n      }\n    }\n  }),\n  watch: {\n    filter: {\n      handler: function handler() {\n        this.init();\n      },\n      deep: true\n    }\n  }\n};",null]}