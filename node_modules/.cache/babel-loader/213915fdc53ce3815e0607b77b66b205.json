{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/uikit/components/tabs/Tabs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/uikit/components/tabs/Tabs.vue","mtime":1604479002001},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Icon from '../icon/Icon';\nexport default {\n  name: 'PTabs',\n  components: {\n    PIcon: Icon\n  },\n  props: {\n    value: Number,\n    type: String,\n    size: String,\n    expanded: Boolean,\n    position: String,\n    animated: {\n      type: Boolean,\n      default: true\n    },\n    itemClass: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      activeTab: this.value || 0,\n      tabItems: []\n    };\n  },\n  methods: {\n    changeTab: function changeTab(newIndex) {\n      if (this.activeTab === newIndex) return;\n\n      if (this.activeTab < this.tabItems.length) {\n        this.tabItems[this.activeTab].deactivate(this.activeTab, newIndex);\n      }\n\n      if (this.tabItems[newIndex]) {\n        this.tabItems[newIndex].activate(this.activeTab, newIndex);\n        var oldIndex = this.activeTab;\n        this.activeTab = newIndex;\n        this.$emit('change', newIndex, oldIndex);\n      }\n    },\n    tabClick: function tabClick(value) {\n      this.$emit('input', value);\n      this.changeTab(value);\n    }\n  },\n  watch: {\n    value: function value(_value) {\n      this.changeTab(_value);\n    },\n    tabItems: function tabItems() {\n      if (this.activeTab < this.tabItems.length) {\n        this.tabItems[this.activeTab].isActive = true;\n      }\n    }\n  },\n  mounted: function mounted() {\n    if (this.activeTab < this.tabItems.length) {\n      this.tabItems[this.activeTab].isActive = true;\n    }\n  }\n};",null]}