{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/contest/store/index.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/contest/store/index.js","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport api from '../api';\nexport var FETCH_POINT = 'fetchUserPoint';\nexport var state = {\n  user_point: {\n    point: 0\n  }\n};\nexport var mutations = _defineProperty({}, FETCH_POINT, function (state, payload) {\n  state.user_point = payload;\n});\nexport var actions = {\n  /**\n   * Fetch current prize\n   * @param commit\n   * @param payload\n   * @returns {Promise<boolean>}\n   */\n  fetchUserPoint: function () {\n    var _fetchUserPoint = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var commit, userPoint, isSuccess, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              userPoint = {};\n              isSuccess = false;\n              _context.next = 5;\n              return api.fetchUserPoint();\n\n            case 5:\n              response = _context.sent;\n\n              if (response && !response.error) {\n                userPoint = response.user_point;\n                isSuccess = true;\n              }\n\n              commit(FETCH_POINT, userPoint);\n              return _context.abrupt(\"return\", isSuccess);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function fetchUserPoint(_x) {\n      return _fetchUserPoint.apply(this, arguments);\n    }\n\n    return fetchUserPoint;\n  }()\n};",{"version":3,"sources":["/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/contest/store/index.js"],"names":["api","FETCH_POINT","state","user_point","point","mutations","payload","actions","fetchUserPoint","commit","userPoint","isSuccess","response","error"],"mappings":";;;;;;;;AAAA,OAAOA,GAAP,MAAgB,QAAhB;AAEA,OAAO,IAAMC,WAAW,GAAG,gBAApB;AAEP,OAAO,IAAMC,KAAK,GAAG;AACnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AADG;AADO,CAAd;AAMP,OAAO,IAAMC,SAAS,uBACnBJ,WADmB,YACNC,KADM,EACCI,OADD,EACU;AAC5BJ,EAAAA,KAAK,CAACC,UAAN,GAAmBG,OAAnB;AACD,CAHmB,CAAf;AAMP,OAAO,IAAMC,OAAO,GAAG;AACrB;;;;;;AAMMC,EAAAA,cAPe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOEC,cAAAA,MAPF,QAOEA,MAPF;AAQfC,cAAAA,SARe,GAQH,EARG;AASfC,cAAAA,SATe,GASH,KATG;AAAA;AAAA,qBAUIX,GAAG,CAACQ,cAAJ,EAVJ;;AAAA;AAUbI,cAAAA,QAVa;;AAWnB,kBAAIA,QAAQ,IAAI,CAACA,QAAQ,CAACC,KAA1B,EAAiC;AAC/BH,gBAAAA,SAAS,GAAGE,QAAQ,CAACT,UAArB;AACAQ,gBAAAA,SAAS,GAAG,IAAZ;AACD;;AAEDF,cAAAA,MAAM,CAACR,WAAD,EAAcS,SAAd,CAAN;AAhBmB,+CAkBZC,SAlBY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAhB","sourcesContent":["import api from '../api'\n\nexport const FETCH_POINT = 'fetchUserPoint'\n\nexport const state = {\n  user_point: {\n    point: 0,\n  },\n}\n\nexport const mutations = {\n  [FETCH_POINT](state, payload) {\n    state.user_point = payload\n  },\n}\n\nexport const actions = {\n  /**\n   * Fetch current prize\n   * @param commit\n   * @param payload\n   * @returns {Promise<boolean>}\n   */\n  async fetchUserPoint({ commit }) {\n    let userPoint = {}\n    let isSuccess = false\n    const response = await api.fetchUserPoint()\n    if (response && !response.error) {\n      userPoint = response.user_point\n      isSuccess = true\n    }\n\n    commit(FETCH_POINT, userPoint)\n\n    return isSuccess\n  },\n}\n"]}]}