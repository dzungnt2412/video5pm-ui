{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/views/ContainerView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/views/ContainerView.vue","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*eslint-disable*/\nimport { mapState, mapActions } from 'vuex';\nimport { VclTable } from 'vue-content-loading';\nimport { cloneDeep } from '@core/utils';\nimport { ORDER_STATUS_CANCELED, ORDER_STATUS_PAID } from '@core/constants';\nimport mixinRoute from '@core/mixins/route';\nimport mixinTable from '@core/mixins/table';\nimport { FETCH_CONTAINER, FETCH_ORDERS, FETCH_ORDER, UPDATE_ORDER } from '@/packages/container/store/types';\nimport mixinUpdateOrder from '../mixins/update-order';\nimport { Pagination } from '@kit';\nimport Accordion from '@kit/Accordion';\nimport AccordionItem from '@kit/AccordionItem';\nimport { formatPrice } from '@core/utils/formatter';\nimport { FETCH_PRODUCT_TYPES, FETCH_USERS_BY_ROLE } from '@/packages/shared/store';\nimport Thumbnail from '@components/shared/Thumbnail';\nimport mixinContainer from '../mixins/container';\nimport { ORDER_STATUS } from '../constants';\nimport StatusTab from '@components/shared/StatusTab';\nimport OrderItems from './components/OrderItems';\nimport ModalUpdateOrdersWrong from './components/ModalUpdateOrdersWrong';\nimport ModalUpdateOrder from './components/ModalUpdateOrder';\nexport default {\n  name: 'ContainerView',\n  mixins: [mixinRoute, mixinTable, mixinContainer, mixinUpdateOrder],\n  components: {\n    StatusTab: StatusTab,\n    Thumbnail: Thumbnail,\n    OrderItems: OrderItems,\n    Accordion: Accordion,\n    AccordionItem: AccordionItem,\n    ModalUpdateOrdersWrong: ModalUpdateOrdersWrong,\n    ModalUpdateOrder: ModalUpdateOrder,\n    Pagination: Pagination,\n    VclTable: VclTable\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, mapState('container', {\n    container: function container(state) {\n      return state.container;\n    },\n    currentOrders: function currentOrders(state) {\n      return state.orders;\n    },\n    count: function count(state) {\n      return state.orderCount;\n    },\n    order: function order(state) {\n      return state.order;\n    },\n    consignments: function consignments(state) {\n      return state.consignments;\n    }\n  })), mapState('shared', {\n    productTypes: function productTypes(state) {\n      return state.productTypes;\n    },\n    supplierUsers: function supplierUsers(state) {\n      return state.users;\n    }\n  })), mapState('design', {\n    designs: function designs(state) {\n      return state.designs;\n    }\n  })), {}, {\n    containerId: function containerId() {\n      return parseInt(this.$route.params.id, 10);\n    },\n    isVisibleStatisticSection: function isVisibleStatisticSection() {\n      var status = ['pending', 'draft', 'canceled'];\n      return this.statisticsProductBases && this.statisticsProductBases.length && status.indexOf(this.order.status) === -1;\n    },\n    wrongOrders: function wrongOrders() {\n      var _this = this;\n\n      return this.orders.filter(function (_ref) {\n        var id = _ref.id;\n        return _this.wrongOrderIds.indexOf(id) !== -1;\n      });\n    },\n    isVisibleActions: function isVisibleActions() {\n      return this.container && this.container.status !== ORDER_STATUS_CANCELED;\n    },\n    shopId: function shopId() {\n      return this.container && this.container.shop ? this.container.shop.id : 0;\n    },\n    user: function user() {\n      return this.container.shop && this.container.shop.user ? this.container.shop.user : {};\n    },\n    statisticsProductBases: function statisticsProductBases() {\n      return this.container && this.container.product_bases ? this.container.product_bases.filter(function (item) {\n        return item.id;\n      }) : [];\n    },\n    orderStatus: function orderStatus() {\n      return ORDER_STATUS;\n    },\n    statisticTotalShippingFees: function statisticTotalShippingFees() {\n      return this.statisticsProductBases ? this.statisticsProductBases.reduce(function (total, item) {\n        return total + item.shipping_fee * item.qty;\n      }, 0) : 0;\n    },\n    statisticTotalAmount: function statisticTotalAmount() {\n      return this.statisticsProductBases ? this.statisticsProductBases.reduce(function (amount, item) {\n        return amount + item.price * item.qty;\n      }, 0) : 0;\n    },\n    items: function items() {\n      var items = [];\n      this.orders.forEach(function (order) {\n        order.order_items.forEach(function (item) {\n          items.push({\n            id: item.id,\n            order_id: item.order_id,\n            consignment_id: item.consignment_id,\n            name: item.name,\n            image: item.image,\n            sku: item.sku,\n            product_type: item.product_type,\n            price: item.price,\n            quantity: item.quantity,\n            attribute: item.attribute,\n            shipping_method: order.shipping_method,\n            shipping_fee: item.shipping_fee,\n            order_status: item.shipping_fee\n          });\n        });\n      });\n      return items;\n    }\n  }),\n  data: function data() {\n    return {\n      isFetching: true,\n      isOrderFetching: true,\n      isOrdersFetching: true,\n      resultFetchOrder: {},\n      isVisibleSelectSupplier: false,\n      isSupplierAssigning: false,\n      isExpandOrders: false,\n      orders: [],\n      isVisibleUpdateOrder: false,\n      isVisibleUpdateOrdersWrong: false,\n      isOrderUpdating: false,\n      wrongOrderIds: [],\n      updateOrderIds: [],\n      isVisibleAppendConsignment: false,\n      isVisibleUpdateOrderStatus: false,\n      styleTable: 0\n    };\n  },\n  created: function created() {\n    this.filter = this.getRouteQuery();\n    this.init();\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, mapActions('container', [FETCH_CONTAINER, FETCH_ORDERS, FETCH_ORDER, UPDATE_ORDER])), mapActions('design', ['fetchDesigns'])), mapActions('shared', [FETCH_PRODUCT_TYPES, FETCH_USERS_BY_ROLE])), {}, {\n    formatPrice: formatPrice,\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Promise.all([this.handleFetchContainer(), this.handleFetchOrders()]);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    handleFetchContainer: function () {\n      var _handleFetchContainer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.isFetching = true;\n                _context2.next = 3;\n                return this.fetchContainer(this.containerId);\n\n              case 3:\n                result = _context2.sent;\n\n                if (!result.success) {\n                  this.$toast.open({\n                    message: result.message,\n                    type: 'error'\n                  });\n                }\n\n                this.isFetching = false;\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleFetchContainer() {\n        return _handleFetchContainer.apply(this, arguments);\n      }\n\n      return handleFetchContainer;\n    }(),\n    handleFetchOrders: function () {\n      var _handleFetchOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.isExpandOrders = false;\n                this.isOrdersFetching = true;\n                this.handleUpdateRouteQuery();\n                _context3.next = 5;\n                return this.fetchOrders(Object.assign({\n                  container_id: this.containerId\n                }, this.filter));\n\n              case 5:\n                this.resultFetchOrder = _context3.sent;\n                this.isExpandOrders = true;\n                this.isOrdersFetching = false;\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function handleFetchOrders() {\n        return _handleFetchOrders.apply(this, arguments);\n      }\n\n      return handleFetchOrders;\n    }(),\n    handleFetchOrder: function () {\n      var _handleFetchOrder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(orderId) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.isOrderFetching = true;\n                _context4.next = 3;\n                return this.fetchOrder(orderId);\n\n              case 3:\n                result = _context4.sent;\n\n                if (result.success) {\n                  this.handleVisibleModalUpdateOrder();\n                } else {\n                  this.$toast.open({\n                    type: 'error',\n                    message: result.message\n                  });\n                }\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function handleFetchOrder(_x) {\n        return _handleFetchOrder.apply(this, arguments);\n      }\n\n      return handleFetchOrder;\n    }(),\n    handleSelectedDesign: function handleSelectedDesign(_ref2) {\n      var url = _ref2.url,\n          orderId = _ref2.orderId,\n          design = _ref2.design,\n          item = _ref2.item;\n      this.handleUpdateOrderItem(orderId, item, {\n        design_id: design.id,\n        design: design,\n        image: url\n      });\n    },\n    handleUpdateOrderItem: function handleUpdateOrderItem(orderId, item, val) {\n      var index = this.orders.findIndex(function (_ref3) {\n        var id = _ref3.id;\n        return id === orderId;\n      });\n\n      if (index === -1) {\n        return;\n      }\n\n      var orderItems = this.orders[index].order_items;\n      var indexItem = orderItems.findIndex(function (_ref4) {\n        var id = _ref4.id;\n        return id === item.id;\n      });\n\n      if (indexItem !== -1) {\n        var newVal = Object.assign({}, orderItems[indexItem], val);\n        this.$set(this.orders[index].order_items, indexItem, newVal);\n        this.isVisibleUpdateOrder = true;\n        this.updateOrderIds.push(orderId);\n      }\n    },\n\n    /**\n     * Handle update multiple orders\n     * @param exceptSuccess\n     * @return {Promise<void>}\n     */\n    handleUpdateOrders: function () {\n      var _handleUpdateOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var _this2 = this;\n\n        var exceptSuccess,\n            orders,\n            promises,\n            result,\n            wrongOrderIds,\n            _args5 = arguments;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                exceptSuccess = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : false;\n                orders = [];\n                this.orders.forEach(function (order) {\n                  if (_this2.updateOrderIds.indexOf(order.id) !== -1 && (!exceptSuccess || _this2.wrongOrderIds.indexOf(order.id) !== -1)) {\n                    orders.push(order);\n                  }\n                });\n\n                if (orders.length) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 5:\n                promises = [];\n                orders.forEach(function (order) {\n                  promises.push(_this2.updateOrder(order));\n                });\n                this.isOrderUpdating = true;\n                _context5.next = 10;\n                return Promise.all(promises);\n\n              case 10:\n                result = _context5.sent;\n                this.isOrderUpdating = false; // Result\n\n                if (!(result && Array.isArray(result))) {\n                  _context5.next = 27;\n                  break;\n                }\n\n                wrongOrderIds = result.filter(function (_ref5) {\n                  var success = _ref5.success;\n                  return success === false;\n                }).map(function (_ref6) {\n                  var id = _ref6.id;\n                  return id;\n                });\n\n                if (!(wrongOrderIds.length === 0)) {\n                  _context5.next = 25;\n                  break;\n                }\n\n                this.updateOrderIds = [];\n                this.wrongOrderIds = [];\n                this.isVisibleUpdateOrdersWrong = false;\n                this.isVisibleUpdateOrder = false;\n                _context5.next = 21;\n                return this.handleFetchOrders();\n\n              case 21:\n                _context5.next = 23;\n                return this.handleFetchContainer();\n\n              case 23:\n                this.$toast.open({\n                  type: 'success',\n                  message: 'Cập nhập order thành công'\n                });\n                return _context5.abrupt(\"return\");\n\n              case 25:\n                this.isVisibleUpdateOrdersWrong = true;\n                this.wrongOrderIds = wrongOrderIds;\n\n              case 27:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function handleUpdateOrders() {\n        return _handleUpdateOrders.apply(this, arguments);\n      }\n\n      return handleUpdateOrders;\n    }(),\n    handleUpdateOrder: function () {\n      var _handleUpdateOrder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(order) {\n        var payload;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                payload = cloneDeep(order);\n                delete payload.order_items;\n                this.isOrderUpdating = true;\n                _context6.next = 5;\n                return this.updateOrder(payload);\n\n              case 5:\n                this.resultUpdate = _context6.sent;\n\n                if (!(this.resultUpdate && this.resultUpdate.success)) {\n                  _context6.next = 13;\n                  break;\n                }\n\n                this.isOrderUpdating = false;\n                this.isVisibleEditOrder = false;\n                _context6.next = 11;\n                return this.handleFetchContainer();\n\n              case 11:\n                this.$toast.open({\n                  type: 'success',\n                  message: 'Cập nhập order item thành công'\n                });\n                return _context6.abrupt(\"return\");\n\n              case 13:\n                this.$toast.open({\n                  type: 'error',\n                  message: this.resultUpdate.message\n                });\n                this.isOrderUpdating = false;\n\n              case 15:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function handleUpdateOrder(_x2) {\n        return _handleUpdateOrder.apply(this, arguments);\n      }\n\n      return handleUpdateOrder;\n    }(),\n    getOrderTitle: function getOrderTitle(order) {\n      var title = \"| \".concat(order.country_code, \" | \").concat(order.shipping_method);\n\n      if (order.fulfillments.length) {\n        var items = order.fulfillments.map(function (item) {\n          return item.tracking_number;\n        });\n        title += \" | \".concat(items.toString());\n      }\n\n      return title;\n    },\n    toggleOpen: function toggleOpen(action) {\n      this.isExpandOrders = action === 'expand';\n    }\n  }),\n  watch: {\n    currentOrders: {\n      handler: function handler(val) {\n        if (val) {\n          this.orders = cloneDeep(val);\n        }\n      },\n      immediate: true\n    },\n    filter: {\n      handler: function handler() {\n        this.handleFetchOrders();\n      },\n      immediate: true,\n      deep: true\n    }\n  }\n};",{"version":3,"sources":["ContainerView.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <PageDetailLoading v-if=\"isFetching\"></PageDetailLoading>\n  <div class=\"order-view-page page\" v-else>\n    <UnsavedBar\n      :show=\"isVisibleUpdateOrder\"\n      @save=\"handleUpdateOrders(false)\"\n      title=\"Cập nhập đơn hàng\"\n    ></UnsavedBar>\n    <div class=\"page-header\">\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <p-button icon=\"chevron-left\" class=\"btn-pure pl-0\">\n              <router-link :to=\"{ name: 'container-list' }\">\n                Delivery order\n              </router-link>\n            </p-button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"page-content\">\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div\n              class=\"d-flex align-items-center justify-content-between flex-wrap\"\n            >\n              <div class=\"order-metadata d-flex align-items-center\">\n                <h4 class=\"order-number\">{{ container.id }}</h4>\n                <span class=\"order-date ml-10 mr-10\">\n                  {{ container.created_at | datetime }}\n                </span>\n                <span v-status:status=\"container.status\" class=\"ml-10\"></span>\n              </div>\n              <div class=\"order-metadata d-flex align-items-center\">\n                <p-button\n                  @click=\"confirmUpdateContainer('canceled')\"\n                  v-if=\"isAllowUpdateCancel\"\n                  class=\"ml-10\"\n                  type=\"danger\"\n                  :disabled=\"isContainerUpdating\"\n                >\n                  Cancel\n                </p-button>\n              </div>\n            </div>\n            <div class=\"row mt-15\">\n              <div\n                class=\"col-12\"\n                :class=\"{ 'col-md-8': isVisibleStatisticSection }\"\n              >\n                <section class=\"card section-order-items\">\n                  <div class=\"card-block\">\n                    <template>\n                      <div>\n                        <status-tab\n                          v-model=\"filter.status\"\n                          :status=\"orderStatus\"\n                        ></status-tab>\n                        <p-input\n                          placeholder=\"Tìm kiếm theo mã đơn hàng\"\n                          prefixIcon=\"search\"\n                          class=\"mb-20\"\n                          type=\"search\"\n                          :value=\"filter.search\"\n                          @keyup.enter=\"handleSearch\"\n                        >\n                          <template slot=\"append\">\n                            <p-button\n                              type=\"default\"\n                              icon=\"close\"\n                              v-if=\"filter.search\"\n                              @click=\"clearSearch\"\n                            ></p-button>\n                          </template>\n                        </p-input>\n                      </div>\n                    </template>\n                    <VclTable class=\"my-20\" v-if=\"isOrdersFetching\"> </VclTable>\n                    <template>\n                      <div v-for=\"(order, i) in orders\" :key=\"i\" class=\"mb-30\">\n                        <div\n                          class=\"d-flex align-items-center justify-content-between\"\n                        >\n                          <div class=\"d-flex align-items-center\">\n                            <div class=\"d-flex align-items-center flex-wrap\">\n                              <span class=\"font-size-16 mr-10\">{{\n                                order.id\n                              }}</span>\n                              <router-link\n                                class=\" font-size-16 mr-10 text-no-underline\"\n                                target=\"_blank\"\n                                :to=\"{\n                                  name: 'order-view',\n                                  params: { id: order.id },\n                                }\"\n                              >\n                                | {{ order.ref_id }}\n                              </router-link>\n                              <span class=\"font-size-16 mr-10\">{{\n                                getOrderTitle(order)\n                              }}</span>\n                              <span\n                                v-status:status=\"order.status\"\n                                class=\"mr-10\"\n                              >\n                                {{ order.status }}\n                              </span>\n                            </div>\n                          </div>\n                          <div class=\"actions mr-20\">\n                            <p-tooltip\n                              label=\"Sửa đơn hàng\"\n                              position=\"top\"\n                              type=\"dark\"\n                            >\n                              <p-button\n                                size=\"xs\"\n                                type=\"default\"\n                                icon=\"pencil\"\n                                @click=\"handleFetchOrder(order.id)\"\n                                v-if=\"isAllowUpdateOrder(order)\"\n                              >\n                              </p-button>\n                            </p-tooltip>\n                          </div>\n                        </div>\n                        <order-items\n                          :display=\"'container'\"\n                          :order=\"order\"\n                          :order-id=\"order.id\"\n                          :items=\"order.order_items\"\n                          :designs=\"designs\"\n                          :shop-id=\"shopId\"\n                          :fetch-designs=\"fetchDesigns\"\n                          :is-allow-update=\"isAllowUpdateOrder(order)\"\n                          @selectedDesign=\"handleSelectedDesign\"\n                        />\n                      </div>\n\n                      <div\n                        class=\"d-flex justify-content-between align-items-center\"\n                      >\n                        <span>\n                          {{ paginationLabel }}\n                        </span>\n                        <p-pagination\n                          :total=\"count\"\n                          :perPage=\"filter.limit\"\n                          :current.sync=\"filter.page\"\n                          size=\"sm\"\n                        >\n                        </p-pagination>\n                      </div>\n                    </template>\n                  </div>\n                </section>\n              </div>\n              <div class=\"col-12 col-md-4\" v-if=\"isVisibleStatisticSection\">\n                <section class=\"card section-order-items\">\n                  <div class=\"card-block\">\n                    <div class=\"card-title d-flex justify-content-between\">\n                      <h4>Thống kê sản phẩm</h4>\n                    </div>\n                    <div class=\"table-responsive\">\n                      <table class=\"table table-hover\">\n                        <thead>\n                          <tr>\n                            <th>Tên</th>\n                            <th>SL</th>\n                            <th>Đơn giá</th>\n                            <th class=\"text-right\">Thành tiền</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr\n                            v-for=\"(item, i) in statisticsProductBases\"\n                            :key=\"i\"\n                          >\n                            <td>{{ item.name }}</td>\n                            <td>{{ item.qty }}</td>\n                            <td>{{ item.price | formatPrice }}</td>\n                            <td class=\"text-right\">\n                              {{ (item.price * item.qty) | formatPrice }}\n                            </td>\n                          </tr>\n                        </tbody>\n                        <tfoot>\n                          <tr>\n                            <td colspan=\"3\">Tổng tiền sản phẩm</td>\n                            <td class=\"text-right\">\n                              <strong>{{\n                                statisticTotalAmount | formatPrice\n                              }}</strong>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td colspan=\"3\">Tổng tiền vận chuyển</td>\n                            <td class=\"text-right\">\n                              <strong>\n                                {{ container.total_shipping_fee | formatPrice }}\n                              </strong>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td colspan=\"3\">Tổng tất cả</td>\n                            <td class=\"text-right\">\n                              <strong>\n                                {{\n                                  (statisticTotalAmount +\n                                    container.total_shipping_fee)\n                                    | formatPrice\n                                }}\n                              </strong>\n                            </td>\n                          </tr>\n                        </tfoot>\n                      </table>\n                    </div>\n                  </div>\n                </section>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <modal-update-orders-wrong\n      :visible.sync=\"isVisibleUpdateOrdersWrong\"\n      :orders=\"wrongOrders\"\n      :loading=\"isOrderUpdating\"\n      @tryAgain=\"handleUpdateOrders(true)\"\n      v-if=\"isVisibleUpdateOrdersWrong\"\n    />\n\n    <modal-update-order\n      :visible.sync=\"isVisibleEditOrder\"\n      :current=\"order\"\n      :countries=\"countries\"\n      :loading=\"isOrderUpdating\"\n      @save=\"handleUpdateOrder\"\n      v-if=\"isVisibleEditOrder\"\n    />\n  </div>\n</template>\n<script>\n/*eslint-disable*/\nimport { mapState, mapActions } from 'vuex'\nimport { VclTable } from 'vue-content-loading'\nimport { cloneDeep } from '@core/utils'\nimport { ORDER_STATUS_CANCELED, ORDER_STATUS_PAID } from '@core/constants'\nimport mixinRoute from '@core/mixins/route'\nimport mixinTable from '@core/mixins/table'\nimport {\n  FETCH_CONTAINER,\n  FETCH_ORDERS,\n  FETCH_ORDER,\n  UPDATE_ORDER,\n} from '@/packages/container/store/types'\nimport mixinUpdateOrder from '../mixins/update-order'\nimport { Pagination } from '@kit'\nimport Accordion from '@kit/Accordion'\nimport AccordionItem from '@kit/AccordionItem'\nimport { formatPrice } from '@core/utils/formatter'\nimport {\n  FETCH_PRODUCT_TYPES,\n  FETCH_USERS_BY_ROLE,\n} from '@/packages/shared/store'\nimport Thumbnail from '@components/shared/Thumbnail'\nimport mixinContainer from '../mixins/container'\nimport { ORDER_STATUS } from '../constants'\nimport StatusTab from '@components/shared/StatusTab'\nimport OrderItems from './components/OrderItems'\nimport ModalUpdateOrdersWrong from './components/ModalUpdateOrdersWrong'\nimport ModalUpdateOrder from './components/ModalUpdateOrder'\n\nexport default {\n  name: 'ContainerView',\n  mixins: [mixinRoute, mixinTable, mixinContainer, mixinUpdateOrder],\n  components: {\n    StatusTab,\n    Thumbnail,\n    OrderItems,\n    Accordion,\n    AccordionItem,\n    ModalUpdateOrdersWrong,\n    ModalUpdateOrder,\n    Pagination,\n    VclTable,\n  },\n  computed: {\n    ...mapState('container', {\n      container: (state) => state.container,\n      currentOrders: (state) => state.orders,\n      count: (state) => state.orderCount,\n      order: (state) => state.order,\n      consignments: (state) => state.consignments,\n    }),\n    ...mapState('shared', {\n      productTypes: (state) => state.productTypes,\n      supplierUsers: (state) => state.users,\n    }),\n    ...mapState('design', {\n      designs: (state) => state.designs,\n    }),\n\n    containerId() {\n      return parseInt(this.$route.params.id, 10)\n    },\n\n    isVisibleStatisticSection() {\n      const status = ['pending', 'draft', 'canceled']\n      return (\n        this.statisticsProductBases &&\n        this.statisticsProductBases.length &&\n        status.indexOf(this.order.status) === -1\n      )\n    },\n\n    wrongOrders() {\n      return this.orders.filter(\n        ({ id }) => this.wrongOrderIds.indexOf(id) !== -1\n      )\n    },\n\n    isVisibleActions() {\n      return this.container && this.container.status !== ORDER_STATUS_CANCELED\n    },\n\n    shopId() {\n      return this.container && this.container.shop ? this.container.shop.id : 0\n    },\n\n    user() {\n      return this.container.shop && this.container.shop.user\n        ? this.container.shop.user\n        : {}\n    },\n    statisticsProductBases() {\n      return this.container && this.container.product_bases\n        ? this.container.product_bases.filter((item) => item.id)\n        : []\n    },\n    orderStatus() {\n      return ORDER_STATUS\n    },\n    statisticTotalShippingFees() {\n      return this.statisticsProductBases\n        ? this.statisticsProductBases.reduce(\n            (total, item) => total + item.shipping_fee * item.qty,\n            0\n          )\n        : 0\n    },\n    statisticTotalAmount() {\n      return this.statisticsProductBases\n        ? this.statisticsProductBases.reduce(\n            (amount, item) => amount + item.price * item.qty,\n            0\n          )\n        : 0\n    },\n    items() {\n      const items = []\n      this.orders.forEach((order) => {\n        order.order_items.forEach((item) => {\n          items.push({\n            id: item.id,\n            order_id: item.order_id,\n            consignment_id: item.consignment_id,\n            name: item.name,\n            image: item.image,\n            sku: item.sku,\n            product_type: item.product_type,\n            price: item.price,\n            quantity: item.quantity,\n            attribute: item.attribute,\n            shipping_method: order.shipping_method,\n            shipping_fee: item.shipping_fee,\n            order_status: item.shipping_fee,\n          })\n        })\n      })\n\n      return items\n    },\n  },\n  data() {\n    return {\n      isFetching: true,\n      isOrderFetching: true,\n      isOrdersFetching: true,\n      resultFetchOrder: {},\n      isVisibleSelectSupplier: false,\n      isSupplierAssigning: false,\n      isExpandOrders: false,\n      orders: [],\n      isVisibleUpdateOrder: false,\n      isVisibleUpdateOrdersWrong: false,\n      isOrderUpdating: false,\n      wrongOrderIds: [],\n      updateOrderIds: [],\n      isVisibleAppendConsignment: false,\n      isVisibleUpdateOrderStatus: false,\n      styleTable: 0,\n    }\n  },\n  created() {\n    this.filter = this.getRouteQuery()\n    this.init()\n  },\n  methods: {\n    ...mapActions('container', [\n      FETCH_CONTAINER,\n      FETCH_ORDERS,\n      FETCH_ORDER,\n      UPDATE_ORDER,\n    ]),\n    ...mapActions('design', ['fetchDesigns']),\n    ...mapActions('shared', [FETCH_PRODUCT_TYPES, FETCH_USERS_BY_ROLE]),\n    formatPrice,\n\n    async init() {\n      await Promise.all([this.handleFetchContainer(), this.handleFetchOrders()])\n    },\n\n    async handleFetchContainer() {\n      this.isFetching = true\n      const result = await this.fetchContainer(this.containerId)\n\n      if (!result.success) {\n        this.$toast.open({ message: result.message, type: 'error' })\n      }\n\n      this.isFetching = false\n    },\n\n    async handleFetchOrders() {\n      this.isExpandOrders = false\n      this.isOrdersFetching = true\n      this.handleUpdateRouteQuery()\n      this.resultFetchOrder = await this.fetchOrders(\n        Object.assign({ container_id: this.containerId }, this.filter)\n      )\n      this.isExpandOrders = true\n      this.isOrdersFetching = false\n    },\n\n    async handleFetchOrder(orderId) {\n      this.isOrderFetching = true\n      const result = await this.fetchOrder(orderId)\n\n      if (result.success) {\n        this.handleVisibleModalUpdateOrder()\n      } else {\n        this.$toast.open({ type: 'error', message: result.message })\n      }\n    },\n\n    handleSelectedDesign({ url, orderId, design, item }) {\n      this.handleUpdateOrderItem(orderId, item, {\n        design_id: design.id,\n        design,\n        image: url,\n      })\n    },\n\n    handleUpdateOrderItem(orderId, item, val) {\n      const index = this.orders.findIndex(({ id }) => id === orderId)\n\n      if (index === -1) {\n        return\n      }\n\n      const orderItems = this.orders[index].order_items\n      const indexItem = orderItems.findIndex(({ id }) => id === item.id)\n\n      if (indexItem !== -1) {\n        const newVal = Object.assign({}, orderItems[indexItem], val)\n        this.$set(this.orders[index].order_items, indexItem, newVal)\n        this.isVisibleUpdateOrder = true\n        this.updateOrderIds.push(orderId)\n      }\n    },\n\n    /**\n     * Handle update multiple orders\n     * @param exceptSuccess\n     * @return {Promise<void>}\n     */\n    async handleUpdateOrders(exceptSuccess = false) {\n      const orders = []\n      this.orders.forEach((order) => {\n        if (\n          this.updateOrderIds.indexOf(order.id) !== -1 &&\n          (!exceptSuccess || this.wrongOrderIds.indexOf(order.id) !== -1)\n        ) {\n          orders.push(order)\n        }\n      })\n\n      if (!orders.length) {\n        return\n      }\n\n      const promises = []\n      orders.forEach((order) => {\n        promises.push(this.updateOrder(order))\n      })\n\n      this.isOrderUpdating = true\n      let result = await Promise.all(promises)\n      this.isOrderUpdating = false\n\n      // Result\n      if (result && Array.isArray(result)) {\n        const wrongOrderIds = result\n          .filter(({ success }) => success === false)\n          .map(({ id }) => id)\n\n        if (wrongOrderIds.length === 0) {\n          this.updateOrderIds = []\n          this.wrongOrderIds = []\n          this.isVisibleUpdateOrdersWrong = false\n          this.isVisibleUpdateOrder = false\n          await this.handleFetchOrders()\n          await this.handleFetchContainer()\n          this.$toast.open({\n            type: 'success',\n            message: 'Cập nhập order thành công',\n          })\n          return\n        }\n\n        this.isVisibleUpdateOrdersWrong = true\n        this.wrongOrderIds = wrongOrderIds\n      }\n    },\n\n    async handleUpdateOrder(order) {\n      const payload = cloneDeep(order)\n      delete payload.order_items\n      this.isOrderUpdating = true\n      this.resultUpdate = await this.updateOrder(payload)\n\n      if (this.resultUpdate && this.resultUpdate.success) {\n        this.isOrderUpdating = false\n        this.isVisibleEditOrder = false\n        await this.handleFetchContainer()\n        this.$toast.open({\n          type: 'success',\n          message: 'Cập nhập order item thành công',\n        })\n        return\n      }\n\n      this.$toast.open({ type: 'error', message: this.resultUpdate.message })\n      this.isOrderUpdating = false\n    },\n\n    getOrderTitle(order) {\n      let title = `| ${order.country_code} | ${order.shipping_method}`\n\n      if (order.fulfillments.length) {\n        const items = order.fulfillments.map((item) => {\n          return item.tracking_number\n        })\n\n        title += ` | ${items.toString()}`\n      }\n\n      return title\n    },\n\n    toggleOpen(action) {\n      this.isExpandOrders = action === 'expand'\n    },\n  },\n  watch: {\n    currentOrders: {\n      handler: function(val) {\n        if (val) {\n          this.orders = cloneDeep(val)\n        }\n      },\n      immediate: true,\n    },\n    filter: {\n      handler: function() {\n        this.handleFetchOrders()\n      },\n      immediate: true,\n      deep: true,\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/packages/container/views"}]}