{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/ticket/views/View.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/ticket/views/View.vue","mtime":1603898990384},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapActions, mapMutations } from 'vuex';\nimport mixinRoute from '@core/mixins/route';\nimport ModalImage from './components/ModalImage';\nimport mixinTicket from '../mixins/ticket';\nimport mixinUpload from '@/core/mixins/upload';\nimport Browser from '@core/helpers/browser';\nimport { cloneDeep } from '@core/utils';\nexport default {\n  name: 'TicketView',\n  mixins: [mixinRoute, mixinUpload, mixinTicket],\n  components: {\n    ModalImage: ModalImage\n  },\n  data: function data() {\n    return {\n      isChange: false,\n      isHideReply: true,\n      isMessageSending: false,\n      isFetching: false,\n      imageZoomImage: '',\n      isZoomImage: false,\n      result: {},\n      filter: {\n        page: 1,\n        limit: 50\n      },\n      form: {\n        ticket_id: 0,\n        message: '',\n        urls: []\n      },\n      attach_files: []\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapState('auth', {\n    auth: function auth(state) {\n      return state.user;\n    }\n  })), mapState('ticket', {\n    ticket: function ticket(state) {\n      return state.ticket;\n    },\n    messages: function messages(state) {\n      return state.messages;\n    },\n    count: function count(state) {\n      return state.count;\n    }\n  })), {}, {\n    createrName: function createrName() {\n      if (this.ticket.creater) {\n        return this.ticket.creater.ful_name || this.ticket.creater.username;\n      }\n\n      return 'Undefined';\n    },\n    ticketID: function ticketID() {\n      return parseInt(this.$route.params.id, 10);\n    },\n    isClosed: function isClosed() {\n      return this.ticket.status === 'closed';\n    }\n  }),\n  created: function created() {\n    this.filter = this.getRouteQuery();\n    this.init();\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions('ticket', ['fetchTicket', 'fetchTicketFile', 'fetchTicketMessages', 'pushMessage', 'closeTicket', 'fetchTicketStatictis'])), mapMutations(['updateTicketMessage'])), {}, {\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Promise.all([this.handlerFetchTicket(), this.handlerFetchTicketMessages()]);\n\n              case 2:\n                if (this.ticket.status === 'closed') {\n                  this.isHideReply = false;\n                }\n\n                if (this.ticket.attach_files) {\n                  this.$set(this, 'attach_files', cloneDeep(this.ticket.attach_files));\n                }\n\n                this.getTicketFiles();\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    getTicketFile: function () {\n      var _getTicketFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url, isFile) {\n        var result, payload;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.isFetching = true;\n                _context2.prev = 1;\n                payload = {\n                  url: url,\n                  type: 'tickets'\n                };\n                _context2.next = 5;\n                return this.fetchTicketFile(payload);\n\n              case 5:\n                result = _context2.sent;\n\n                if (result.success) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                this.$toast.open({\n                  type: 'error',\n                  message: \"Download failed ! \"\n                });\n                return _context2.abrupt(\"return\", false);\n\n              case 9:\n                _context2.next = 14;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](1);\n                this.$toast.open({\n                  type: 'error',\n                  message: \"Download failed !\"\n                });\n\n              case 14:\n                this.isFetching = false;\n\n                if (!isFile) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                Browser.downloadBlob(result.blob, url.split('/').pop());\n                _context2.next = 20;\n                break;\n\n              case 19:\n                return _context2.abrupt(\"return\", window.URL.createObjectURL(result.blob));\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 11]]);\n      }));\n\n      function getTicketFile(_x, _x2) {\n        return _getTicketFile.apply(this, arguments);\n      }\n\n      return getTicketFile;\n    }(),\n    getTicketFiles: function getTicketFiles() {\n      var _this = this;\n\n      if (!this.attach_files.length) return false;\n      this.attach_files.forEach( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(el, i) {\n          var result;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (_this.isImage(el)) {\n                    result = _this.getTicketFile(el, false);\n                    result.then(function (response) {\n                      _this.$set(_this.attach_files, i, {\n                        url: el,\n                        blob: response\n                      });\n                    });\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3, _x4) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    handlerFetchTicket: function () {\n      var _handlerFetchTicket = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.fetchTicket(this.ticketID);\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function handlerFetchTicket() {\n        return _handlerFetchTicket.apply(this, arguments);\n      }\n\n      return handlerFetchTicket;\n    }(),\n    handlerFetchTicketMessages: function () {\n      var _handlerFetchTicketMessages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.isFetching = true;\n                _context5.next = 3;\n                return this.fetchTicketMessages(this.ticketID, this.filter);\n\n              case 3:\n                this.messages.forEach(function (el, index) {\n                  var files = el.attach_files;\n\n                  if (!files) {\n                    return;\n                  }\n\n                  files.forEach(function (file, i) {\n                    if (_this2.isImage(file)) {\n                      var result = _this2.getTicketFile(file, false);\n\n                      result.then(function (response) {\n                        this.messages[index].attach_files[i] = {\n                          url: file,\n                          blob: response\n                        };\n                        this.$store.commit('ticket/updateTicketMessage', cloneDeep(this.messages));\n                      }.bind(_this2));\n                    }\n                  });\n                });\n                this.isFetching = false;\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function handlerFetchTicketMessages() {\n        return _handlerFetchTicketMessages.apply(this, arguments);\n      }\n\n      return handlerFetchTicketMessages;\n    }(),\n    handlerPushMessage: function () {\n      var _handlerPushMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var validate, result;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.form.urls = this.files.map(function (item) {\n                  return item.url;\n                });\n                _context6.next = 3;\n                return this.$validator.validateAll();\n\n              case 3:\n                validate = _context6.sent;\n\n                if (validate) {\n                  _context6.next = 6;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 6:\n                this.form.ticket_id = this.ticketID;\n                this.isMessageSending = true;\n                _context6.next = 10;\n                return this.pushMessage(this.form);\n\n              case 10:\n                result = _context6.sent;\n\n                if (!(result && result.success)) {\n                  _context6.next = 21;\n                  break;\n                }\n\n                this.handlerFetchTicketMessages();\n\n                if (!(this.ticket.status === 'closed')) {\n                  _context6.next = 17;\n                  break;\n                }\n\n                this.handlerFetchTicket();\n                _context6.next = 17;\n                return this.fetchTicketStatictis();\n\n              case 17:\n                this.clearFrom();\n                this.$toast.open({\n                  type: 'success',\n                  message: 'Gửi tin thành công'\n                });\n                _context6.next = 22;\n                break;\n\n              case 21:\n                this.$toast.open({\n                  type: 'error',\n                  message: result.message\n                });\n\n              case 22:\n                this.isMessageSending = false;\n\n              case 23:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function handlerPushMessage() {\n        return _handlerPushMessage.apply(this, arguments);\n      }\n\n      return handlerPushMessage;\n    }(),\n    clearFrom: function clearFrom() {\n      this.files = [];\n      this.form = {\n        ticket_id: 0,\n        message: '',\n        urls: []\n      };\n    },\n    zoomImage: function zoomImage(src) {\n      this.isZoomImage = true;\n      this.imageZoomImage = src;\n    },\n    showDeleteConfirmation: function showDeleteConfirmation(item) {\n      var _this3 = this;\n\n      this.$dialog.confirm({\n        title: \"X\\xE1c nh\\u1EADn x\\xF3a file \\u0111\\xEDnh k\\xE8m?\",\n        message: \"B\\u1EA1n c\\xF3 ch\\u1EAFc ch\\u1EAFn mu\\u1ED1n x\\xF3a file \\u0111\\xEDnh k\\xE8m n\\xE0y?\",\n        confirmText: 'Xóa',\n        onConfirm: function onConfirm() {\n          return _this3.handleDeleteImage(item);\n        },\n        type: 'danger'\n      });\n    },\n    handlerForword: function handlerForword(staff) {\n      var _this4 = this;\n\n      var idx = this.ticket.staffs.find(function (item) {\n        return item.staff_id == staff.id;\n      });\n\n      if (idx) {\n        this.$toast.open({\n          type: 'warning',\n          message: \"Ticket \\u0111\\xE3 \\u0111\\u01B0\\u1EE3c chuy\\u1EC3n ti\\u1EBFp cho \".concat(staff.full_name || staff.username)\n        });\n        return;\n      }\n\n      this.$dialog.confirm({\n        title: \"Chuy\\u1EC3n ti\\u1EBFp ticket\",\n        message: \"B\\u1EA1n mu\\u1ED1n chuy\\u1EC3n ti\\u1EBFp ticket cho \".concat(staff.full_name || staff.username),\n        confirmText: 'Xác nhận',\n        onConfirm: function onConfirm() {\n          _this4.handlerForward('', staff.id);\n        },\n        type: 'primary'\n      });\n    }\n  })\n};",{"version":3,"sources":["View.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-xl-12\">\n        <div class=\"px-10 mb-2 panel ticket-toolbar\">\n          <a href=\"#\" class=\"mr-30\" @click=\"toBack()\">\n            <p-tooltip position=\"bottom\" trigger=\"hover\" label=\"Quay lại\">\n              <span class=\"badge badge-default badge-outline\">\n                <i class=\"icon md-arrow-left\"></i>\n              </span>\n            </p-tooltip>\n          </a>\n          <a\n            href=\"#form-reply-ticket\"\n            class=\"ml-30 mr-20\"\n            v-if=\"ticket.status != 'closed'\"\n          >\n            <p-tooltip position=\"bottom\" trigger=\"hover\" label=\"Trả lời\">\n              <span class=\"badge badge-default badge-outline\">\n                <i class=\"icon md-mail-reply\"></i>\n              </span>\n            </p-tooltip>\n          </a>\n          <a href=\"#ticket-bottom\" class=\"mr-10 float-right\">\n            <p-tooltip\n              position=\"bottom-left\"\n              trigger=\"hover\"\n              label=\"Cuộn xuống\"\n            >\n              <span class=\"badge badge-default badge-outline\">\n                <i class=\"icon md-long-arrow-down\"></i>\n              </span>\n            </p-tooltip>\n          </a>\n        </div>\n      </div>\n      <div class=\"col-xl-12\">\n        <div class=\"card\">\n          <div class=\"card-block\">\n            <div class=\"card-title\">\n              <h3 class=\"m0\">\n                {{ ticket.subject }}\n              </h3>\n              <p v-if=\"ticket.status == 'closed'\" class=\"mt-2 mb-0 text-danger\"\n                >Ticket đã được đóng, nếu sự cố của bạn chưa được giải quết, bạn\n                có thể click <a href=\"#ticket-bottom\">vào đây</a> để mở lại\n                ticket.</p\n              >\n            </div>\n            <div class=\"card-text\">\n              <div class=\"row\">\n                <div class=\"col-sm-7\">\n                  <p class=\"mb-5\">\n                    <span>Ticket ID: {{ ticket.id }}</span>\n                    <time class=\"ml-35\">\n                      Tạo ngày:\n                      {{ ticket.created_at | datetime('dd/MM/yyyy HH:mm') }} ({{\n                        ticket.created_at | timeAgo\n                      }}\n                      trước)\n                    </time>\n                  </p>\n                  <p class=\"mb-5\" v-if=\"ticket.object_id\">\n                    Mã đơn hàng:\n                    <router-link\n                      class=\"hightlight\"\n                      target=\"_blank\"\n                      slot=\"reference\"\n                      :to=\"{\n                        name: 'order-view',\n                        params: { id: ticket.object_id },\n                      }\"\n                    >\n                      {{ ticket.ref_id }}\n                    </router-link>\n                  </p>\n                </div>\n                <div class=\"col-sm-5\">\n                  <p class=\"mb-5\"\n                    >Trạng thái:\n                    <span v-status:status=\"ticket.status\">\n                      {{ ticket.status }}\n                    </span>\n                  </p>\n                  <p class=\"mb-5\" v-if=\"ticket.category\"\n                    >Danh mục: {{ ticket.category }}</p\n                  >\n                </div>\n              </div>\n              <hr />\n              <p class=\"text-pre-line\">{{ ticket.content }}</p>\n              <div\n                class=\"gallery ticket-attach-files\"\n                v-if=\"attach_files && attach_files.length\"\n              >\n                <hr />\n                <div class=\"row\">\n                  <div class=\"col\" v-for=\"(file, i) in attach_files\" :key=\"i\">\n                    <div\n                      v-if=\"isImage(file.url)\"\n                      class=\"gallery-item\"\n                      @click=\"zoomImage(file.blob)\"\n                    >\n                      <img class=\"img-fluid w-full\" :src=\"file.blob\" />\n                    </div>\n                    <div v-else class=\"gallery-item ticket-file\">\n                      <a @click=\"getTicketFile(file, true)\" class=\"btn\">\n                        <span>{{ extenionFileUrl(file) }}</span>\n                        <span class=\"icon md-download\"></span>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"card mb-5 ticket-message\"\n          v-for=\"(item, index) in messages\"\n          :key=\"index\"\n          :class=\"{ me: item.user_id == auth.id }\"\n        >\n          <div class=\"card-block\">\n            <div class=\"card-title\">\n              <h4 class=\"m0 d-ib\">\n                {{ item.full_name || 'Undefined' }}\n                <span\n                  v-if=\"item.is_staff == 'Y'\"\n                  class=\"badge badge-info text-top\"\n                  >Lionnix Staff</span\n                >\n              </h4>\n              <span class=\"float-right\">\n                {{ item.created_at | datetime('dd/MM/yyyy HH:mm') }}\n              </span>\n            </div>\n            <div class=\"card-text\">\n              <p class=\"text-pre-line\">{{ item.message }}</p>\n              <div\n                class=\"gallery ticket-attach-files\"\n                v-if=\"item.attach_files && item.attach_files.length\"\n              >\n                <hr />\n                <div class=\"row\">\n                  <div\n                    class=\"col\"\n                    v-for=\"(file, i) in item.attach_files\"\n                    :key=\"i\"\n                  >\n                    <div\n                      v-if=\"isImage(file.url)\"\n                      class=\"gallery-item\"\n                      @click=\"zoomImage(file.blob)\"\n                    >\n                      <img class=\"img-fluid w-full\" :src=\"file.blob\" />\n                    </div>\n                    <div v-else class=\"gallery-item ticket-file\">\n                      <a @click=\"getTicketFile(file, true)\" class=\"btn\">\n                        <span>{{ extenionFileUrl(file) }}</span>\n                        <span class=\"icon md-download\"></span>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"card\" id=\"ticket-bottom\">\n          <div class=\"card-block\">\n            <template v-if=\"isHideReply\">\n              <div\n                id=\"form-reply-ticket\"\n                class=\"form-group floating\"\n                :class=\"[\n                  { 'has-success': !errors.has('message') },\n                  { 'has-danger': errors.has('message') },\n                ]\"\n              >\n                <textarea\n                  class=\"form-control\"\n                  rows=\"5\"\n                  placeholder=\"Nội dung\"\n                  v-model=\"form.message\"\n                  v-validate=\"'required'\"\n                  name=\"message\"\n                  data-vv-as=\"Nội dung\"\n                ></textarea>\n                <span class=\"invalid-feedback\" v-if=\"errors.has('message')\">{{\n                  errors.first('message')\n                }}</span>\n              </div>\n\n              <div\n                class=\"form-group floating\"\n                :class=\"[\n                  { 'has-success': !errors.has('file') },\n                  { 'has-danger': errors.has('file') },\n                ]\"\n              >\n                <ul\n                  class=\"list-group list-group-full ticket-attach-list\"\n                  v-if=\"files && files.length\"\n                >\n                  <li\n                    class=\"list-group-item\"\n                    v-for=\"(item, i) in files\"\n                    :key=\"i\"\n                  >\n                    <span\n                      class=\"float-right\"\n                      @click.prevent=\"showDeleteConfirmation(item.uid)\"\n                    >\n                      <i class=\"icon md-close\"></i>\n                    </span>\n                    {{ item.name }}\n                  </li>\n                </ul>\n                <upload\n                  class=\"ticket-uploader\"\n                  :action=\"uploadFileEndpoint\"\n                  :accept=\"'.png,.jpg,.csv,.xlsx,.xls'\"\n                  drag\n                  multiple\n                  list-type=\"picture\"\n                  :data=\"{ type: 'tickets' }\"\n                  :headers=\"uploadHeaders\"\n                  :on-error=\"handleErrorFile\"\n                  :on-success=\"handleSuccess\"\n                  :max-file-size=\"4000000\"\n                >\n                  <div class=\"el-upload__text\">\n                    <p-icon name=\"image\" icon-pack=\"md\"></p-icon>\n                    Tải file đính kèm\n                  </div>\n                </upload>\n                <p\n                  >File đính kèm chỉ nhận định dạng PNG, JPEG, CSV, Excel và\n                  không được vượt quá 5MB</p\n                >\n              </div>\n              <p-button\n                type=\"primary\"\n                @click=\"handlerPushMessage\"\n                :disable=\"isMessageSending\"\n              >\n                <span>Trả lời</span>\n              </p-button>\n            </template>\n            <template v-else>\n              <p class=\"text-danger\" v-if=\"this.isClosed\"\n                >Ticket đã được đóng, nếu sự cố của bạn chưa được giải quết, bạn\n                có thể bấm button dưới để mở lại ticket.</p\n              >\n              <p-button\n                id=\"btn-reopen\"\n                type=\"primary\"\n                @click=\"isHideReply = true\"\n              >\n                <span>Mở lại ticket</span>\n              </p-button>\n            </template>\n          </div>\n        </div>\n      </div>\n    </div>\n    <modal-image :visible.sync=\"isZoomImage\" :src=\"imageZoomImage\" />\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions, mapMutations } from 'vuex'\nimport mixinRoute from '@core/mixins/route'\nimport ModalImage from './components/ModalImage'\nimport mixinTicket from '../mixins/ticket'\nimport mixinUpload from '@/core/mixins/upload'\nimport Browser from '@core/helpers/browser'\nimport { cloneDeep } from '@core/utils'\nexport default {\n  name: 'TicketView',\n  mixins: [mixinRoute, mixinUpload, mixinTicket],\n  components: { ModalImage },\n  data() {\n    return {\n      isChange: false,\n      isHideReply: true,\n      isMessageSending: false,\n      isFetching: false,\n      imageZoomImage: '',\n      isZoomImage: false,\n      result: {},\n      filter: {\n        page: 1,\n        limit: 50,\n      },\n      form: {\n        ticket_id: 0,\n        message: '',\n        urls: [],\n      },\n      attach_files: [],\n    }\n  },\n  computed: {\n    ...mapState('auth', {\n      auth: (state) => state.user,\n    }),\n    ...mapState('ticket', {\n      ticket: (state) => state.ticket,\n      messages: (state) => state.messages,\n      count: (state) => state.count,\n    }),\n    createrName() {\n      if (this.ticket.creater) {\n        return this.ticket.creater.ful_name || this.ticket.creater.username\n      }\n\n      return 'Undefined'\n    },\n\n    ticketID() {\n      return parseInt(this.$route.params.id, 10)\n    },\n\n    isClosed() {\n      return this.ticket.status === 'closed'\n    },\n  },\n  created() {\n    this.filter = this.getRouteQuery()\n    this.init()\n  },\n  methods: {\n    ...mapActions('ticket', [\n      'fetchTicket',\n      'fetchTicketFile',\n      'fetchTicketMessages',\n      'pushMessage',\n      'closeTicket',\n      'fetchTicketStatictis',\n    ]),\n    ...mapMutations(['updateTicketMessage']),\n    async init() {\n      await Promise.all([\n        this.handlerFetchTicket(),\n        this.handlerFetchTicketMessages(),\n      ])\n\n      if (this.ticket.status === 'closed') {\n        this.isHideReply = false\n      }\n      if (this.ticket.attach_files) {\n        this.$set(this, 'attach_files', cloneDeep(this.ticket.attach_files))\n      }\n\n      this.getTicketFiles()\n    },\n    async getTicketFile(url, isFile) {\n      let result\n\n      this.isFetching = true\n      try {\n        const payload = {\n          url: url,\n          type: 'tickets',\n        }\n        result = await this.fetchTicketFile(payload)\n\n        if (!result.success) {\n          this.$toast.open({ type: 'error', message: `Download failed ! ` })\n          return false\n        }\n      } catch (e) {\n        this.$toast.open({ type: 'error', message: `Download failed !` })\n      }\n      this.isFetching = false\n\n      if (isFile) {\n        Browser.downloadBlob(result.blob, url.split('/').pop())\n      } else {\n        return window.URL.createObjectURL(result.blob)\n      }\n    },\n    getTicketFiles() {\n      if (!this.attach_files.length) return false\n      this.attach_files.forEach(async (el, i) => {\n        if (this.isImage(el)) {\n          let result = this.getTicketFile(el, false)\n          result.then((response) => {\n            this.$set(this.attach_files, i, {\n              url: el,\n              blob: response,\n            })\n          })\n        }\n      })\n    },\n    async handlerFetchTicket() {\n      await this.fetchTicket(this.ticketID)\n    },\n\n    async handlerFetchTicketMessages() {\n      this.isFetching = true\n      await this.fetchTicketMessages(this.ticketID, this.filter)\n      this.messages.forEach((el, index) => {\n        let files = el.attach_files\n        if (!files) {\n          return\n        }\n        files.forEach((file, i) => {\n          if (this.isImage(file)) {\n            let result = this.getTicketFile(file, false)\n            result.then(\n              function(response) {\n                this.messages[index].attach_files[i] = {\n                  url: file,\n                  blob: response,\n                }\n                this.$store.commit(\n                  'ticket/updateTicketMessage',\n                  cloneDeep(this.messages)\n                )\n              }.bind(this)\n            )\n          }\n        })\n      })\n      this.isFetching = false\n    },\n\n    async handlerPushMessage() {\n      this.form.urls = this.files.map((item) => item.url)\n      const validate = await this.$validator.validateAll()\n      if (!validate) {\n        return\n      }\n\n      this.form.ticket_id = this.ticketID\n\n      this.isMessageSending = true\n      const result = await this.pushMessage(this.form)\n\n      if (result && result.success) {\n        this.handlerFetchTicketMessages()\n        if (this.ticket.status === 'closed') {\n          this.handlerFetchTicket()\n          await this.fetchTicketStatictis()\n        }\n        this.clearFrom()\n        this.$toast.open({\n          type: 'success',\n          message: 'Gửi tin thành công',\n        })\n      } else {\n        this.$toast.open({ type: 'error', message: result.message })\n      }\n      this.isMessageSending = false\n    },\n\n    clearFrom() {\n      this.files = []\n      this.form = {\n        ticket_id: 0,\n        message: '',\n        urls: [],\n      }\n    },\n\n    zoomImage(src) {\n      this.isZoomImage = true\n      this.imageZoomImage = src\n    },\n\n    showDeleteConfirmation(item) {\n      this.$dialog.confirm({\n        title: `Xác nhận xóa file đính kèm?`,\n        message: `Bạn có chắc chắn muốn xóa file đính kèm này?`,\n        confirmText: 'Xóa',\n        onConfirm: () => this.handleDeleteImage(item),\n        type: 'danger',\n      })\n    },\n\n    handlerForword(staff) {\n      const idx = this.ticket.staffs.find((item) => item.staff_id == staff.id)\n      if (idx) {\n        this.$toast.open({\n          type: 'warning',\n          message: `Ticket đã được chuyển tiếp cho ${staff.full_name ||\n            staff.username}`,\n        })\n        return\n      }\n      this.$dialog.confirm({\n        title: `Chuyển tiếp ticket`,\n        message: `Bạn muốn chuyển tiếp ticket cho ${staff.full_name ||\n          staff.username}`,\n        confirmText: 'Xác nhận',\n        onConfirm: () => {\n          this.handlerForward('', staff.id)\n        },\n        type: 'primary',\n      })\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/packages/ticket/views"}]}