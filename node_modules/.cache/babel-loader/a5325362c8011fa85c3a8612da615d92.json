{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/core/store/modules.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/core/store/modules.js","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Register each file as a corresponding Vuex module\nimport camelCase from 'lodash/camelCase';\nimport isEmpty from 'lodash/isEmpty';\nvar modulesCache = {};\nvar storeData = {\n  modules: {}\n};\n\n(function updateModules() {\n  var requireModule = require.context('../../packages', true, /store\\/index.js$/); // For every Vuex module...\n\n\n  requireModule.keys().forEach(function (fileName) {\n    var moduleDefinition = requireModule(fileName); // Skip the module during hot reload if it refers to the\n    // same module definition as the one we have cached.\n\n    if (isEmpty(moduleDefinition) || modulesCache[fileName] === moduleDefinition) {\n      return;\n    }\n\n    modulesCache[fileName] = fileName.replace(/^\\.\\//, '').replace(/\\.\\w+$/, '').split(/\\//).map(camelCase); // Get the module path as an array.\n\n    var modulePath = fileName.replace(/^\\.\\//, '').replace(/\\.\\w+$/, '').split(/\\//).map(camelCase);\n    var namespace = modulePath.shift(); // Add the module to our modules object.\n\n    storeData.modules[namespace] = _objectSpread({\n      // Modules are namespaced by default.\n      namespaced: true\n    }, moduleDefinition);\n  });\n})();\n\nexport default storeData.modules;",null]}