{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/uikit/components/input/Input.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/uikit/components/input/Input.vue","mtime":1604491368743},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FormElementMixin from '../../mixins/FormElement';\nexport default {\n  name: 'PInput',\n  inheritAttrs: false,\n  mixins: [FormElementMixin],\n  props: {\n    value: {\n      type: [String, Number]\n    },\n    validate: {\n      type: String,\n      default: 'off'\n    },\n    size: {\n      type: String,\n      default: '',\n      validator: function validator(value) {\n        return ['', 'lg', 'sm'].indexOf(value) > -1;\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'text'\n    },\n    autosize: {\n      type: [Boolean, Object],\n      default: false\n    },\n    autocomplete: {\n      type: String,\n      default: 'off'\n    },\n    suffixIcon: {\n      type: String,\n      default: ''\n    },\n    prefixIcon: {\n      type: String,\n      default: ''\n    },\n    label: {\n      type: String,\n      default: ''\n    },\n    clearable: {\n      type: Boolean,\n      default: false\n    },\n    rounded: {\n      type: Boolean,\n      default: false\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      typeInputPassword: 'password',\n      input: '',\n      validatePassword: [{\n        message: 'Must contain at least one capital letter.',\n        regex: /[A-Z]+/,\n        result: true\n      }, {\n        message: 'Must contain at least one digit.',\n        regex: /[0-9]+/,\n        result: true\n      }, {\n        message: 'Password is too short (minimum is 6 characters)',\n        regex: /.{6,}/,\n        result: true\n      }, {\n        message: 'Password is too long (maximum is 50 characters)',\n        regex: /^[\\w]{0,50}$/,\n        result: true\n      }, {\n        message: 'Not contain special characters.',\n        regex: /[^\\w]/,\n        result: false\n      }],\n      validateEmail: [{\n        message: 'Email must be in a valid email format (e.g., you@example.com).',\n        regex: /^[\\w-\\\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n        result: true\n      }],\n      validateUsername: [{\n        message: 'Not contain special characters.',\n        regex: /[^\\w]/,\n        result: false\n      }, {\n        message: 'Username is too short (minimum is 5 characters).',\n        regex: /.{5,}/,\n        result: true\n      }, {\n        message: 'Username is too long (maximum is 50 characters)',\n        regex: /^[\\w]{0,50}$/,\n        result: true\n      }]\n    };\n  },\n  computed: {\n    wrapperClasses: function wrapperClasses() {\n      return ['p-input-group', 'input-group', this.size ? \"input-group-\".concat(this.size) : '', {\n        'form-icons': this.prefixIcon || this.suffixIcon || this.isShowClear\n      }, this.type === 'file' ? 'input-group-file' : ''];\n    },\n    formControlClasses: function formControlClasses() {\n      return ['p-input', 'form-control', {\n        rounded: this.rounded\n      }, this.type == 'password' && !this.validateField.valid ? 'input-invalid' : '', this.type == 'email' && !this.validateField.valid ? 'input-invalid' : ''];\n    },\n    isShowClear: function isShowClear() {\n      return this.clearable && !this.disabled && !this.readonly && this.nativeInputValue;\n    },\n    nativeInputValue: function nativeInputValue() {\n      return this.value === null || _typeof(this.value) === undefined ? '' : this.value;\n    },\n    listeners: function listeners() {\n      return _objectSpread(_objectSpread({}, this.$listeners), {}, {\n        input: this.onInput,\n        focus: this.onFocus,\n        keypress: this.keypress\n      });\n    },\n    validateField: function validateField() {\n      var errors = [];\n      if (this.input == '') return {\n        valid: true,\n        errors: errors\n      };\n      if (this.validate == 'off') return {\n        valid: true,\n        errors: errors\n      };\n\n      if (this.type == 'password') {\n        var _iterator = _createForOfIteratorHelper(this.validatePassword),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var condition = _step.value;\n\n            if (!condition.regex.test(this.input) == condition.result) {\n              errors.push(condition.message);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        if (errors.length === 0) {\n          return {\n            valid: true,\n            errors: errors\n          };\n        } else {\n          return {\n            valid: false,\n            errors: errors\n          };\n        }\n      } else if (this.type == 'email') {\n        var _iterator2 = _createForOfIteratorHelper(this.validateEmail),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _condition = _step2.value;\n\n            if (!_condition.regex.test(this.input) == _condition.result) {\n              errors.push(_condition.message);\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        if (errors.length === 0) {\n          return {\n            valid: true,\n            errors: errors\n          };\n        } else {\n          return {\n            valid: false,\n            errors: errors\n          };\n        }\n      } else if (this.type == 'username') {\n        var _iterator3 = _createForOfIteratorHelper(this.validateUsername),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _condition2 = _step3.value;\n\n            if (!_condition2.regex.test(this.input) == _condition2.result) {\n              errors.push(_condition2.message);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        if (errors.length === 0) {\n          return {\n            valid: true,\n            errors: errors\n          };\n        } else {\n          return {\n            valid: false,\n            errors: errors\n          };\n        }\n      } else {\n        return {\n          valid: true,\n          errors: errors\n        };\n      }\n    }\n  },\n  methods: {\n    checkValidate: function checkValidate(item) {\n      return !this.validateField.errors.includes(item);\n    },\n    onInput: function onInput(event) {\n      if (event.target.value !== this.value) {\n        this.$emit('input', event.target.value);\n        this.input = event.target.value;\n      }\n    },\n    keypress: function keypress(evt) {\n      if (this.type !== 'number') return true;\n      evt = evt ? evt : window.event;\n      var charCode = evt.which ? evt.which : evt.keyCode;\n\n      if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode !== 46 && charCode !== 45) {\n        evt.preventDefault();\n      } else {\n        return true;\n      }\n    },\n    handleChange: function handleChange(e) {\n      this.$emit('input', e.target.value);\n    },\n    togglePasswordVisibelity: function togglePasswordVisibelity() {\n      this.typeInputPassword = this.typeInputPassword == 'password' ? 'text' : 'password';\n    },\n    clear: function clear() {\n      this.$emit('input', '');\n    }\n  },\n  watch: {\n    input: {\n      handler: function handler() {\n        this.$emit('data', this.input);\n      },\n      deep: true\n    }\n  }\n};",{"version":3,"sources":["Input.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"wrapperClasses\">\n    <template v-if=\"type !== 'textarea' && type !== 'password'\">\n      <div class=\"input-group-prepend\" v-if=\"$slots.prepend\">\n        <slot name=\"prepend\"></slot>\n      </div>\n\n      <i\n        class=\"form-control-icon\"\n        v-if=\"prefixIcon\"\n        :class=\"`wb-${prefixIcon}`\"\n      >\n      </i>\n\n      <i\n        class=\"form-control-icon form-control-icon-right\"\n        v-if=\"suffixIcon\"\n        :class=\"`wb-${suffixIcon}`\"\n      ></i>\n\n      <i\n        class=\"form-control-icon form-control-icon-right wb-close\"\n        v-else-if=\"isShowClear\"\n        @click=\"clear\"\n      >\n      </i>\n\n      <input\n        :class=\"formControlClasses\"\n        v-bind=\"$attrs\"\n        :value=\"nativeInputValue\"\n        :disabled=\"disabled\"\n        :readonly=\"readonly\"\n        :autocomplete=\"autocomplete\"\n        @change=\"handleChange\"\n        v-on=\"listeners\"\n        v-model=\"input\"\n        :type=\"type\"\n        ref=\"input\"\n      />\n\n      <div class=\"input-group-append\" v-if=\"$slots.append\">\n        <slot name=\"append\"></slot>\n      </div>\n    </template>\n\n    <template v-if=\"type == 'password'\">\n      <div class=\"input-group-prepend\" v-if=\"$slots.prepend\">\n        <slot name=\"prepend\"></slot>\n      </div>\n      <a\n        class=\"form-control-icon form-control-icon-right\"\n        @click.prevent=\"togglePasswordVisibelity()\"\n      >\n        <i class=\"wb-eye\"></i>\n      </a>\n\n      <input\n        :class=\"formControlClasses\"\n        v-bind=\"$attrs\"\n        :value=\"nativeInputValue\"\n        :disabled=\"disabled\"\n        :readonly=\"readonly\"\n        :autocomplete=\"autocomplete\"\n        @change=\"handleChange\"\n        v-on=\"listeners\"\n        v-model=\"input\"\n        :type=\"typeInputPassword\"\n        name=\"password\"\n        ref=\"input\"\n      />\n      <div class=\"input-group-append\" v-if=\"$slots.append\">\n        <slot name=\"append\"></slot>\n      </div>\n    </template>\n\n    <template v-if=\"type == 'textarea'\">\n      <textarea\n        :class=\"formControlClasses\"\n        v-bind=\"$attrs\"\n        :disabled=\"disabled\"\n        :readonly=\"readonly\"\n        :autocomplete=\"autocomplete\"\n        rows=\"6\"\n        v-model=\"input\"\n        @change=\"handleChange\"\n        ref=\"textarea\"\n      >\n      </textarea>\n    </template>\n\n    <span\n      class=\"invalid-error\"\n      v-if=\"!validateField.valid && type != 'username'\"\n    >\n      {{ validateField.errors[0] }}\n    </span>\n\n    <span\n      v-if=\"type == 'username' && input != '' && validate == 'on'\"\n      class=\"check-list\"\n    >\n      <div class=\"hints\">\n        <p\n          v-for=\"(item, index) in validateUsername\"\n          :key=\"index\"\n          class=\"checkList\"\n        >\n          <i\n            class=\"wb-search\"\n            :class=\"{ success: checkValidate(item.message) }\"\n          >\n          </i>\n          {{ item.message }}</p\n        >\n      </div>\n    </span>\n  </div>\n</template>\n\n<style scoped>\n.invalid-error {\n  width: 100%;\n  margin-top: 10px;\n  font-size: 12px;\n  color: #db1802;\n}\n\n.check-list {\n  width: 100%;\n  margin-top: 10px;\n  font-size: 14px;\n  color: #37393e;\n  margin-left: 20px;\n}\n\n.success {\n  color: #0554f2;\n}\n\n.input-invalid {\n  border-color: #db1802;\n}\n\n.input-invalid.focus,\n.input-invalid:focus {\n  border-color: #db1802;\n}\n</style>\n\n<script>\nimport FormElementMixin from '../../mixins/FormElement'\nexport default {\n  name: 'PInput',\n  inheritAttrs: false,\n  mixins: [FormElementMixin],\n  props: {\n    value: {\n      type: [String, Number],\n    },\n    validate: {\n      type: String,\n      default: 'off',\n    },\n    size: {\n      type: String,\n      default: '',\n      validator(value) {\n        return ['', 'lg', 'sm'].indexOf(value) > -1\n      },\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    type: {\n      type: String,\n      default: 'text',\n    },\n    autosize: {\n      type: [Boolean, Object],\n      default: false,\n    },\n    autocomplete: {\n      type: String,\n      default: 'off',\n    },\n    suffixIcon: {\n      type: String,\n      default: '',\n    },\n    prefixIcon: {\n      type: String,\n      default: '',\n    },\n    label: {\n      type: String,\n      default: '',\n    },\n    clearable: {\n      type: Boolean,\n      default: false,\n    },\n    rounded: {\n      type: Boolean,\n      default: false,\n    },\n    loading: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      typeInputPassword: 'password',\n      input: '',\n      validatePassword: [\n        {\n          message: 'Must contain at least one capital letter.',\n          regex: /[A-Z]+/,\n          result: true,\n        },\n        {\n          message: 'Must contain at least one digit.',\n          regex: /[0-9]+/,\n          result: true,\n        },\n        {\n          message: 'Password is too short (minimum is 6 characters)',\n          regex: /.{6,}/,\n          result: true,\n        },\n        {\n          message: 'Password is too long (maximum is 50 characters)',\n          regex: /^[\\w]{0,50}$/,\n          result: true,\n        },\n        {\n          message: 'Not contain special characters.',\n          regex: /[^\\w]/,\n          result: false,\n        },\n      ],\n      validateEmail: [\n        {\n          message:\n            'Email must be in a valid email format (e.g., you@example.com).',\n          regex: /^[\\w-\\\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n          result: true,\n        },\n      ],\n      validateUsername: [\n        {\n          message: 'Not contain special characters.',\n          regex: /[^\\w]/,\n          result: false,\n        },\n        {\n          message: 'Username is too short (minimum is 5 characters).',\n          regex: /.{5,}/,\n          result: true,\n        },\n        {\n          message: 'Username is too long (maximum is 50 characters)',\n          regex: /^[\\w]{0,50}$/,\n          result: true,\n        },\n      ],\n    }\n  },\n  computed: {\n    wrapperClasses() {\n      return [\n        'p-input-group',\n        'input-group',\n        this.size ? `input-group-${this.size}` : '',\n        {\n          'form-icons': this.prefixIcon || this.suffixIcon || this.isShowClear,\n        },\n        this.type === 'file' ? 'input-group-file' : '',\n      ]\n    },\n    formControlClasses() {\n      return [\n        'p-input',\n        'form-control',\n        {\n          rounded: this.rounded,\n        },\n        this.type == 'password' && !this.validateField.valid\n          ? 'input-invalid'\n          : '',\n        this.type == 'email' && !this.validateField.valid\n          ? 'input-invalid'\n          : '',\n      ]\n    },\n    isShowClear() {\n      return (\n        this.clearable &&\n        !this.disabled &&\n        !this.readonly &&\n        this.nativeInputValue\n      )\n    },\n    nativeInputValue() {\n      return this.value === null || typeof this.value === undefined\n        ? ''\n        : this.value\n    },\n    listeners() {\n      return {\n        ...this.$listeners,\n        input: this.onInput,\n        focus: this.onFocus,\n        keypress: this.keypress,\n      }\n    },\n    validateField() {\n      let errors = []\n      if (this.input == '') return { valid: true, errors }\n      if (this.validate == 'off') return { valid: true, errors }\n      if (this.type == 'password') {\n        for (let condition of this.validatePassword) {\n          if (!condition.regex.test(this.input) == condition.result) {\n            errors.push(condition.message)\n          }\n        }\n        if (errors.length === 0) {\n          return { valid: true, errors }\n        } else {\n          return { valid: false, errors }\n        }\n      } else if (this.type == 'email') {\n        for (let condition of this.validateEmail) {\n          if (!condition.regex.test(this.input) == condition.result) {\n            errors.push(condition.message)\n          }\n        }\n        if (errors.length === 0) {\n          return { valid: true, errors }\n        } else {\n          return { valid: false, errors }\n        }\n      } else if (this.type == 'username') {\n        for (let condition of this.validateUsername) {\n          if (!condition.regex.test(this.input) == condition.result) {\n            errors.push(condition.message)\n          }\n        }\n        if (errors.length === 0) {\n          return { valid: true, errors }\n        } else {\n          return { valid: false, errors }\n        }\n      } else {\n        return { valid: true, errors }\n      }\n    },\n  },\n  methods: {\n    checkValidate(item) {\n      return !this.validateField.errors.includes(item)\n    },\n    onInput(event) {\n      if (event.target.value !== this.value) {\n        this.$emit('input', event.target.value)\n        this.input = event.target.value\n      }\n    },\n    keypress(evt) {\n      if (this.type !== 'number') return true\n      evt = evt ? evt : window.event\n      const charCode = evt.which ? evt.which : evt.keyCode\n      if (\n        charCode > 31 &&\n        (charCode < 48 || charCode > 57) &&\n        charCode !== 46 &&\n        charCode !== 45\n      ) {\n        evt.preventDefault()\n      } else {\n        return true\n      }\n    },\n    handleChange(e) {\n      this.$emit('input', e.target.value)\n    },\n\n    togglePasswordVisibelity() {\n      this.typeInputPassword =\n        this.typeInputPassword == 'password' ? 'text' : 'password'\n    },\n\n    clear() {\n      this.$emit('input', '')\n    },\n  },\n  watch: {\n    input: {\n      handler() {\n        this.$emit('data', this.input)\n      },\n      deep: true,\n    },\n  },\n}\n</script>\n"],"sourceRoot":"uikit/components/input"}]}