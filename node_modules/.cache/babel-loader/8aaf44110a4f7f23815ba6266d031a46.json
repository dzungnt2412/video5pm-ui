{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/uikit/components/input/Input.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/uikit/components/input/Input.vue","mtime":1605110384405},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FormElementMixin from '../../mixins/FormElement';\nexport default {\n  name: 'PInput',\n  inheritAttrs: false,\n  mixins: [FormElementMixin],\n  props: {\n    value: {\n      type: [String, Number]\n    },\n    validate: {\n      type: String,\n      default: 'off'\n    },\n    size: {\n      type: String,\n      default: '',\n      validator: function validator(value) {\n        return ['', 'lg', 'sm'].indexOf(value) > -1;\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'text'\n    },\n    autosize: {\n      type: [Boolean, Object],\n      default: false\n    },\n    autocomplete: {\n      type: String,\n      default: 'off'\n    },\n    suffixIcon: {\n      type: String,\n      default: ''\n    },\n    prefixIcon: {\n      type: String,\n      default: ''\n    },\n    label: {\n      type: String,\n      default: ''\n    },\n    clearable: {\n      type: Boolean,\n      default: false\n    },\n    rounded: {\n      type: Boolean,\n      default: false\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    hiddenPass: {\n      type: String,\n      default: 'off'\n    },\n    required: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      focusUsername: false,\n      typeInputPassword: 'password',\n      input: '',\n      validatePassword: [{\n        message: 'Not contain special characters.',\n        regex: /[^A-Za-z\\d@$!%*#?& ]/,\n        result: false\n      }, {\n        message: \"Your password can't start or end with a blank space\",\n        regex: /^[ ].*|[ ]$/,\n        result: false\n      }, {\n        message: 'Be between 6-50 characters.',\n        regex: /^.{6,50}$/,\n        result: true\n      }],\n      validateEmail: [{\n        message: 'Email must be in a valid email format (e.g., you@example.com).',\n        regex: /^[a-z0-9A-Z_\\\\.]{1,32}@[a-z0-9]{2,}(\\.[a-z0-9]{2,4}){1,2}$/,\n        result: true\n      }],\n      validateUsername: [{\n        message: 'Not contain special characters.',\n        regex: /[^\\w]/,\n        result: false\n      }, {\n        message: 'Be between 5-50 characters.',\n        regex: /^.{5,50}$/,\n        result: true\n      }],\n      validatePhonenumber: [{\n        message: 'Phonenumber is too long (maximum is 20 characters).',\n        regex: /^.{1,20}$/,\n        result: true\n      }, {\n        message: 'Phone must be in a valid phone number  (e.g., 123 456-789).',\n        regex: /^[-\\\\s {2}\\\\./0-9]*$/,\n        result: true\n      }, {\n        message: \"Your phonenumber can't end with a blank space\",\n        regex: /.*[ ]$/,\n        result: false\n      }],\n      validateShopName: [{\n        message: 'Be between 1-100 characters.',\n        regex: /^.{1,100}$/,\n        result: true\n      }, {\n        message: 'Shop name must be in a valid shop name format.',\n        regex: /<[^>]*>$/,\n        result: false\n      }]\n    };\n  },\n  computed: {\n    wrapperClasses: function wrapperClasses() {\n      return ['p-input-group', 'input-group', this.size ? \"input-group-\".concat(this.size) : '', {\n        'form-icons': this.prefixIcon || this.suffixIcon || this.isShowClear || this.hiddenPass\n      }, this.type === 'file' ? 'input-group-file' : ''];\n    },\n    formControlClasses: function formControlClasses() {\n      return ['p-input', 'form-control', {\n        rounded: this.rounded\n      }, this.type == 'password' && !this.validateField.valid && this.validate == 'on' ? 'input-invalid' : '', this.type == 'email' && !this.validateField.valid && this.validate == 'on' ? 'input-invalid' : '', this.type == 'username' && !this.validateField.valid && this.validate == 'on' ? 'input-invalid' : '', this.type == 'shopname' && !this.validateField.valid && this.validate == 'on' ? 'input-invalid' : '', this.type == 'phonenumber' && !this.validateField.valid && this.validate == 'on' ? 'input-invalid' : '', this.required == true ? 'input-invalid' : ''];\n    },\n    isShowClear: function isShowClear() {\n      return this.clearable && !this.disabled && !this.readonly && this.nativeInputValue;\n    },\n    nativeInputValue: function nativeInputValue() {\n      return this.value === null || _typeof(this.value) === undefined ? '' : this.value;\n    },\n    listeners: function listeners() {\n      return _objectSpread(_objectSpread({}, this.$listeners), {}, {\n        input: this.onInput,\n        focus: this.onFocus,\n        keypress: this.keypress\n      });\n    },\n    validateField: function validateField() {\n      var errors = [];\n      if (this.input == '') return {\n        valid: true,\n        errors: errors\n      };\n\n      if (this.type == 'password') {\n        var _iterator = _createForOfIteratorHelper(this.validatePassword),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var condition = _step.value;\n\n            if (!condition.regex.test(this.input) == condition.result) {\n              errors.push(condition.message);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        if (errors.length == 0) {\n          return {\n            valid: true,\n            errors: errors\n          };\n        } else {\n          return {\n            valid: false,\n            errors: errors\n          };\n        }\n      } else if (this.type == 'email') {\n        var _iterator2 = _createForOfIteratorHelper(this.validateEmail),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _condition = _step2.value;\n\n            if (!_condition.regex.test(this.input) == _condition.result) {\n              errors.push(_condition.message);\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        if (errors.length == 0) {\n          return {\n            valid: true,\n            errors: errors\n          };\n        } else {\n          return {\n            valid: false,\n            errors: errors\n          };\n        }\n      } else if (this.type == 'username') {\n        var _iterator3 = _createForOfIteratorHelper(this.validateUsername),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _condition2 = _step3.value;\n\n            if (!_condition2.regex.test(this.input) == _condition2.result) {\n              errors.push(_condition2.message);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        if (errors.length == 0) {\n          return {\n            valid: true,\n            errors: errors\n          };\n        } else {\n          return {\n            valid: false,\n            errors: errors\n          };\n        }\n      } else if (this.type == 'phonenumber') {\n        var _iterator4 = _createForOfIteratorHelper(this.validatePhonenumber),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _condition3 = _step4.value;\n\n            if (!_condition3.regex.test(this.input) == _condition3.result) {\n              errors.push(_condition3.message);\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        if (errors.length == 0) {\n          return {\n            valid: true,\n            errors: errors\n          };\n        } else {\n          return {\n            valid: false,\n            errors: errors\n          };\n        }\n      } else if (this.type == 'shopname') {\n        var _iterator5 = _createForOfIteratorHelper(this.validateShopName),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var _condition4 = _step5.value;\n\n            if (!_condition4.regex.test(this.input) == _condition4.result) {\n              errors.push(_condition4.message);\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n\n        if (errors.length == 0) {\n          return {\n            valid: true,\n            errors: errors\n          };\n        } else {\n          return {\n            valid: false,\n            errors: errors\n          };\n        }\n      } else {\n        return {\n          valid: true,\n          errors: errors\n        };\n      }\n    }\n  },\n  methods: {\n    checkValidate: function checkValidate(item) {\n      return !this.validateField.errors.includes(item);\n    },\n    onInput: function onInput(event) {\n      if (event.target.value !== this.value) {\n        this.$emit('input', event.target.value);\n        this.input = event.target.value;\n      }\n    },\n    keypress: function keypress(evt) {\n      if (this.type !== 'number') return true;\n      evt = evt ? evt : window.event;\n      var charCode = evt.which ? evt.which : evt.keyCode;\n\n      if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode !== 46 && charCode !== 45) {\n        evt.preventDefault();\n      } else {\n        return true;\n      }\n    },\n    handleChange: function handleChange(e) {\n      this.$emit('input', e.target.value);\n    },\n    togglePasswordVisibelity: function togglePasswordVisibelity() {\n      this.typeInputPassword = this.typeInputPassword == 'password' ? 'text' : 'password';\n    },\n    clear: function clear() {\n      this.$emit('input', '');\n    }\n  },\n  watch: {\n    input: {\n      handler: function handler() {\n        this.$emit('status', this.validateField.valid);\n      },\n      deep: true\n    }\n  }\n};",null]}