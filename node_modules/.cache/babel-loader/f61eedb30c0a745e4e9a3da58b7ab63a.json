{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/dashboard/store/index.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/dashboard/store/index.js","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nvar _mutations, _getters;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport api from '../api';\nimport { ORDER_STATUS_CANCELED, ORDER_STATUS_FULFILLED, ORDER_STATUS_PENDING, ORDER_STATUS_PROCESS } from '@core/constants';\nexport var FETCH_STATISTIC_ORDERS = 'fetchStatisticOrders';\nexport var FETCH_STATISTIC_TOP_SALES_COUNTRIES = 'fetchStatisticTopSalesCountries';\nexport var GET_PERCENT_TOP_SALES_COUNTRIES = 'getPercentTopSalesCountries';\nexport var GET_STATISTICS_ORDERS_SELLER = 'getStatisticsOrdersSeller';\nexport var FETCH_STATISTIC_ORDERS_SUPPLIER = 'fetchStatisticOrdersSupplier';\nexport var GET_STATISTICS_ORDER_SUPPLIER = 'getStatisticsOrdersSupplier';\nexport var FETCH_STATISTIC_REF_ACTIVE = 'fetchStatisticRefActive';\nexport var FETCH_STATISTIC_REF_SALE = 'fetchStatisticRefSale';\nexport var GET_STATISTIC_REF = 'getStatisticRef';\nexport var state = {\n  statisticOrders: {},\n  supplierStatisticOrders: {},\n  statisticTopSalesCountries: {},\n  statisticRefActive: {},\n  statisticRefSale: {}\n};\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, FETCH_STATISTIC_ORDERS, function (state, payload) {\n  state.statisticOrders = payload;\n}), _defineProperty(_mutations, FETCH_STATISTIC_TOP_SALES_COUNTRIES, function (state, payload) {\n  state.statisticTopSalesCountries = payload;\n}), _defineProperty(_mutations, FETCH_STATISTIC_ORDERS_SUPPLIER, function (state, payload) {\n  state.supplierStatisticOrders = payload;\n}), _defineProperty(_mutations, FETCH_STATISTIC_REF_ACTIVE, function (state, payload) {\n  state.statisticRefActive = payload;\n}), _defineProperty(_mutations, FETCH_STATISTIC_REF_SALE, function (state, payload) {\n  state.statisticRefSale = payload;\n}), _mutations);\nexport var actions = {\n  /**\n   *\n   * @param commit\n   * @param payload\n   * @return {Promise<void>}\n   */\n  fetchStatisticOrders: function () {\n    var _fetchStatisticOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return api.fetchStatisticOrders(payload);\n\n            case 3:\n              response = _context.sent;\n\n              if (!response || response.error) {\n                response = {};\n              }\n\n              commit(FETCH_STATISTIC_ORDERS, response);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function fetchStatisticOrders(_x, _x2) {\n      return _fetchStatisticOrders.apply(this, arguments);\n    }\n\n    return fetchStatisticOrders;\n  }(),\n\n  /**\n   *\n   * @param commit\n   * @param payload\n   * @return {Promise<void>}\n   */\n  fetchStatisticTopSalesCountries: function () {\n    var _fetchStatisticTopSalesCountries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return api.fetchStatisticTopSalesCountries(payload);\n\n            case 3:\n              response = _context2.sent;\n\n              if (!response || response.error) {\n                response = {\n                  countries: {}\n                };\n              }\n\n              commit(FETCH_STATISTIC_TOP_SALES_COUNTRIES, response.countries);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function fetchStatisticTopSalesCountries(_x3, _x4) {\n      return _fetchStatisticTopSalesCountries.apply(this, arguments);\n    }\n\n    return fetchStatisticTopSalesCountries;\n  }(),\n  fetchStatisticOrdersSupplier: function () {\n    var _fetchStatisticOrdersSupplier = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref3, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              result = {\n                success: true\n              };\n              _context3.next = 4;\n              return api.fetchStatisticOrdersSupplier(payload);\n\n            case 4:\n              response = _context3.sent;\n\n              if (response && response.errorMessage) {\n                result = {\n                  success: false,\n                  message: response.errorMessage\n                };\n                response = {};\n              }\n\n              commit(FETCH_STATISTIC_ORDERS_SUPPLIER, response);\n              return _context3.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function fetchStatisticOrdersSupplier(_x5, _x6) {\n      return _fetchStatisticOrdersSupplier.apply(this, arguments);\n    }\n\n    return fetchStatisticOrdersSupplier;\n  }(),\n  fetchStatisticRefActive: function () {\n    var _fetchStatisticRefActive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref4, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              result = {\n                success: true\n              };\n              _context4.next = 4;\n              return api.fetchStatisticRefActive(payload);\n\n            case 4:\n              response = _context4.sent;\n\n              if (response && response.errorMessage) {\n                result = {\n                  success: false,\n                  message: response.errorMessage\n                };\n                response = {};\n              }\n\n              commit(FETCH_STATISTIC_REF_ACTIVE, response);\n              return _context4.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function fetchStatisticRefActive(_x7, _x8) {\n      return _fetchStatisticRefActive.apply(this, arguments);\n    }\n\n    return fetchStatisticRefActive;\n  }(),\n  fetchStatisticRefSale: function () {\n    var _fetchStatisticRefSale = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref5, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              result = {\n                success: true\n              };\n              _context5.next = 4;\n              return api.fetchStatisticRefSale(payload);\n\n            case 4:\n              response = _context5.sent;\n\n              if (response && response.errorMessage) {\n                result = {\n                  success: false,\n                  message: response.errorMessage\n                };\n                response = {};\n              }\n\n              commit(FETCH_STATISTIC_REF_SALE, response);\n              return _context5.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function fetchStatisticRefSale(_x9, _x10) {\n      return _fetchStatisticRefSale.apply(this, arguments);\n    }\n\n    return fetchStatisticRefSale;\n  }()\n};\n\nvar getRouteByStatus = function getRouteByStatus(status) {\n  return {\n    name: 'order-list',\n    query: {\n      status: status\n    }\n  };\n};\n\nvar status = {\n  pending: {\n    icon: 'shopping-cart',\n    color: 'warning',\n    heading: 'Pending',\n    route: getRouteByStatus(ORDER_STATUS_PENDING)\n  },\n  process: {\n    icon: 'collection-folder-image',\n    color: 'info',\n    heading: 'Process',\n    route: getRouteByStatus(ORDER_STATUS_PROCESS)\n  },\n  fulfilled: {\n    icon: 'truck',\n    color: 'success',\n    heading: 'Fulfilled',\n    route: getRouteByStatus(ORDER_STATUS_FULFILLED)\n  },\n  reject: {\n    icon: 'delete',\n    color: 'danger',\n    heading: 'Cancelled',\n    route: getRouteByStatus(ORDER_STATUS_CANCELED)\n  }\n};\nvar ReferentCard = {\n  user_active: {\n    icon: 'collection-folder-image',\n    color: 'warning',\n    heading: 'User Active'\n  },\n  amount: {\n    icon: 'shopping-cart',\n    color: 'info',\n    heading: 'Amount'\n  },\n  order: {\n    icon: 'truck',\n    color: 'success',\n    heading: 'Order'\n  }\n};\n\nvar getStatisticsByStatus = function getStatisticsByStatus(statisticsStatus) {\n  var statistics = [];\n  Object.keys(statisticsStatus).forEach(function (key) {\n    statistics.push(Object.assign(_objectSpread({\n      value: statisticsStatus[key] || 0\n    }, status[key])));\n  });\n  return statistics;\n};\n\nvar getStatisticsRefByIcon = function getStatisticsRefByIcon(statisticsRef) {\n  var statistics = [];\n  Object.keys(statisticsRef).forEach(function (key) {\n    statistics.push(Object.assign(_objectSpread({\n      value: statisticsRef[key] || 0\n    }, ReferentCard[key])));\n  });\n  return statistics;\n};\n\nexport var getters = (_getters = {}, _defineProperty(_getters, GET_PERCENT_TOP_SALES_COUNTRIES, function (state, getters, rootState) {\n  if (!Object.keys(state.statisticTopSalesCountries).length) {\n    return [];\n  }\n\n  var countries = [];\n  var total = Object.values(state.statisticTopSalesCountries).reduce(function (accumulator, currentValue) {\n    return accumulator + currentValue;\n  });\n  Object.keys(state.statisticTopSalesCountries).forEach(function (key) {\n    var sales = state.statisticTopSalesCountries[key];\n    var country = rootState.shared.countries.find(function (_ref6) {\n      var code = _ref6.code;\n      return code === key;\n    });\n    countries.push({\n      code: key,\n      name: country ? country.name : key,\n      sales: sales,\n      percent: (sales / total * 100).toFixed(2)\n    });\n  });\n  return countries.sort(function (a, b) {\n    return b.sales - a.sales;\n  });\n}), _defineProperty(_getters, GET_STATISTICS_ORDERS_SELLER, function (state) {\n  var statisticsStatus;\n\n  if (state.statisticOrders.result != undefined) {\n    statisticsStatus = {\n      pending: state.statisticOrders.result.order_pending,\n      process: state.statisticOrders.result.order_process,\n      fulfilled: state.statisticOrders.result.order_fulfilled,\n      reject: state.statisticOrders.result.order_canceled\n    };\n    return getStatisticsByStatus(statisticsStatus);\n  }\n\n  return [];\n}), _defineProperty(_getters, GET_STATISTICS_ORDER_SUPPLIER, function (state) {\n  var statisticsStatus = {\n    pending: state.supplierStatisticOrders.order_pending,\n    fulfilled: state.supplierStatisticOrders.order_fulfilled,\n    reject: state.supplierStatisticOrders.order_reject\n  };\n  return getStatisticsByStatus(statisticsStatus);\n}), _defineProperty(_getters, GET_STATISTIC_REF, function (state) {\n  var statisticsRef = {\n    user_active: state.statisticRefActive.user_active,\n    amount: state.statisticRefSale.amount,\n    order: state.statisticRefSale.order\n  };\n  return getStatisticsRefByIcon(statisticsRef);\n}), _getters);",{"version":3,"sources":["/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/dashboard/store/index.js"],"names":["api","ORDER_STATUS_CANCELED","ORDER_STATUS_FULFILLED","ORDER_STATUS_PENDING","ORDER_STATUS_PROCESS","FETCH_STATISTIC_ORDERS","FETCH_STATISTIC_TOP_SALES_COUNTRIES","GET_PERCENT_TOP_SALES_COUNTRIES","GET_STATISTICS_ORDERS_SELLER","FETCH_STATISTIC_ORDERS_SUPPLIER","GET_STATISTICS_ORDER_SUPPLIER","FETCH_STATISTIC_REF_ACTIVE","FETCH_STATISTIC_REF_SALE","GET_STATISTIC_REF","state","statisticOrders","supplierStatisticOrders","statisticTopSalesCountries","statisticRefActive","statisticRefSale","mutations","payload","actions","fetchStatisticOrders","commit","response","error","fetchStatisticTopSalesCountries","countries","fetchStatisticOrdersSupplier","result","success","errorMessage","message","fetchStatisticRefActive","fetchStatisticRefSale","getRouteByStatus","status","name","query","pending","icon","color","heading","route","process","fulfilled","reject","ReferentCard","user_active","amount","order","getStatisticsByStatus","statisticsStatus","statistics","Object","keys","forEach","key","push","assign","value","getStatisticsRefByIcon","statisticsRef","getters","rootState","length","total","values","reduce","accumulator","currentValue","sales","country","shared","find","code","percent","toFixed","sort","a","b","undefined","order_pending","order_process","order_fulfilled","order_canceled","order_reject"],"mappings":"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","sourcesContent":["import api from '../api'\nimport {\n  ORDER_STATUS_CANCELED,\n  ORDER_STATUS_FULFILLED,\n  ORDER_STATUS_PENDING,\n  ORDER_STATUS_PROCESS,\n} from '@core/constants'\n\nexport const FETCH_STATISTIC_ORDERS = 'fetchStatisticOrders'\nexport const FETCH_STATISTIC_TOP_SALES_COUNTRIES =\n  'fetchStatisticTopSalesCountries'\nexport const GET_PERCENT_TOP_SALES_COUNTRIES = 'getPercentTopSalesCountries'\nexport const GET_STATISTICS_ORDERS_SELLER = 'getStatisticsOrdersSeller'\n\nexport const FETCH_STATISTIC_ORDERS_SUPPLIER = 'fetchStatisticOrdersSupplier'\nexport const GET_STATISTICS_ORDER_SUPPLIER = 'getStatisticsOrdersSupplier'\n\nexport const FETCH_STATISTIC_REF_ACTIVE = 'fetchStatisticRefActive'\nexport const FETCH_STATISTIC_REF_SALE = 'fetchStatisticRefSale'\nexport const GET_STATISTIC_REF = 'getStatisticRef'\n\nexport const state = {\n  statisticOrders: {},\n  supplierStatisticOrders: {},\n  statisticTopSalesCountries: {},\n  statisticRefActive: {},\n  statisticRefSale: {},\n}\n\nexport const mutations = {\n  [FETCH_STATISTIC_ORDERS]: (state, payload) => {\n    state.statisticOrders = payload\n  },\n  [FETCH_STATISTIC_TOP_SALES_COUNTRIES]: (state, payload) => {\n    state.statisticTopSalesCountries = payload\n  },\n  [FETCH_STATISTIC_ORDERS_SUPPLIER]: (state, payload) => {\n    state.supplierStatisticOrders = payload\n  },\n  [FETCH_STATISTIC_REF_ACTIVE]: (state, payload) => {\n    state.statisticRefActive = payload\n  },\n  [FETCH_STATISTIC_REF_SALE]: (state, payload) => {\n    state.statisticRefSale = payload\n  },\n}\n\nexport const actions = {\n  /**\n   *\n   * @param commit\n   * @param payload\n   * @return {Promise<void>}\n   */\n  async fetchStatisticOrders({ commit }, payload) {\n    let response = await api.fetchStatisticOrders(payload)\n\n    if (!response || response.error) {\n      response = {}\n    }\n\n    commit(FETCH_STATISTIC_ORDERS, response)\n  },\n\n  /**\n   *\n   * @param commit\n   * @param payload\n   * @return {Promise<void>}\n   */\n  async fetchStatisticTopSalesCountries({ commit }, payload) {\n    let response = await api.fetchStatisticTopSalesCountries(payload)\n\n    if (!response || response.error) {\n      response = {\n        countries: {},\n      }\n    }\n\n    commit(FETCH_STATISTIC_TOP_SALES_COUNTRIES, response.countries)\n  },\n  async fetchStatisticOrdersSupplier({ commit }, payload) {\n    let result = { success: true }\n    let response = await api.fetchStatisticOrdersSupplier(payload)\n\n    if (response && response.errorMessage) {\n      result = { success: false, message: response.errorMessage }\n      response = {}\n    }\n\n    commit(FETCH_STATISTIC_ORDERS_SUPPLIER, response)\n    return result\n  },\n\n  async fetchStatisticRefActive({ commit }, payload) {\n    let result = { success: true }\n    let response = await api.fetchStatisticRefActive(payload)\n\n    if (response && response.errorMessage) {\n      result = { success: false, message: response.errorMessage }\n      response = {}\n    }\n\n    commit(FETCH_STATISTIC_REF_ACTIVE, response)\n    return result\n  },\n\n  async fetchStatisticRefSale({ commit }, payload) {\n    let result = { success: true }\n    let response = await api.fetchStatisticRefSale(payload)\n\n    if (response && response.errorMessage) {\n      result = { success: false, message: response.errorMessage }\n      response = {}\n    }\n\n    commit(FETCH_STATISTIC_REF_SALE, response)\n    return result\n  },\n}\n\nconst getRouteByStatus = (status) => {\n  return { name: 'order-list', query: { status } }\n}\n\nconst status = {\n  pending: {\n    icon: 'shopping-cart',\n    color: 'warning',\n    heading: 'Pending',\n    route: getRouteByStatus(ORDER_STATUS_PENDING),\n  },\n  process: {\n    icon: 'collection-folder-image',\n    color: 'info',\n    heading: 'Process',\n    route: getRouteByStatus(ORDER_STATUS_PROCESS),\n  },\n  fulfilled: {\n    icon: 'truck',\n    color: 'success',\n    heading: 'Fulfilled',\n    route: getRouteByStatus(ORDER_STATUS_FULFILLED),\n  },\n  reject: {\n    icon: 'delete',\n    color: 'danger',\n    heading: 'Cancelled',\n    route: getRouteByStatus(ORDER_STATUS_CANCELED),\n  },\n}\n\nconst ReferentCard = {\n  user_active: {\n    icon: 'collection-folder-image',\n    color: 'warning',\n    heading: 'User Active',\n  },\n  amount: {\n    icon: 'shopping-cart',\n    color: 'info',\n    heading: 'Amount',\n  },\n  order: {\n    icon: 'truck',\n    color: 'success',\n    heading: 'Order',\n  },\n}\nconst getStatisticsByStatus = (statisticsStatus) => {\n  const statistics = []\n  Object.keys(statisticsStatus).forEach((key) => {\n    statistics.push(\n      Object.assign({ value: statisticsStatus[key] || 0, ...status[key] })\n    )\n  })\n\n  return statistics\n}\n\nconst getStatisticsRefByIcon = (statisticsRef) => {\n  const statistics = []\n  Object.keys(statisticsRef).forEach((key) => {\n    statistics.push(\n      Object.assign({ value: statisticsRef[key] || 0, ...ReferentCard[key] })\n    )\n  })\n\n  return statistics\n}\n\nexport const getters = {\n  [GET_PERCENT_TOP_SALES_COUNTRIES]: (state, getters, rootState) => {\n    if (!Object.keys(state.statisticTopSalesCountries).length) {\n      return []\n    }\n    const countries = []\n    const total = Object.values(state.statisticTopSalesCountries).reduce(\n      (accumulator, currentValue) => accumulator + currentValue\n    )\n\n    Object.keys(state.statisticTopSalesCountries).forEach((key) => {\n      const sales = state.statisticTopSalesCountries[key]\n      const country = rootState.shared.countries.find(\n        ({ code }) => code === key\n      )\n\n      countries.push({\n        code: key,\n        name: country ? country.name : key,\n        sales,\n        percent: ((sales / total) * 100).toFixed(2),\n      })\n    })\n\n    return countries.sort((a, b) => b.sales - a.sales)\n  },\n  [GET_STATISTICS_ORDERS_SELLER]: (state) => {\n    let statisticsStatus\n    if (state.statisticOrders.result != undefined) {\n      statisticsStatus = {\n        pending: state.statisticOrders.result.order_pending,\n        process: state.statisticOrders.result.order_process,\n        fulfilled: state.statisticOrders.result.order_fulfilled,\n        reject: state.statisticOrders.result.order_canceled,\n      }\n      return getStatisticsByStatus(statisticsStatus)\n    }\n\n    return []\n  },\n  [GET_STATISTICS_ORDER_SUPPLIER]: (state) => {\n    const statisticsStatus = {\n      pending: state.supplierStatisticOrders.order_pending,\n      fulfilled: state.supplierStatisticOrders.order_fulfilled,\n      reject: state.supplierStatisticOrders.order_reject,\n    }\n\n    return getStatisticsByStatus(statisticsStatus)\n  },\n  [GET_STATISTIC_REF]: (state) => {\n    const statisticsRef = {\n      user_active: state.statisticRefActive.user_active,\n      amount: state.statisticRefSale.amount,\n      order: state.statisticRefSale.order,\n    }\n    return getStatisticsRefByIcon(statisticsRef)\n  },\n}\n"]}]}