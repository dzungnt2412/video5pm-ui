{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/fulfillment/views/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/fulfillment/views/List.vue","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport EmptySearchResult from '@components/shared/EmptySearchResult';\nimport { mapState, mapActions } from 'vuex';\nimport mixinRoute from '@core/mixins/route';\nimport { VclTable } from 'vue-content-loading';\nimport mixinTable from '@core/mixins/table';\nimport mixinExportOrder from '@/packages/container/mixins/export-file';\nimport { FULLFILL_EXPORT_BUCKET } from '@core/constants/storage';\nexport default {\n  name: 'FulfillmentList',\n  mixins: [mixinRoute, mixinTable, mixinExportOrder],\n  components: {\n    EmptySearchResult: EmptySearchResult,\n    VclTable: VclTable\n  },\n  data: function data() {\n    return {\n      isFetching: false,\n      filter: {\n        page: 1,\n        search: '',\n        limit: 50,\n        user_id: 0\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState('fulfillment', {\n    fulfillments: function fulfillments(state) {\n      return state.fulfillments;\n    },\n    count: function count(state) {\n      return state.count;\n    },\n    download: function download(state) {\n      return state.download;\n    }\n  })),\n  created: function created() {\n    this.filter = this.getRouteQuery();\n    this.fetch();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions('fulfillment', ['fetchFulfillments', 'countFulfillments', 'exportFulfillments'])), {}, {\n    fetch: function () {\n      var _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isFetching = true;\n                this.handleUpdateRouteQuery();\n                _context.next = 4;\n                return this.fetchFulfillments(this.filter);\n\n              case 4:\n                result = _context.sent;\n\n                if (!result.success) {\n                  this.$notify({\n                    title: 'Alert',\n                    type: 'error',\n                    text: 'Server Error'\n                  });\n                }\n\n                this.isFetching = false;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetch() {\n        return _fetch.apply(this, arguments);\n      }\n\n      return fetch;\n    }(),\n    changeDate: function changeDate(date) {\n      this.date = date;\n      this.filter = _objectSpread(_objectSpread({}, this.filter), {}, {\n        create_start_date: date.startDate.toISOString().split('T')[0],\n        create_end_date: date.endDate.toISOString().split('T')[0]\n      });\n    },\n    exportExcel: function () {\n      var _exportExcel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var timePerDay, endDate, startDate, days, result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(!this.filter.create_end_date || !this.filter.create_start_date)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$notify({\n                  title: 'Alert',\n                  type: 'error',\n                  text: 'Please choose the time to export'\n                }));\n\n              case 2:\n                timePerDay = 24 * 60 * 60 * 1000;\n                endDate = new Date(this.filter.create_end_date);\n                startDate = new Date(this.filter.create_start_date);\n                days = (endDate - startDate) / timePerDay; // 1 day\n\n                if (!(days > 7)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$notify({\n                  title: 'Alert',\n                  type: 'error',\n                  text: 'Export : Max 7 days'\n                }));\n\n              case 8:\n                this.handleUpdateRouteQuery();\n                _context2.next = 11;\n                return this.exportFulfillments(this.filter);\n\n              case 11:\n                result = _context2.sent;\n                this.exportFile(result, \"fullfill-export.csv\", FULLFILL_EXPORT_BUCKET);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function exportExcel() {\n        return _exportExcel.apply(this, arguments);\n      }\n\n      return exportExcel;\n    }()\n  }),\n  watch: {\n    filter: {\n      handler: function handler() {\n        this.fetch();\n      },\n      deep: true\n    }\n  }\n};",null]}