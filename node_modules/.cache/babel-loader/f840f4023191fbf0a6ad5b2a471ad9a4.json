{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/uikit/mixins/Popper.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/uikit/mixins/Popper.js","mtime":1604479002005},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["import Vue from 'vue';\nvar PopperJS = Vue.prototype.$isServer ? function () {} : require('popper.js/dist/popper.min').default;\n\nvar stop = function stop(e) {\n  return e.stopPropagation();\n};\n\nexport default {\n  props: {\n    transformOrigin: {\n      type: [Boolean, String],\n      default: true\n    },\n    placement: {\n      type: String,\n      default: 'bottom'\n    },\n    boundariesPadding: {\n      type: Number,\n      default: 5\n    },\n    reference: {},\n    popper: {},\n    offset: {\n      default: 0\n    },\n    value: Boolean,\n    visibleArrow: Boolean,\n    arrowOffset: {\n      type: Number,\n      default: 35\n    },\n    appendToBody: {\n      type: Boolean,\n      default: true\n    },\n    popperOptions: {\n      type: Object,\n      default: function _default() {\n        return {\n          boundariesPadding: 0,\n          gpuAcceleration: false,\n          modifiers: {\n            preventOverflow: {\n              boundariesElement: 'window',\n              enabled: true,\n              padding: 0\n            }\n          }\n        };\n      }\n    }\n  },\n  data: function data() {\n    return {\n      showPopper: false,\n      currentPlacement: ''\n    };\n  },\n  methods: {\n    createPopper: function createPopper() {\n      var _this = this;\n\n      if (this.$isServer) {\n        return;\n      }\n\n      this.currentPlacement = this.currentPlacement || this.placement;\n\n      if (!/^(top|bottom|left|right)(-start|-end)?$/g.test(this.currentPlacement)) {\n        return;\n      }\n\n      var options = this.popperOptions;\n      var popper = this.popperElm = this.popperElm || this.popper || this.$refs.popper;\n      var reference = this.referenceElm = this.referenceElm || this.reference || this.$refs.reference;\n\n      if (!reference && this.$slots.reference && this.$slots.reference[0]) {\n        reference = this.referenceElm = this.$slots.reference[0].elm;\n      }\n\n      if (!popper || !reference) {\n        return;\n      }\n\n      if (this.visibleArrow) {\n        this.appendArrow(popper);\n      }\n\n      if (this.appendToBody) {\n        document.body.appendChild(this.popperElm);\n      }\n\n      if (this.popperJS && this.popperJS.destroy) {\n        this.popperJS.destroy();\n      }\n\n      options.placement = this.currentPlacement;\n      options.offset = this.offset;\n      options.arrowOffset = this.arrowOffset;\n      this.popperJS = new PopperJS(reference, popper, options);\n      this.popperJS.options.onCreate(function () {\n        _this.$emit('created', _this);\n\n        _this.resetTransformOrigin();\n\n        _this.$nextTick(_this.updatePopper);\n      });\n\n      if (typeof options.onUpdate === 'function') {\n        this.popperJS.options.onUpdate(options.onUpdate);\n      }\n\n      this.popperJS.popper.style.zIndex = 20000;\n      this.popperElm.addEventListener('click', stop);\n    },\n    updatePopper: function updatePopper() {\n      var popperJS = this.popperJS;\n\n      if (popperJS) {\n        popperJS.update();\n\n        if (popperJS.popper) {\n          popperJS.popper.style.zIndex = 20000;\n        }\n      } else {\n        this.createPopper();\n      }\n    },\n    doDestroy: function doDestroy(forceDestroy) {\n      if (!this.popperJS || this.showPopper && !forceDestroy) return;\n      this.popperJS.destroy();\n      this.popperJS = null;\n    },\n    destroyPopper: function destroyPopper() {\n      if (this.popperJS) {\n        this.resetTransformOrigin();\n      }\n    },\n    resetTransformOrigin: function resetTransformOrigin() {\n      if (!this.transformOrigin) {\n        return;\n      }\n\n      var placementMap = {\n        top: 'bottom',\n        bottom: 'top',\n        left: 'right',\n        right: 'left'\n      };\n      var placement = this.popperJS.popper.getAttribute('x-placement').split('-')[0];\n      var origin = placementMap[placement];\n      this.popperJS.popper.style.transformOrigin = typeof this.transformOrigin === 'string' ? this.transformOrigin : ['top', 'bottom'].indexOf(placement) > -1 ? \"center \".concat(origin) : \"\".concat(origin, \" center\");\n    },\n    appendArrow: function appendArrow(element) {\n      var hash;\n\n      if (this.appended) {\n        return;\n      }\n\n      this.appended = true;\n\n      for (var item in element.attributes) {\n        if (/^_v-/.test(element.attributes[item].name)) {\n          hash = element.attributes[item].name;\n          break;\n        }\n      }\n\n      var arrow = document.createElement('div');\n\n      if (hash) {\n        arrow.setAttribute(hash, '');\n      }\n\n      arrow.setAttribute('x-arrow', '');\n      arrow.className = 'popper__arrow';\n      element.appendChild(arrow);\n    }\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler(val) {\n        this.showPopper = val;\n        this.$emit('input', val);\n      }\n    },\n    showPopper: function showPopper(val) {\n      if (this.disabled) {\n        return;\n      }\n\n      val ? this.updatePopper() : this.destroyPopper();\n      this.$emit('input', val);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.doDestroy(true);\n\n    if (this.popperElm && this.popperElm.parentNode === document.body) {\n      this.popperElm.removeEventListener('click', stop);\n      document.body.removeChild(this.popperElm);\n    }\n  },\n  deactivated: function deactivated() {\n    this.$options.beforeDestroy[0].call(this);\n  }\n};",null]}