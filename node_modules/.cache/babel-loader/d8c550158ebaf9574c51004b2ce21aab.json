{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/uikit/mixins/FormElement.js","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/uikit/mixins/FormElement.js","mtime":1603898990388},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1597736267502}],"contextDependencies":[],"result":["import config from '../config';\nimport Emitter from './Emitter';\nexport default {\n  mixins: [Emitter],\n  props: {\n    size: String,\n    expanded: true,\n    loading: Boolean,\n    autocomplete: String,\n    rounded: Boolean,\n    maxlength: [Number, String],\n    minlength: [Number, String],\n    validateEvent: {\n      type: Boolean,\n      default: true\n    },\n    useHtml5Validation: {\n      type: Boolean,\n      default: config.useHtml5Validation\n    }\n  },\n  computed: {\n    parentField: function parentField() {\n      var parent = this.$parent;\n\n      for (var i = 0; i < 3; i++) {\n        if (parent && !parent.$data._isField) {\n          parent = parent.$parent;\n        }\n      }\n\n      return parent;\n    },\n    statusType: function statusType() {\n      if (!this.parentField) {\n        return;\n      }\n\n      if (!this.parentField.newType) {\n        return;\n      }\n\n      if (typeof this.parentField.newType === 'string') {\n        return this.parentField.newType;\n      } else {\n        for (var key in this.parentField.newType) {\n          if (this.parentField.newType[key]) {\n            return key;\n          }\n        }\n      }\n    },\n    statusMessage: function statusMessage() {\n      if (!this.parentField) {\n        return;\n      }\n\n      return this.parentField.newMessage;\n    }\n  },\n  data: function data() {\n    return {\n      isValid: true,\n      isFocused: false\n    };\n  },\n  methods: {\n    focus: function focus() {\n      var _this = this;\n\n      if (this.$data.elementRef === undefined) {\n        return;\n      }\n\n      this.$nextTick(function () {\n        return _this.$el.querySelector(_this.$data.elementRef).focus();\n      });\n    },\n    onBlur: function onBlur($event) {\n      this.isFocused = false;\n      this.$emit('blur', $event);\n      this.checkHtml5Validity();\n\n      if (this.validateEvent) {\n        this.dispatch('SFormItem', 's.form.blur', [this.value]);\n      }\n    },\n    onFocus: function onFocus($event) {\n      this.isFocused = true;\n      this.$emit('focus', $event);\n    },\n    checkHtml5Validity: function checkHtml5Validity() {\n      var _this2 = this;\n\n      if (!this.useHtml5Validation) {\n        return;\n      }\n\n      if (this.$refs[this.$data.elementRef] === undefined) {\n        return;\n      }\n\n      var el = this.$el.querySelector(this.$data.elementRef);\n      var type = null;\n      var message = null;\n      var isValid = true;\n\n      if (!el.checkValidity()) {\n        type = 'danger';\n        message = el.validationMessage;\n        isValid = false;\n      }\n\n      this.isValid = isValid;\n      this.$nextTick(function () {\n        if (_this2.parentField) {\n          if (!_this2.parentField.type) {\n            _this2.parentField.newType = type;\n          }\n\n          if (!_this2.parentField.message) {\n            _this2.parentField.newMessage = message;\n          }\n        }\n      });\n      return this.isValid;\n    }\n  }\n};",{"version":3,"sources":["/home/tiendzung/workspace/lionnix/lionnix-seller-v2/uikit/mixins/FormElement.js"],"names":["config","Emitter","mixins","props","size","String","expanded","loading","Boolean","autocomplete","rounded","maxlength","Number","minlength","validateEvent","type","default","useHtml5Validation","computed","parentField","parent","$parent","i","$data","_isField","statusType","newType","key","statusMessage","newMessage","data","isValid","isFocused","methods","focus","elementRef","undefined","$nextTick","$el","querySelector","onBlur","$event","$emit","checkHtml5Validity","dispatch","value","onFocus","$refs","el","message","checkValidity","validationMessage"],"mappings":"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","sourcesContent":["import config from '../config'\nimport Emitter from './Emitter'\n\nexport default {\n  mixins: [Emitter],\n  props: {\n    size: String,\n    expanded: true,\n    loading: Boolean,\n    autocomplete: String,\n    rounded: Boolean,\n    maxlength: [Number, String],\n    minlength: [Number, String],\n    validateEvent: {\n      type: Boolean,\n      default: true,\n    },\n    useHtml5Validation: {\n      type: Boolean,\n      default: config.useHtml5Validation,\n    },\n  },\n  computed: {\n    parentField() {\n      let parent = this.$parent\n\n      for (let i = 0; i < 3; i++) {\n        if (parent && !parent.$data._isField) {\n          parent = parent.$parent\n        }\n      }\n\n      return parent\n    },\n\n    statusType() {\n      if (!this.parentField) {\n        return\n      }\n      if (!this.parentField.newType) {\n        return\n      }\n\n      if (typeof this.parentField.newType === 'string') {\n        return this.parentField.newType\n      } else {\n        for (let key in this.parentField.newType) {\n          if (this.parentField.newType[key]) {\n            return key\n          }\n        }\n      }\n    },\n\n    statusMessage() {\n      if (!this.parentField) {\n        return\n      }\n\n      return this.parentField.newMessage\n    },\n  },\n  data() {\n    return {\n      isValid: true,\n      isFocused: false,\n    }\n  },\n  methods: {\n    focus() {\n      if (this.$data.elementRef === undefined) {\n        return\n      }\n\n      this.$nextTick(() =>\n        this.$el.querySelector(this.$data.elementRef).focus()\n      )\n    },\n\n    onBlur($event) {\n      this.isFocused = false\n      this.$emit('blur', $event)\n      this.checkHtml5Validity()\n      if (this.validateEvent) {\n        this.dispatch('SFormItem', 's.form.blur', [this.value])\n      }\n    },\n\n    onFocus($event) {\n      this.isFocused = true\n      this.$emit('focus', $event)\n    },\n\n    checkHtml5Validity() {\n      if (!this.useHtml5Validation) {\n        return\n      }\n\n      if (this.$refs[this.$data.elementRef] === undefined) {\n        return\n      }\n\n      const el = this.$el.querySelector(this.$data.elementRef)\n\n      let type = null\n      let message = null\n      let isValid = true\n\n      if (!el.checkValidity()) {\n        type = 'danger'\n        message = el.validationMessage\n        isValid = false\n      }\n\n      this.isValid = isValid\n      this.$nextTick(() => {\n        if (this.parentField) {\n          if (!this.parentField.type) {\n            this.parentField.newType = type\n          }\n\n          if (!this.parentField.message) {\n            this.parentField.newMessage = message\n          }\n        }\n      })\n\n      return this.isValid\n    },\n  },\n}\n"]}]}