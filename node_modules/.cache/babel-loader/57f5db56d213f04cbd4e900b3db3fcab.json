{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/views/Forgot.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/views/Forgot.vue","mtime":1605110441120},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nimport VueRecaptcha from 'vue-recaptcha';\nexport default {\n  name: 'forgot',\n  components: {\n    VueRecaptcha: VueRecaptcha\n  },\n  data: function data() {\n    return {\n      email: null,\n      form: {\n        checkCaptcha: false\n      },\n      requiredEmail: false,\n      check: true\n    };\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions('auth', ['forgotPassword'])), {}, {\n    checkRequired: function checkRequired() {\n      var result = true;\n\n      if (!this.email) {\n        this.requiredEmail = true;\n        result = false;\n      } else {\n        this.requiredEmail = false;\n      }\n\n      return result;\n    },\n    onForgot: function () {\n      var _onForgot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var params, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.checkRequired()) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                if (this.form.checkCaptcha) {\n                  _context.next = 5;\n                  break;\n                }\n\n                this.check = false;\n                return _context.abrupt(\"return\");\n\n              case 5:\n                params = {\n                  email: this.email\n                };\n                _context.next = 8;\n                return this.forgotPassword(params);\n\n              case 8:\n                response = _context.sent;\n\n                if (response.success) {\n                  this.$refs.recapcha.reset();\n                  this.form.checkCaptcha = false;\n                  this.$toast.open({\n                    type: 'success',\n                    message: response.message\n                  });\n                } else {\n                  this.$refs.recapcha.reset();\n                  this.form.checkCaptcha = false;\n                  this.$toast.open({\n                    type: 'error',\n                    message: response.error\n                  });\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onForgot() {\n        return _onForgot.apply(this, arguments);\n      }\n\n      return onForgot;\n    }(),\n    onVerify: function onVerify(response) {\n      if (response) this.form.checkCaptcha = true;\n      this.check = true;\n    },\n    onCaptchaExpired: function onCaptchaExpired() {\n      this.form.checkCaptcha = false;\n    }\n  }),\n  computed: {\n    recapchaKey: function recapchaKey() {\n      return \"\".concat(process.env.VUE_APP_RECAPCHA_KEY);\n    }\n  }\n};",{"version":3,"sources":["Forgot.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,YAAA,MAAA,eAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AACA,QAAA,YAAA,EAAA;AADA,OAFA;AAKA,MAAA,aAAA,EAAA,KALA;AAMA,MAAA,KAAA,EAAA;AANA,KAAA;AAQA,GAZA;AAaA,EAAA,OAAA,kCACA,UAAA,CAAA,MAAA,EAAA,CAAA,gBAAA,CAAA,CADA;AAEA,IAAA,aAFA,2BAEA;AACA,UAAA,MAAA,GAAA,IAAA;;AACA,UAAA,CAAA,KAAA,KAAA,EAAA;AACA,aAAA,aAAA,GAAA,IAAA;AACA,QAAA,MAAA,GAAA,KAAA;AACA,OAHA,MAGA;AACA,aAAA,aAAA,GAAA,KAAA;AACA;;AACA,aAAA,MAAA;AACA,KAXA;AAaA,IAAA,QAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAcA,KAAA,aAAA,EAdA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAiBA,KAAA,IAAA,CAAA,YAjBA;AAAA;AAAA;AAAA;;AAkBA,qBAAA,KAAA,GAAA,KAAA;AAlBA;;AAAA;AAqBA,gBAAA,MArBA,GAqBA;AACA,kBAAA,KAAA,EAAA,KAAA;AADA,iBArBA;AAAA;AAAA,uBAwBA,KAAA,cAAA,CAAA,MAAA,CAxBA;;AAAA;AAwBA,gBAAA,QAxBA;;AAyBA,oBAAA,QAAA,CAAA,OAAA,EAAA;AACA,uBAAA,KAAA,CAAA,QAAA,CAAA,KAAA;AACA,uBAAA,IAAA,CAAA,YAAA,GAAA,KAAA;AACA,uBAAA,MAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,EAAA,SADA;AAEA,oBAAA,OAAA,EAAA,QAAA,CAAA;AAFA,mBAAA;AAIA,iBAPA,MAOA;AACA,uBAAA,KAAA,CAAA,QAAA,CAAA,KAAA;AACA,uBAAA,IAAA,CAAA,YAAA,GAAA,KAAA;AACA,uBAAA,MAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,EAAA,OADA;AAEA,oBAAA,OAAA,EAAA,QAAA,CAAA;AAFA,mBAAA;AAIA;;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyCA,IAAA,QAAA,EAAA,kBAAA,QAAA,EAAA;AACA,UAAA,QAAA,EAAA,KAAA,IAAA,CAAA,YAAA,GAAA,IAAA;AACA,WAAA,KAAA,GAAA,IAAA;AACA,KA5CA;AA6CA,IAAA,gBAAA,EAAA,4BAAA;AACA,WAAA,IAAA,CAAA,YAAA,GAAA,KAAA;AACA;AA/CA,IAbA;AA8DA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,uBAAA,OAAA,CAAA,GAAA,CAAA,oBAAA;AACA;AAHA;AA9DA,CAAA","sourcesContent":["<template>\n  <div class=\"page vertical-align\">\n    <div class=\"vertical-align-middle\">\n      <div class=\"text-center mb-40\">\n        <h2 class=\"header-2 mb-24\">Forgot your password?</h2>\n        <div class=\"text\">\n          <p\n            >Don't worry! Enter the email address you used when you joined and\n            weâ€™ll send you instructions to reset your password.</p\n          >\n        </div>\n      </div>\n      <form @submit.prevent=\"onForgot\">\n        <label class=\" font-weight-bold mb-4  \">Email</label>\n        <p-input\n          type=\"email\"\n          class=\"mb-20\"\n          name=\"email\"\n          placeholder=\"you@example.com\"\n          v-model=\"email\"\n          validate=\"on\"\n          :required=\"requiredEmail\"\n        />\n        <div class=\"captcha mb-40 mt-40\">\n          <vue-recaptcha\n            ref=\"recapcha\"\n            @verify=\"onVerify\"\n            @expired=\"onCaptchaExpired\"\n            :sitekey=\"`${recapchaKey}`\"\n            :loadRecaptchaScript=\"true\"\n          >\n          </vue-recaptcha>\n          <span class=\"invalid-error\" v-if=\"check == false\">\n            Please check the captcha\n          </span>\n        </div>\n        <button class=\"btn btn-special btn-primary mb-20 \"\n          >Reset Password</button\n        >\n        <p class=\"text-center\">\n          <router-link class=\"backSignin\" :to=\"{ name: 'sign-in' }\">\n            Back to Sign in\n          </router-link>\n        </p>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapActions } from 'vuex'\nimport VueRecaptcha from 'vue-recaptcha'\n\nexport default {\n  name: 'forgot',\n  components: { VueRecaptcha },\n  data() {\n    return {\n      email: null,\n      form: {\n        checkCaptcha: false,\n      },\n      requiredEmail: false,\n      check: true,\n    }\n  },\n  methods: {\n    ...mapActions('auth', ['forgotPassword']),\n    checkRequired() {\n      let result = true\n      if (!this.email) {\n        this.requiredEmail = true\n        result = false\n      } else {\n        this.requiredEmail = false\n      }\n      return result\n    },\n\n    async onForgot() {\n      if (!this.checkRequired()) {\n        return\n      }\n      if (!this.form.checkCaptcha) {\n        this.check = false\n        return\n      }\n      const params = {\n        email: this.email,\n      }\n      const response = await this.forgotPassword(params)\n      if (response.success) {\n        this.$refs.recapcha.reset()\n        this.form.checkCaptcha = false\n        this.$toast.open({\n          type: 'success',\n          message: response.message,\n        })\n      } else {\n        this.$refs.recapcha.reset()\n        this.form.checkCaptcha = false\n        this.$toast.open({\n          type: 'error',\n          message: response.error,\n        })\n      }\n    },\n    onVerify: function(response) {\n      if (response) this.form.checkCaptcha = true\n      this.check = true\n    },\n    onCaptchaExpired: function() {\n      this.form.checkCaptcha = false\n    },\n  },\n  computed: {\n    recapchaKey() {\n      return `${process.env.VUE_APP_RECAPCHA_KEY}`\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/packages/auth/views"}]}