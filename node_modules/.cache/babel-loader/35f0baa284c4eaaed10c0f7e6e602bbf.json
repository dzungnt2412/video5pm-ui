{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/shop/store/index.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/shop/store/index.js","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nvar _mutations;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport api from '../api';\nimport ShopService from '@core/services/shop';\nimport AuthService from '@core/services/auth';\nexport var FETCH_SHOPS = 'fetchShops';\nexport var FETCH_SHOP = 'fetchShop';\nexport var FETCH_SHOP_UPDATE = 'fetchShopUpdate';\nexport var SELECT_SHOP = 'selectShop';\nexport var UPDATE_SHOP = 'updateShop';\nexport var ADD_SHOP = 'addShop';\nexport var REMOVE_CONNECT_SHOP = 'removeConnectShop';\n/**\n * State\n */\n\nexport var state = {\n  shop: {},\n  shopUpdate: {},\n  shops: []\n};\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, FETCH_SHOP, function (state, payload) {\n  state.shop = payload;\n}), _defineProperty(_mutations, FETCH_SHOPS, function (state, payload) {\n  state.shops = payload;\n}), _defineProperty(_mutations, ADD_SHOP, function (state, payload) {\n  state.shops.push(payload);\n}), _defineProperty(_mutations, FETCH_SHOP_UPDATE, function (state, payload) {\n  state.shopUpdate = payload;\n}), _mutations);\n/**\n * Actions\n */\n\nexport var actions = {\n  /**\n   * Init\n   * @param commit\n   */\n  init: function init(_ref) {\n    var commit = _ref.commit;\n    ShopService.init();\n\n    if (ShopService.getId()) {\n      handleSelected(commit, {\n        shop: ShopService.shop\n      });\n    }\n  },\n\n  /**\n   * Fetch shops\n   * @param commit\n   * @return {Promise<{success: boolean, message: (*|string)}|{success: boolean}>}\n   */\n  fetchShops: function () {\n    var _fetchShops = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref2.commit;\n              result = {\n                success: true\n              };\n              _context.next = 4;\n              return api.fetchShops(payload);\n\n            case 4:\n              response = _context.sent;\n\n              if (response && response.errorMessage) {\n                result = {\n                  success: false,\n                  message: response.errorMessage\n                };\n                response = {\n                  shops: []\n                };\n              }\n\n              commit(FETCH_SHOPS, response.shops);\n              return _context.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function fetchShops(_x, _x2) {\n      return _fetchShops.apply(this, arguments);\n    }\n\n    return fetchShops;\n  }(),\n  fetchShop: function () {\n    var _fetchShop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref3.commit;\n              result = {\n                success: true\n              };\n              _context2.next = 4;\n              return api.fetchShop(payload);\n\n            case 4:\n              response = _context2.sent;\n\n              if (response && !response.shop) {\n                result = {\n                  success: true,\n                  message: response.errorMessage\n                };\n                response = {\n                  shop: {}\n                };\n              }\n\n              commit(FETCH_SHOP_UPDATE, response.shop);\n              return _context2.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function fetchShop(_x3, _x4) {\n      return _fetchShop.apply(this, arguments);\n    }\n\n    return fetchShop;\n  }(),\n\n  /**\n   * Select shop\n   * @param commit\n   * @param state\n   * @param commit\n   * @param dispatch\n   * @param payload\n   * @return {Promise<object>}\n   */\n  selectShop: function () {\n    var _selectShop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref4) {\n      var commit,\n          state,\n          dispatch,\n          payload,\n          result,\n          shopId,\n          response,\n          shop,\n          _args3 = arguments;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref4.commit, state = _ref4.state, dispatch = _ref4.dispatch;\n              payload = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n\n              if (!payload.fetch) {\n                _context3.next = 8;\n                break;\n              }\n\n              _context3.next = 5;\n              return dispatch('fetchShops');\n\n            case 5:\n              result = _context3.sent;\n\n              if (!(result && !result.success)) {\n                _context3.next = 8;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", {\n                success: false,\n                fetchError: false\n              });\n\n            case 8:\n              if (state.shops.length) {\n                _context3.next = 10;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", {\n                success: false,\n                noData: true\n              });\n\n            case 10:\n              shopId = payload.id || state.shops[0].id;\n              _context3.next = 13;\n              return api.selectShop({\n                shop_id: shopId\n              });\n\n            case 13:\n              response = _context3.sent;\n\n              if (!(response && response.access_token)) {\n                _context3.next = 18;\n                break;\n              }\n\n              shop = state.shops.find(function (_ref5) {\n                var id = _ref5.id;\n                return id === shopId;\n              });\n              handleSelected(commit, {\n                shop: shop,\n                accessToken: response.access_token\n              });\n              return _context3.abrupt(\"return\", {\n                success: true\n              });\n\n            case 18:\n              return _context3.abrupt(\"return\", {\n                success: false,\n                message: response.errorMessage || ''\n              });\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function selectShop(_x5) {\n      return _selectShop.apply(this, arguments);\n    }\n\n    return selectShop;\n  }(),\n\n  /**\n   * Add shop\n   * @param commit\n   * @param payload\n   * @return {Promise<{success: boolean, message: *}|{success: boolean}>}\n   */\n  addShop: function () {\n    var _addShop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref6, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref6.commit;\n              _context4.next = 3;\n              return api.addShop(payload);\n\n            case 3:\n              response = _context4.sent;\n\n              if (!(response && response.access_token)) {\n                _context4.next = 8;\n                break;\n              }\n\n              commit(ADD_SHOP, response.shop);\n              handleSelected(commit, {\n                shop: response.shop,\n                accessToken: response.access_token\n              });\n              return _context4.abrupt(\"return\", {\n                success: true\n              });\n\n            case 8:\n              return _context4.abrupt(\"return\", {\n                success: false,\n                message: response.message || response.error\n              });\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function addShop(_x6, _x7) {\n      return _addShop.apply(this, arguments);\n    }\n\n    return addShop;\n  }(),\n\n  /**\n   * Update shop\n   * @param commit\n   * @param payload\n   * @return {Promise<{success: boolean}>}\n   */\n  // eslint-disable-next-line\n  updateShop: function () {\n    var _updateShop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref7, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref7.commit;\n              result = {\n                success: true\n              };\n              _context5.next = 4;\n              return api.updateShop(payload);\n\n            case 4:\n              response = _context5.sent;\n\n              if (response && response.errorMessage) {\n                result = {\n                  success: false,\n                  message: response.errorMessage\n                };\n                response = {\n                  shop: {}\n                };\n              }\n\n              commit(FETCH_SHOP_UPDATE, response.shop);\n              return _context5.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function updateShop(_x8, _x9) {\n      return _updateShop.apply(this, arguments);\n    }\n\n    return updateShop;\n  }(),\n  removeConnectShop: function () {\n    var _removeConnectShop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(_ref8, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref8.commit;\n              result = {\n                success: true\n              };\n              _context6.next = 4;\n              return api.removeConnectShop(payload);\n\n            case 4:\n              response = _context6.sent;\n\n              if (!response || response.error) {\n                result = {\n                  success: false,\n                  message: response.errorMessage || response.error || ''\n                };\n                response = {\n                  shop: {}\n                };\n              }\n\n              handleSelected(commit, response);\n              return _context6.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function removeConnectShop(_x10, _x11) {\n      return _removeConnectShop.apply(this, arguments);\n    }\n\n    return removeConnectShop;\n  }()\n};\n/**\n * Handle selected shop\n * @param commit\n * @param shop\n * @param accessToken\n */\n\nexport var handleSelected = function handleSelected(commit, _ref9) {\n  var shop = _ref9.shop,\n      accessToken = _ref9.accessToken;\n  commit(FETCH_SHOP, shop);\n  ShopService.set(shop);\n  var storage = {\n    id: shop.id,\n    domain: shop.domain,\n    name: shop.name,\n    logo: shop.logo,\n    platform: shop.platform\n  };\n  ShopService.storage(storage);\n\n  if (accessToken) {\n    AuthService.storageAccessToken(accessToken);\n  }\n};",{"version":3,"sources":["/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/shop/store/index.js"],"names":["api","ShopService","AuthService","FETCH_SHOPS","FETCH_SHOP","FETCH_SHOP_UPDATE","SELECT_SHOP","UPDATE_SHOP","ADD_SHOP","REMOVE_CONNECT_SHOP","state","shop","shopUpdate","shops","mutations","payload","push","actions","init","commit","getId","handleSelected","fetchShops","result","success","response","errorMessage","message","fetchShop","selectShop","dispatch","fetch","fetchError","length","noData","shopId","id","shop_id","access_token","find","accessToken","addShop","error","updateShop","removeConnectShop","set","storage","domain","name","logo","platform","storageAccessToken"],"mappings":"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","sourcesContent":["import api from '../api'\nimport ShopService from '@core/services/shop'\nimport AuthService from '@core/services/auth'\n\nexport const FETCH_SHOPS = 'fetchShops'\nexport const FETCH_SHOP = 'fetchShop'\nexport const FETCH_SHOP_UPDATE = 'fetchShopUpdate'\nexport const SELECT_SHOP = 'selectShop'\nexport const UPDATE_SHOP = 'updateShop'\nexport const ADD_SHOP = 'addShop'\nexport const REMOVE_CONNECT_SHOP = 'removeConnectShop'\n\n/**\n * State\n */\nexport const state = {\n  shop: {},\n  shopUpdate: {},\n  shops: [],\n}\n\nexport const mutations = {\n  /**\n   * Fetch a shop\n   * @param state\n   * @param payload\n   */\n  [FETCH_SHOP]: (state, payload) => {\n    state.shop = payload\n  },\n\n  /**\n   * Fetch shops\n   * @param state\n   * @param payload\n   */\n  [FETCH_SHOPS]: (state, payload) => {\n    state.shops = payload\n  },\n\n  /**\n   * Add _new shop\n   * @param state\n   * @param payload\n   */\n  [ADD_SHOP]: (state, payload) => {\n    state.shops.push(payload)\n  },\n\n  [FETCH_SHOP_UPDATE]: (state, payload) => {\n    state.shopUpdate = payload\n  },\n}\n\n/**\n * Actions\n */\nexport const actions = {\n  /**\n   * Init\n   * @param commit\n   */\n  init({ commit }) {\n    ShopService.init()\n\n    if (ShopService.getId()) {\n      handleSelected(commit, { shop: ShopService.shop })\n    }\n  },\n\n  /**\n   * Fetch shops\n   * @param commit\n   * @return {Promise<{success: boolean, message: (*|string)}|{success: boolean}>}\n   */\n  async fetchShops({ commit }, payload) {\n    let result = { success: true }\n    let response = await api.fetchShops(payload)\n\n    if (response && response.errorMessage) {\n      result = { success: false, message: response.errorMessage }\n      response = { shops: [] }\n    }\n\n    commit(FETCH_SHOPS, response.shops)\n    return result\n  },\n\n  async fetchShop({ commit }, payload) {\n    let result = { success: true }\n    let response = await api.fetchShop(payload)\n\n    if (response && !response.shop) {\n      result = { success: true, message: response.errorMessage }\n      response = { shop: {} }\n    }\n\n    commit(FETCH_SHOP_UPDATE, response.shop)\n\n    return result\n  },\n\n  /**\n   * Select shop\n   * @param commit\n   * @param state\n   * @param commit\n   * @param dispatch\n   * @param payload\n   * @return {Promise<object>}\n   */\n  async selectShop({ commit, state, dispatch }, payload = {}) {\n    if (payload.fetch) {\n      const result = await dispatch('fetchShops')\n\n      if (result && !result.success) {\n        return {\n          success: false,\n          fetchError: false,\n        }\n      }\n    }\n\n    if (!state.shops.length) {\n      return {\n        success: false,\n        noData: true,\n      }\n    }\n\n    const shopId = payload.id || state.shops[0].id\n    const response = await api.selectShop({ shop_id: shopId })\n\n    if (response && response.access_token) {\n      const shop = state.shops.find(({ id }) => id === shopId)\n      handleSelected(commit, { shop, accessToken: response.access_token })\n      return {\n        success: true,\n      }\n    }\n\n    return {\n      success: false,\n      message: response.errorMessage || '',\n    }\n  },\n\n  /**\n   * Add shop\n   * @param commit\n   * @param payload\n   * @return {Promise<{success: boolean, message: *}|{success: boolean}>}\n   */\n  async addShop({ commit }, payload) {\n    const response = await api.addShop(payload)\n\n    if (response && response.access_token) {\n      commit(ADD_SHOP, response.shop)\n\n      handleSelected(commit, {\n        shop: response.shop,\n        accessToken: response.access_token,\n      })\n\n      return { success: true }\n    }\n\n    return { success: false, message: response.message || response.error }\n  },\n\n  /**\n   * Update shop\n   * @param commit\n   * @param payload\n   * @return {Promise<{success: boolean}>}\n   */\n  // eslint-disable-next-line\n  async updateShop({ commit }, payload) {\n    let result = { success: true }\n    let response = await api.updateShop(payload)\n\n    if (response && response.errorMessage) {\n      result = { success: false, message: response.errorMessage }\n      response = { shop: {} }\n    }\n\n    commit(FETCH_SHOP_UPDATE, response.shop)\n\n    return result\n  },\n  async removeConnectShop({ commit }, payload) {\n    let result = { success: true }\n    let response = await api.removeConnectShop(payload)\n\n    if (!response || response.error) {\n      result = {\n        success: false,\n        message: response.errorMessage || response.error || '',\n      }\n\n      response = {\n        shop: {},\n      }\n    }\n\n    handleSelected(commit, response)\n    return result\n  },\n}\n\n/**\n * Handle selected shop\n * @param commit\n * @param shop\n * @param accessToken\n */\nexport const handleSelected = (commit, { shop, accessToken }) => {\n  commit(FETCH_SHOP, shop)\n  ShopService.set(shop)\n\n  const storage = {\n    id: shop.id,\n    domain: shop.domain,\n    name: shop.name,\n    logo: shop.logo,\n    platform: shop.platform,\n  }\n  ShopService.storage(storage)\n\n  if (accessToken) {\n    AuthService.storageAccessToken(accessToken)\n  }\n}\n"]}]}