{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/views/VerifyEmail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/views/VerifyEmail.vue","mtime":1605110441124},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapState } from 'vuex';\nimport mixinRoute from '@core/mixins/route';\nimport Storage from '@core/helpers/storage';\nexport default {\n  name: 'VerifyEmail',\n  mixins: [mixinRoute],\n  filters: {},\n  computed: _objectSpread(_objectSpread({}, mapState('auth', {\n    currentUser: function currentUser(state) {\n      return state.user;\n    }\n  })), {}, {\n    code: function code() {\n      return this.$route.params.code;\n    }\n  }),\n  data: function data() {\n    return {\n      isLoading: false,\n      result: {},\n      counting: false,\n      count: '2m'\n    };\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions('auth', ['verifyEmail', 'resendEmail'])), {}, {\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var now, expried, url, code, params, result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                now = new Date().getTime();\n\n                if (Storage.get('expried') < now || Storage.get('expried') == null) {\n                  expried = new Date().getTime() + 2 * 3000;\n                  Storage.set('expried', expried);\n                  this.countDownTimer();\n                } else {\n                  this.count = Storage.get('count');\n                  this.counting = Storage.get('counting');\n                  this.countDownTimer();\n                }\n\n                url = new URL(window.location.href);\n                code = url.searchParams.get('code');\n                params = {\n                  code: code\n                };\n\n                if (!code) {\n                  _context.next = 17;\n                  break;\n                }\n\n                _context.next = 8;\n                return this.verifyEmail(params);\n\n              case 8:\n                result = _context.sent;\n\n                if (!result.success) {\n                  _context.next = 15;\n                  break;\n                }\n\n                if (!result.permission) {\n                  _context.next = 12;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$router.push('/'));\n\n              case 12:\n                return _context.abrupt(\"return\", this.$toast.open({\n                  type: 'error',\n                  message: 'You are not allowed to do this action !'\n                }));\n\n              case 15:\n                this.$toast.open({\n                  type: 'error',\n                  message: result.message\n                });\n                return _context.abrupt(\"return\", this.$router.push('/sign-in'));\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    handleResendEmail: function () {\n      var _handleResendEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        var params, response, now, expried;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(Storage.get('userEmail'));\n\n                if (Storage.get('userEmail')) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                this.isLoading = true;\n                params = {\n                  email: Storage.get('userEmail')\n                };\n                _context2.next = 7;\n                return this.resendEmail(params);\n\n              case 7:\n                response = _context2.sent;\n\n                if (!response.success) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                this.$toast.open({\n                  type: 'success',\n                  message: 'Successfully! Please check your email to activate the account.'\n                });\n                setTimeout(function () {\n                  _this.isLoading = false;\n                }, 2000);\n                this.counting = true;\n                now = new Date().getTime();\n\n                if (Storage.get('expried') < now || Storage.get('expried') == null) {\n                  expried = new Date().getTime() + 2 * 3000;\n                  Storage.set('expried', expried);\n                  this.countDownTimer();\n                } else {\n                  this.countDownTimer();\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 15:\n                this.$toast.open({\n                  type: 'error',\n                  message: response.message\n                });\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleResendEmail() {\n        return _handleResendEmail.apply(this, arguments);\n      }\n\n      return handleResendEmail;\n    }(),\n    countDownTimer: function countDownTimer() {\n      var countDownDate = Storage.get('expried');\n      var x = setInterval(function () {\n        var now = new Date().getTime(); // Find the distance between now and the count down date\n\n        var distance = countDownDate - now; // Time calculations for minutes and seconds\n\n        var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        var seconds = Math.floor(distance % (1000 * 60) / 1000); // Display the result in the element with id=\"demo\"\n\n        this.count = minutes + 'm ' + seconds + 's '; // If the count down is finished, write some text\n\n        if (distance < 0) {\n          this.counting = false;\n          clearInterval(x);\n        }\n      }.bind(this), 1000);\n      Storage.set('count', this.count);\n      Storage.set('counting', this.counting);\n    }\n  }),\n  watch: {\n    filter: {\n      handler: function handler() {\n        this.init();\n      },\n      deep: true\n    }\n  }\n};",{"version":3,"sources":["VerifyEmail.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"page vertical-align verify-email \">\n    <h2>Thank you for using Lionnix</h2>\n    <p\n      >A verification mail has been sent to your email account. Please check\n      your inbox to verify.</p\n    >\n    <p>Still can't find the email?</p>\n    <p-button\n      class=\"btn btn-special btn-primary mt-20 mb-20\"\n      :loading=\"isLoading\"\n      :disabled=\"counting\"\n      @click=\"handleResendEmail\"\n    >\n      <span v-if=\"counting\">Resend Email again {{ count }} </span>\n      <span v-if=\"!counting\">Resend verification Email</span>\n    </p-button>\n    <p class=\"tip\">\n      Tip: If you have not received the email, please check your\n      <br />\n      <b>Spam</b> or <b>Trash folder</b>\n    </p>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'vuex'\nimport mixinRoute from '@core/mixins/route'\nimport Storage from '@core/helpers/storage'\n\nexport default {\n  name: 'VerifyEmail',\n  mixins: [mixinRoute],\n  filters: {},\n  computed: {\n    ...mapState('auth', {\n      currentUser: (state) => state.user,\n    }),\n    code() {\n      return this.$route.params.code\n    },\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      result: {},\n      counting: false,\n      count: '2m',\n    }\n  },\n\n  created() {\n    this.init()\n  },\n\n  methods: {\n    ...mapActions('auth', ['verifyEmail', 'resendEmail']),\n    async init() {\n      let now = new Date().getTime()\n      if (Storage.get('expried') < now || Storage.get('expried') == null) {\n        let expried = new Date().getTime() + 2 * 3000\n        Storage.set('expried', expried)\n        this.countDownTimer()\n      } else {\n        this.count = Storage.get('count')\n        this.counting = Storage.get('counting')\n        this.countDownTimer()\n      }\n      const url = new URL(window.location.href)\n      const code = url.searchParams.get('code')\n      const params = {\n        code: code,\n      }\n      if (code) {\n        const result = await this.verifyEmail(params)\n        if (result.success) {\n          if (result.permission) {\n            return this.$router.push('/')\n          }\n          return this.$toast.open({\n            type: 'error',\n            message: 'You are not allowed to do this action !',\n          })\n        } else {\n          this.$toast.open({ type: 'error', message: result.message })\n          return this.$router.push('/sign-in')\n        }\n      }\n    },\n    async handleResendEmail() {\n      console.log(Storage.get('userEmail'))\n      if (!Storage.get('userEmail')) {\n        return\n      }\n      this.isLoading = true\n\n      const params = {\n        email: Storage.get('userEmail'),\n      }\n      let response = await this.resendEmail(params)\n      if (response.success) {\n        this.$toast.open({\n          type: 'success',\n          message:\n            'Successfully! Please check your email to activate the account.',\n        })\n        setTimeout(() => {\n          this.isLoading = false\n        }, 2000)\n        this.counting = true\n        let now = new Date().getTime()\n\n        if (Storage.get('expried') < now || Storage.get('expried') == null) {\n          let expried = new Date().getTime() + 2 * 3000\n          Storage.set('expried', expried)\n          this.countDownTimer()\n        } else {\n          this.countDownTimer()\n        }\n        return\n      }\n      this.$toast.open({ type: 'error', message: response.message })\n    },\n\n    countDownTimer() {\n      let countDownDate = Storage.get('expried')\n      let x = setInterval(\n        function() {\n          let now = new Date().getTime()\n\n          // Find the distance between now and the count down date\n          let distance = countDownDate - now\n\n          // Time calculations for minutes and seconds\n          let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60))\n          let seconds = Math.floor((distance % (1000 * 60)) / 1000)\n\n          // Display the result in the element with id=\"demo\"\n          this.count = minutes + 'm ' + seconds + 's '\n\n          // If the count down is finished, write some text\n          if (distance < 0) {\n            this.counting = false\n            clearInterval(x)\n          }\n        }.bind(this),\n        1000\n      )\n      Storage.set('count', this.count)\n      Storage.set('counting', this.counting)\n    },\n  },\n\n  watch: {\n    filter: {\n      handler: function() {\n        this.init()\n      },\n      deep: true,\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/packages/auth/views"}]}