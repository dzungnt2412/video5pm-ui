{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/views/OrderList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/views/OrderList.vue","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { truncate } from '@core/utils/string';\nimport { VclTable } from 'vue-content-loading';\nimport { mapState, mapActions } from 'vuex';\nimport { ORDER_STATUS_PENDING } from '@core/constants';\nimport Browser from '@core/helpers/browser';\nimport mixinRoute from '@core/mixins/route';\nimport mixinTable from '@core/mixins/table';\nimport mixinExportOrder from '@/packages/container/mixins/export-file';\nimport { CREATE_CONTAINER, FETCH_ORDERS, IMPORT_ORDERS, PREVIEW_IMPORT_ORDERS, FETCH_CONTAINERS, EXPORT_ORDERS } from '../store/types';\nimport { ORDER_STATUS } from '../constants';\nimport EmptySearchResult from '@components/shared/EmptySearchResult';\nimport Thumbnail from '@components/shared/Thumbnail';\nimport ModalImport from '@components/shared/modal/ModalImport';\nimport StatusTab from '@components/shared/StatusTab';\nimport ModalCreateOrAppendContainer from './components/ModalCreateOrAppendContainer';\nimport ModalPreviewImportOrder from './components/ModalPreviewImportOrder';\nimport shippings from '@/packages/shared/data/shippings';\nimport { ORDER_EXPORT_BUCKET } from '@core/constants/storage';\nexport default {\n  name: 'OrderList',\n  mixins: [mixinRoute, mixinTable, mixinExportOrder],\n  components: {\n    Thumbnail: Thumbnail,\n    ModalImport: ModalImport,\n    ModalCreateOrAppendContainer: ModalCreateOrAppendContainer,\n    ModalPreviewImportOrder: ModalPreviewImportOrder,\n    StatusTab: StatusTab,\n    VclTable: VclTable,\n    EmptySearchResult: EmptySearchResult\n  },\n  filters: {\n    shippingName: function shippingName(value) {\n      if (value) {\n        return shippings[value] || '';\n      }\n\n      return '';\n    },\n    trackingNumbers: function trackingNumbers(value) {\n      if (!value) {\n        return;\n      }\n\n      var items = value.map(function (item) {\n        return item.tracking_number;\n      });\n      return items.toString();\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapState('container', {\n    count: function count(state) {\n      return state.orderCount;\n    },\n    orders: function orders(state) {\n      return state.orders;\n    },\n    containers: function containers(state) {\n      return state.containers;\n    }\n  })), {}, {\n    orderStatus: function orderStatus() {\n      return ORDER_STATUS;\n    },\n    availableCreateContainerOrders: function availableCreateContainerOrders() {\n      if (!this.action.selected || !this.action.selected.length) {\n        return [];\n      }\n\n      var orders = this.action.selected;\n      return orders.filter(function (_ref) {\n        var status = _ref.status,\n            container_id = _ref.container_id;\n        return container_id < 1 && status === ORDER_STATUS_PENDING;\n      });\n    },\n    items: function items() {\n      return this.orders;\n    },\n    imagePlaceholder: function imagePlaceholder() {\n      return require('@assets/img/image-placeholder.png');\n    }\n  }),\n  data: function data() {\n    return {\n      isFetching: true,\n      result: {},\n      actions: {\n        delete: {\n          title: 'Delete',\n          isNeedConfirm: false\n        },\n        process: {\n          title: 'Process'\n        },\n        cancel: {\n          title: 'Cancel',\n          isNeedConfirm: true\n        }\n      },\n      filter: {\n        search: '',\n        limit: 20,\n        status: ''\n      },\n      isVisibleImport: false,\n      isUploading: false,\n      isImporting: false,\n      orderItems: [],\n      file: null,\n      isVisiblePreview: false,\n      resultImport: {},\n      isVisibleCreateOrderAppendContainer: false,\n      isContainerCreating: false,\n      importOrder: {\n        create_container: true,\n        file: null\n      },\n      importOrderErrors: {},\n      createContainerErrors: {}\n    };\n  },\n  created: function created() {\n    this.filter = this.getRouteQuery();\n  },\n  methods: _objectSpread(_objectSpread({\n    truncate: truncate\n  }, mapActions('container', [FETCH_ORDERS, IMPORT_ORDERS, PREVIEW_IMPORT_ORDERS, CREATE_CONTAINER, FETCH_CONTAINERS, EXPORT_ORDERS])), {}, {\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var id;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isFetching = true;\n                id = this.$route.query.container_id;\n\n                if (id) {\n                  this.$set(this.filter, 'container_id', parseInt(id, 10));\n                }\n\n                this.handleUpdateRouteQuery();\n                _context.next = 6;\n                return this.fetchOrders(this.filter);\n\n              case 6:\n                this.result = _context.sent;\n                this.isFetching = false;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    handleActionItem: function () {\n      var _handleActionItem = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.action.current === 'process')) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                this.isVisibleCreateOrderAppendContainer = true;\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                if (this.action.current === 'cancel') {\n                  this.handleRejectOrders(this.action.item, 'canceled');\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleActionItem() {\n        return _handleActionItem.apply(this, arguments);\n      }\n\n      return handleActionItem;\n    }(),\n    handleCreateContainer: function () {\n      var _handleCreateContainer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref2) {\n        var ids, containerId, payload, result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                ids = _ref2.ids, containerId = _ref2.containerId;\n                this.createContainerErrors.shop = '';\n                this.isContainerCreating = true;\n                payload = {\n                  order_ids: ids\n                };\n\n                if (containerId) {\n                  payload.container_id = containerId;\n                }\n\n                _context3.next = 7;\n                return this.createContainer(payload);\n\n              case 7:\n                result = _context3.sent;\n                this.isContainerCreating = false;\n\n                if (result.success) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                this.$toast.open({\n                  type: 'error',\n                  message: result.message\n                });\n                return _context3.abrupt(\"return\");\n\n              case 12:\n                if (!containerId) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                _context3.next = 15;\n                return this.init();\n\n              case 15:\n                this.$toast.open({\n                  type: 'success',\n                  message: \"Th\\xEAm \\u0111\\u01A1n h\\xE0ng v\\xE0o delivery order \".concat(containerId, \" th\\xE0nh c\\xF4ng\")\n                });\n                this.isVisibleCreateOrderAppendContainer = false;\n                return _context3.abrupt(\"return\");\n\n              case 18:\n                this.$toast.open({\n                  type: 'success',\n                  message: 'Delivery order đã được tạo thành công'\n                });\n                this.$router.push({\n                  name: 'container-view',\n                  params: {\n                    id: result.id\n                  }\n                });\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function handleCreateContainer(_x) {\n        return _handleCreateContainer.apply(this, arguments);\n      }\n\n      return handleCreateContainer;\n    }(),\n    handleImportOrder: function () {\n      var _handleImportOrder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(file) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.importOrder.file = file;\n\n                if (this.validateImportOrder()) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 3:\n                this.importOrder.file = file;\n                this.isUploading = true;\n                _context4.next = 7;\n                return this.importOrders({\n                  file: this.importOrder.file,\n                  shop_id: this.importOrder.shop_id\n                });\n\n              case 7:\n                this.resultImport = _context4.sent;\n                this.isVisibleImport = false;\n                this.isVisiblePreview = true;\n\n                if (!(this.resultImport && this.resultImport.success)) {\n                  _context4.next = 13;\n                  break;\n                }\n\n                this.isUploading = false;\n                return _context4.abrupt(\"return\");\n\n              case 13:\n                this.$toast.open({\n                  type: 'error',\n                  message: this.resultImport.message || 'File không đúng định dạng'\n                });\n                this.isUploading = false;\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function handleImportOrder(_x2) {\n        return _handleImportOrder.apply(this, arguments);\n      }\n\n      return handleImportOrder;\n    }(),\n    handleImportFile: function () {\n      var _handleImportFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var payload;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                payload = {\n                  file_url: this.resultPreview.file_url,\n                  total_order: this.resultPreview.total_order,\n                  create_container: this.importOrder.create_container\n                };\n                this.isImporting = true;\n                _context5.next = 4;\n                return this.importOrders(payload);\n\n              case 4:\n                this.resultImport = _context5.sent;\n\n                if (!(this.resultImport && this.resultImport.success)) {\n                  _context5.next = 15;\n                  break;\n                }\n\n                if (!this.resultImport.container_id) {\n                  _context5.next = 10;\n                  break;\n                }\n\n                this.$toast.open({\n                  type: 'success',\n                  message: 'Thêm đơn hàng thành công'\n                });\n                this.$router.push({\n                  name: 'container-view',\n                  params: {\n                    id: this.resultImport.container_id\n                  }\n                });\n                return _context5.abrupt(\"return\");\n\n              case 10:\n                this.handleResetImportFile();\n                this.isVisiblePreview = false;\n                this.isImporting = false;\n                this.$dialog.alert({\n                  title: 'Import orders',\n                  message: 'Chúng tôi hiện đang import lên hệ thống. Điều này sẽ mất ít thời gian. Một email sẽ được gửi cho bạn sau khi quá trình import hoàn tất.'\n                });\n                return _context5.abrupt(\"return\");\n\n              case 15:\n                this.$toast.open({\n                  type: 'error',\n                  message: this.resultImport.message\n                });\n\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function handleImportFile() {\n        return _handleImportFile.apply(this, arguments);\n      }\n\n      return handleImportFile;\n    }(),\n    handleResetImportFile: function handleResetImportFile() {\n      this.$set(this, 'resultPreview', {});\n      this.file = null;\n      this.isVisiblePreview = false;\n    },\n    handleCloseImportFile: function handleCloseImportFile() {\n      this.file = null;\n      this.isVisibleImport = false;\n    },\n    visibleImportModal: function visibleImportModal() {\n      this.isVisibleImport = true;\n    },\n    importTrackingSuccessful: function importTrackingSuccessful() {\n      return this.init();\n    },\n    validateImportOrder: function validateImportOrder() {\n      this.$set(this.importOrderErrors, 'file', !this.importOrder.file ? '*Chưa có file' : '');\n      return !Object.values(this.importOrderErrors).filter(Boolean).length;\n    },\n    handleExportOrders: function () {\n      var _handleExportOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.exportOrders(this.selectedIds);\n\n              case 2:\n                result = _context6.sent;\n                this.exportFile(result, \"orders.csv\", ORDER_EXPORT_BUCKET);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function handleExportOrders() {\n        return _handleExportOrders.apply(this, arguments);\n      }\n\n      return handleExportOrders;\n    }(),\n    getSKU: function getSKU(order) {\n      if (order && order.order_items) {\n        return order.order_items.map(function (_ref3) {\n          var sku = _ref3.sku;\n          return sku;\n        }).filter(function (sku) {\n          return sku;\n        }).join(', ');\n      }\n    }\n  }),\n  watch: {\n    filter: {\n      handler: function handler() {\n        this.init();\n      },\n      deep: true\n    }\n  }\n};",{"version":3,"sources":["OrderList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"order-list-page page\">\n    <div class=\"page-header\">\n      <div class=\"page-header-group ml-0\">\n        <div class=\"page-header-group-actions__left\">\n          <a\n            href=\"#\"\n            class=\"btn btn-primary\"\n            @click.prevent=\"visibleImportModal\"\n          >\n            <p-icon name=\"upload\"></p-icon>\n            <span class=\"ml-5\">Thêm đơn hàng</span>\n          </a>\n          <a\n            href=\"#\"\n            class=\"ml-10 btn btn-primary\"\n            v-if=\"selectedIds && selectedIds.length\"\n            @click.prevent=\"handleExportOrders\"\n          >\n            <p-icon name=\"download\" icon-pack=\"md\"></p-icon>\n            <span class=\"ml-5\">Tải đơn đã chọn</span>\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"page-content container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-xl-12\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <status-tab v-model=\"filter.status\" :status=\"orderStatus\" />\n              <p-input\n                placeholder=\"Tìm kiếm đơn hàng (theo mã đơn | tên khách | phương thức vận chuyển)\"\n                prefixIcon=\"search\"\n                class=\"mb-2\"\n                type=\"password\"\n                :value=\"filter.search\"\n                @keyup.enter=\"handleSearch\"\n              >\n                <template slot=\"append\">\n                  <p-button\n                    type=\"default\"\n                    icon=\"close\"\n                    v-if=\"filter.search\"\n                    @click=\"clearSearch\"\n                  ></p-button>\n                </template>\n              </p-input>\n              <VclTable class=\"my-20\" v-if=\"isFetching\"></VclTable>\n              <template v-else-if=\"orders.length\">\n                <div class=\"table-responsive\">\n                  <table class=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th\n                          width=\"40\"\n                          class=\"order-select\"\n                          :colspan=\"totalSelected > 0 ? 9 : 1\"\n                        >\n                          <p-checkbox\n                            class=\"order-select-checkbox\"\n                            :style=\"totalSelected > 0 && { width: 0 }\"\n                            :value=\"isAllChecked\"\n                            @change.native=\"toggleSelectAll\"\n                            :indeterminate=\"isIndeterminate\"\n                          ></p-checkbox>\n                          <div\n                            class=\"bulk-actions d-flex align-items-center\"\n                            v-if=\"totalSelected > 0\"\n                          >\n                            <div class=\"bulk-actions__main-bar\">\n                              <span class=\"bulk-actions__selection-count\">{{\n                                selectionCountText\n                              }}</span>\n                              <p-button\n                                class=\"bulk-actions__actions\"\n                                type=\"primary\"\n                                @click=\"handleAction('process')\"\n                                v-if=\"\n                                  availableCreateContainerOrders &&\n                                    availableCreateContainerOrders.length\n                                \"\n                                >Tạo deliver Order</p-button\n                              >\n                            </div>\n                            <span class=\"bulk-select-all\" v-if=\"isAllChecked\"\n                              >Tất cả các đơn trên trang này được chọn.</span\n                            >\n                          </div>\n                        </th>\n                        <template v-if=\"totalSelected === 0\">\n                          <th>Mã</th>\n                          <th>Design</th>\n                          <th>Tracking Number</th>\n                          <th>Số đơn hàng</th>\n                          <th>Tên khách hàng</th>\n                          <th :style=\"{ 'max-width': '150px' }\">SKU</th>\n                          <th>Quốc gia</th>\n                          <th>Ngày</th>\n                          <th title=\"Phương thức vận chuyển\">PT vận chuyển</th>\n                          <th>Trạng thái</th>\n                          <th class=\"text-right\">Chức năng</th>\n                        </template>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"(item, i) in orders\" :key=\"i\">\n                        <td width=\"30\" class=\"ml-0 text-center\">\n                          <p-checkbox\n                            v-model=\"action.selected\"\n                            :native-value=\"item\"\n                          ></p-checkbox>\n                        </td>\n                        <td width=\"40\">\n                          <router-link\n                            :style=\"{ textDecoration: 'none' }\"\n                            :to=\"{\n                              name: 'order-view',\n                              params: { id: item.id },\n                            }\"\n                            >{{ item.id }}</router-link\n                          ></td\n                        >\n                        <td>\n                          <template>\n                            <div class=\"order-thumbnail\">\n                              <thumbnail\n                                class=\"order-image\"\n                                v-if=\"\n                                  item.order_items &&\n                                    item.order_items.length &&\n                                    item.order_items[0].image\n                                \"\n                                :src=\"item.order_items[0].image\"\n                              />\n                              <img\n                                class=\"order-image order-image-placeholder\"\n                                :src=\"imagePlaceholder\"\n                                v-else\n                                alt\n                              />\n                            </div>\n                          </template>\n                        </td>\n                        <td>\n                          <span>{{ item.fulfillments | trackingNumbers }}</span>\n                        </td>\n                        <td>{{ item.ref_id }}</td>\n                        <td>\n                          {{\n                            item.full_name\n                              ? item.full_name\n                              : item.first_name + ' ' + item.last_name\n                          }}\n                        </td>\n                        <td :style=\"{ 'max-width': '150px' }\">\n                          <p-tooltip\n                            :label=\"getSKU(item)\"\n                            position=\"top\"\n                            type=\"dark\"\n                            :active=\"getSKU(item).length > 30\"\n                            >{{ truncate(getSKU(item), 30) }}</p-tooltip\n                          >\n                        </td>\n                        <td>{{ item.country_code }}</td>\n                        <td>{{ item.created_at | date('dd/MM/yyyy') }}</td>\n                        <td>\n                          <p-tooltip\n                            :label=\"item.shipping_method\"\n                            position=\"top\"\n                            type=\"dark\"\n                            >{{ item.shipping_code | shippingName }}</p-tooltip\n                          >\n                        </td>\n                        <td>\n                          <span v-status:status=\"item.status\"></span>\n                        </td>\n                        <td class=\"text-right\">\n                          <p-popover\n                            class=\"mx-10\"\n                            placement=\"top\"\n                            trigger=\"hover\"\n                            type=\"dark\"\n                            content=\"Xem chi tiết\"\n                            compact\n                          >\n                            <router-link\n                              slot=\"reference\"\n                              :to=\"{\n                                name: 'order-view',\n                                params: { id: item.id },\n                              }\"\n                            >\n                              <p-icon name=\"eye\" iconPack=\"md\"></p-icon>\n                            </router-link>\n                          </p-popover>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div class=\"d-flex justify-content-between align-items-center\">\n                  <span>{{ paginationLabel }}</span>\n                  <p-pagination\n                    :total=\"count\"\n                    :perPage=\"filter.limit\"\n                    :current.sync=\"filter.page\"\n                    size=\"sm\"\n                  ></p-pagination>\n                </div>\n              </template>\n              <EmptySearchResult\n                v-else\n                title=\"Không tìm thấy đơn hàng\"\n              ></EmptySearchResult>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <modal-import\n      :visible.sync=\"isVisibleImport\"\n      :uploading=\"isUploading\"\n      :error=\"importOrderErrors.file\"\n      accept=\".csv\"\n      title=\"Thêm đơn hàng từ file *.CSV\"\n      @close=\"handleCloseImportFile\"\n      @selected=\"handleImportOrder\"\n      v-if=\"isVisibleImport\"\n    >\n      <p class=\"font-weight-700\">\n        Yêu cầu: Upload file *.CSV theo\n        <a\n          href=\"https://static.lionnix.net/file-templates/lionnix-template-fulfill.csv\"\n          target=\"_blank\"\n        >\n          <u>mẫu của hệ thống</u>\n        </a>\n      </p>\n    </modal-import>\n\n    <modal-preview-import-order\n      :visible.sync=\"isVisiblePreview\"\n      :order=\"resultImport.order\"\n      :order-errors=\"resultImport.import_errors\"\n      :total=\"resultImport.total_order\"\n      :importing=\"isImporting\"\n      @import=\"handleImportFile\"\n      v-if=\"isVisiblePreview\"\n    ></modal-preview-import-order>\n\n    <modal-create-or-append-container\n      :visible.sync=\"isVisibleCreateOrderAppendContainer\"\n      :loading=\"isContainerCreating\"\n      :orders=\"availableCreateContainerOrders\"\n      :containers=\"containers\"\n      :fetch-containers=\"fetchContainers\"\n      @save=\"handleCreateContainer\"\n      v-if=\"isVisibleCreateOrderAppendContainer\"\n    ></modal-create-or-append-container>\n  </div>\n</template>\n\n<script>\nimport { truncate } from '@core/utils/string'\nimport { VclTable } from 'vue-content-loading'\nimport { mapState, mapActions } from 'vuex'\nimport { ORDER_STATUS_PENDING } from '@core/constants'\nimport Browser from '@core/helpers/browser'\nimport mixinRoute from '@core/mixins/route'\nimport mixinTable from '@core/mixins/table'\nimport mixinExportOrder from '@/packages/container/mixins/export-file'\nimport {\n  CREATE_CONTAINER,\n  FETCH_ORDERS,\n  IMPORT_ORDERS,\n  PREVIEW_IMPORT_ORDERS,\n  FETCH_CONTAINERS,\n  EXPORT_ORDERS,\n} from '../store/types'\nimport { ORDER_STATUS } from '../constants'\nimport EmptySearchResult from '@components/shared/EmptySearchResult'\nimport Thumbnail from '@components/shared/Thumbnail'\nimport ModalImport from '@components/shared/modal/ModalImport'\nimport StatusTab from '@components/shared/StatusTab'\nimport ModalCreateOrAppendContainer from './components/ModalCreateOrAppendContainer'\nimport ModalPreviewImportOrder from './components/ModalPreviewImportOrder'\nimport shippings from '@/packages/shared/data/shippings'\nimport { ORDER_EXPORT_BUCKET } from '@core/constants/storage'\n\nexport default {\n  name: 'OrderList',\n  mixins: [mixinRoute, mixinTable, mixinExportOrder],\n  components: {\n    Thumbnail,\n    ModalImport,\n    ModalCreateOrAppendContainer,\n    ModalPreviewImportOrder,\n    StatusTab,\n    VclTable,\n    EmptySearchResult,\n  },\n  filters: {\n    shippingName(value) {\n      if (value) {\n        return shippings[value] || ''\n      }\n      return ''\n    },\n    trackingNumbers(value) {\n      if (!value) {\n        return\n      }\n\n      const items = value.map((item) => {\n        return item.tracking_number\n      })\n\n      return items.toString()\n    },\n  },\n  computed: {\n    ...mapState('container', {\n      count: (state) => state.orderCount,\n      orders: (state) => state.orders,\n      containers: (state) => state.containers,\n    }),\n    orderStatus() {\n      return ORDER_STATUS\n    },\n    availableCreateContainerOrders() {\n      if (!this.action.selected || !this.action.selected.length) {\n        return []\n      }\n\n      let orders = this.action.selected\n      return orders.filter(\n        ({ status, container_id }) =>\n          container_id < 1 && status === ORDER_STATUS_PENDING\n      )\n    },\n    items() {\n      return this.orders\n    },\n    imagePlaceholder() {\n      return require('@assets/img/image-placeholder.png')\n    },\n  },\n  data() {\n    return {\n      isFetching: true,\n      result: {},\n      actions: {\n        delete: {\n          title: 'Delete',\n          isNeedConfirm: false,\n        },\n        process: {\n          title: 'Process',\n        },\n        cancel: {\n          title: 'Cancel',\n          isNeedConfirm: true,\n        },\n      },\n      filter: {\n        search: '',\n        limit: 20,\n        status: '',\n      },\n      isVisibleImport: false,\n      isUploading: false,\n      isImporting: false,\n      orderItems: [],\n      file: null,\n      isVisiblePreview: false,\n      resultImport: {},\n      isVisibleCreateOrderAppendContainer: false,\n      isContainerCreating: false,\n      importOrder: {\n        create_container: true,\n        file: null,\n      },\n      importOrderErrors: {},\n      createContainerErrors: {},\n    }\n  },\n  created() {\n    this.filter = this.getRouteQuery()\n  },\n  methods: {\n    truncate,\n    ...mapActions('container', [\n      FETCH_ORDERS,\n      IMPORT_ORDERS,\n      PREVIEW_IMPORT_ORDERS,\n      CREATE_CONTAINER,\n      FETCH_CONTAINERS,\n      EXPORT_ORDERS,\n    ]),\n\n    async init() {\n      this.isFetching = true\n      const { container_id: id } = this.$route.query\n\n      if (id) {\n        this.$set(this.filter, 'container_id', parseInt(id, 10))\n      }\n\n      this.handleUpdateRouteQuery()\n      this.result = await this.fetchOrders(this.filter)\n      this.isFetching = false\n    },\n\n    async handleActionItem() {\n      if (this.action.current === 'process') {\n        this.isVisibleCreateOrderAppendContainer = true\n        return\n      }\n\n      if (this.action.current === 'cancel') {\n        this.handleRejectOrders(this.action.item, 'canceled')\n      }\n    },\n\n    async handleCreateContainer({ ids, containerId }) {\n      this.createContainerErrors.shop = ''\n      this.isContainerCreating = true\n      const payload = { order_ids: ids }\n\n      if (containerId) {\n        payload.container_id = containerId\n      }\n\n      const result = await this.createContainer(payload)\n      this.isContainerCreating = false\n\n      if (!result.success) {\n        this.$toast.open({ type: 'error', message: result.message })\n        return\n      }\n\n      if (containerId) {\n        await this.init()\n        this.$toast.open({\n          type: 'success',\n          message: `Thêm đơn hàng vào delivery order ${containerId} thành công`,\n        })\n        this.isVisibleCreateOrderAppendContainer = false\n        return\n      }\n\n      this.$toast.open({\n        type: 'success',\n        message: 'Delivery order đã được tạo thành công',\n      })\n      this.$router.push({ name: 'container-view', params: { id: result.id } })\n    },\n\n    async handleImportOrder(file) {\n      this.importOrder.file = file\n\n      if (!this.validateImportOrder()) {\n        return\n      }\n\n      this.importOrder.file = file\n      this.isUploading = true\n      this.resultImport = await this.importOrders({\n        file: this.importOrder.file,\n        shop_id: this.importOrder.shop_id,\n      })\n\n      this.isVisibleImport = false\n      this.isVisiblePreview = true\n\n      if (this.resultImport && this.resultImport.success) {\n        this.isUploading = false\n        return\n      }\n\n      this.$toast.open({\n        type: 'error',\n        message: this.resultImport.message || 'File không đúng định dạng',\n      })\n      this.isUploading = false\n    },\n\n    async handleImportFile() {\n      const payload = {\n        file_url: this.resultPreview.file_url,\n        total_order: this.resultPreview.total_order,\n        create_container: this.importOrder.create_container,\n      }\n\n      this.isImporting = true\n      this.resultImport = await this.importOrders(payload)\n\n      if (this.resultImport && this.resultImport.success) {\n        if (this.resultImport.container_id) {\n          this.$toast.open({\n            type: 'success',\n            message: 'Thêm đơn hàng thành công',\n          })\n          this.$router.push({\n            name: 'container-view',\n            params: { id: this.resultImport.container_id },\n          })\n          return\n        }\n\n        this.handleResetImportFile()\n        this.isVisiblePreview = false\n        this.isImporting = false\n        this.$dialog.alert({\n          title: 'Import orders',\n          message:\n            'Chúng tôi hiện đang import lên hệ thống. Điều này sẽ mất ít thời gian. Một email sẽ được gửi cho bạn sau khi quá trình import hoàn tất.',\n        })\n        return\n      }\n\n      this.$toast.open({\n        type: 'error',\n        message: this.resultImport.message,\n      })\n    },\n\n    handleResetImportFile() {\n      this.$set(this, 'resultPreview', {})\n      this.file = null\n      this.isVisiblePreview = false\n    },\n\n    handleCloseImportFile() {\n      this.file = null\n      this.isVisibleImport = false\n    },\n\n    visibleImportModal() {\n      this.isVisibleImport = true\n    },\n\n    importTrackingSuccessful() {\n      return this.init()\n    },\n\n    validateImportOrder() {\n      this.$set(\n        this.importOrderErrors,\n        'file',\n        !this.importOrder.file ? '*Chưa có file' : ''\n      )\n\n      return !Object.values(this.importOrderErrors).filter(Boolean).length\n    },\n\n    async handleExportOrders() {\n      const result = await this.exportOrders(this.selectedIds)\n      this.exportFile(result, `orders.csv`, ORDER_EXPORT_BUCKET)\n    },\n\n    getSKU(order) {\n      if (order && order.order_items) {\n        return order.order_items\n          .map(({ sku }) => sku)\n          .filter((sku) => sku)\n          .join(', ')\n      }\n    },\n  },\n  watch: {\n    filter: {\n      handler: function() {\n        this.init()\n      },\n      deep: true,\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/packages/container/views"}]}