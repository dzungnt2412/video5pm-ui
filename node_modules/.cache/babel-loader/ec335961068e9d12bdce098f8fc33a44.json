{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/core/services/auth.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/core/services/auth.js","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["import Storage from '@core/helpers/storage';\nimport { isEmpty } from '@core/utils/object';\nvar key = 'auth';\nvar AuthService = {\n  user: {},\n  store: {},\n\n  /**\n   * Init\n   */\n  init: function init() {\n    var user = this.getStorage();\n\n    if (user && !isEmpty(user)) {\n      this.set(user, false);\n    }\n  },\n\n  /**\n   * Set\n   * @param user\n   * @param storage\n   */\n  set: function set(user) {\n    var storage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.user = user || {};\n\n    if (storage) {\n      this.storage(user);\n    }\n  },\n\n  /**\n   * Get id\n   * @returns {number}\n   */\n  getId: function getId() {\n    return parseInt(this.user.id, 10) || 0;\n  },\n\n  /**\n   * Get email\n   * @returns {string}\n   */\n  getEmail: function getEmail() {\n    return this.user.email;\n  },\n\n  /**\n   * Get access token\n   * @returns {string}\n   */\n  getAccessToken: function getAccessToken() {\n    return this.user.accessToken;\n  },\n\n  /**\n   * Is authenticated\n   * @returns {boolean}\n   */\n  isAuthenticated: function isAuthenticated() {\n    return this.user.id > 0;\n  },\n\n  /**\n   * Get data from storage\n   * @returns {*|{}}\n   */\n  getStorage: function getStorage() {\n    return Storage.get(key, {});\n  },\n\n  /**\n   * Storage data\n   * @param data\n   */\n  storage: function storage(data) {\n    Storage.set(key, data);\n  },\n\n  /**\n   * Storage access token\n   * @param accessToken\n   */\n  storageAccessToken: function storageAccessToken(accessToken) {\n    var user = Object.assign({}, AuthService.user, {\n      accessToken: accessToken\n    });\n    AuthService.user = user;\n    AuthService.storage(user);\n  },\n\n  /**\n   * Clear storage\n   */\n  clear: function clear() {\n    Storage.remove(key);\n  }\n};\nexport var getUserId = function getUserId() {\n  return AuthService.getId();\n};\nexport default AuthService;",null]}