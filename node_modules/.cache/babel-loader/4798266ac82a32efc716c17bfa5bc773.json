{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/DetectQuantityForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/DetectQuantityForm.vue","mtime":1603898990380},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapState, mapMutations } from 'vuex';\nimport { cloneDeep, isObjectDiff, asyncFilter } from '@core/utils';\nimport ConditionItem from './components/ConditionItem';\nimport { types } from '../constant';\nimport { FETCH_ORDER_MAPPINGS } from '../store';\nexport default {\n  name: 'SettingDetectQuantity',\n  components: {\n    ConditionItem: ConditionItem\n  },\n  data: function data() {\n    return {\n      form: {\n        disjunctive: true,\n        product_type_id: 0,\n        type: types.quantity,\n        rules: [{\n          column: 'title',\n          relation: 'match',\n          condition: ''\n        }]\n      },\n      initialForm: {},\n      isShowUnsavedBar: false,\n      isFetching: false,\n      isSaving: false\n    };\n  },\n  computed: _objectSpread({}, mapState('orderMapping', {\n    quantityMappingState: function quantityMappingState(state) {\n      return state.orderMapping;\n    },\n    quantityMappingListState: function quantityMappingListState(state) {\n      return state.orderMappingsList;\n    }\n  })),\n  watch: {\n    form: {\n      handler: function handler(val) {\n        this.isShowUnsavedBar = isObjectDiff(val, this.initialForm);\n      },\n      deep: true\n    },\n    initialForm: {\n      handler: function handler(val) {\n        this.isShowUnsavedBar = isObjectDiff(val, this.form);\n      },\n      deep: true\n    }\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions('orderMapping', {\n    fetchOrderMapping: 'fetchOrderMapping',\n    fetchOrderMappingList: 'fetchOrderMappingList',\n    createOrUpdateOrderMapping: 'createOrUpdateOrderMapping'\n  })), mapMutations('orderMapping', {\n    updateStateOrderMappings: FETCH_ORDER_MAPPINGS\n  })), {}, {\n    fetch: function () {\n      var _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isFetching = true;\n                _context.next = 3;\n                return this.fetchOrderMappingList({\n                  type: types.quantity\n                });\n\n              case 3:\n                result = _context.sent;\n\n                if (!(result && result.success && this.quantityMappingListState.length > 0)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 7;\n                return this.fetchOrderMapping({\n                  type: types.quantity,\n                  id: this.quantityMappingListState[0].id\n                });\n\n              case 7:\n                result = _context.sent;\n\n                if (result && result.success) {\n                  this.form = cloneDeep(this.quantityMappingState);\n                }\n\n              case 9:\n                this.initialForm = cloneDeep(this.form);\n                this.isFetching = false;\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetch() {\n        return _fetch.apply(this, arguments);\n      }\n\n      return fetch;\n    }(),\n    removeCondition: function removeCondition(index) {\n      this.form.rules.splice(index, 1);\n    },\n    changeCondition: function changeCondition(index, event) {\n      this.$set(this.form.rules, index, event);\n    },\n    addCondition: function addCondition() {\n      var rules = this.form.rules;\n      rules.push(_objectSpread(_objectSpread({}, rules[rules.length - 1]), {}, {\n        condition: ''\n      }));\n    },\n    discard: function discard() {\n      this.form = cloneDeep(this.initialForm);\n    },\n    save: function () {\n      var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var filtered, isConditionsValid, result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.$refs.conditions && this.$refs.conditions.length)) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                _context3.next = 3;\n                return asyncFilter(this.$refs.conditions, /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(c) {\n                    var isValid;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.next = 2;\n                            return c.$validator.validateAll();\n\n                          case 2:\n                            isValid = _context2.sent;\n                            return _context2.abrupt(\"return\", isValid);\n\n                          case 4:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n\n              case 3:\n                filtered = _context3.sent;\n                isConditionsValid = filtered.length === this.$refs.conditions.length;\n\n                if (isConditionsValid) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 7:\n                this.isSaving = true;\n                _context3.next = 10;\n                return this.createOrUpdateOrderMapping({\n                  type: types.quantity,\n                  payload: cloneDeep(this.form)\n                });\n\n              case 10:\n                result = _context3.sent;\n\n                if (!(result && result.success)) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                this.$toast.open({\n                  type: 'success',\n                  message: 'Saved successfully'\n                });\n                _context3.next = 15;\n                return this.fetch();\n\n              case 15:\n                _context3.next = 18;\n                break;\n\n              case 17:\n                this.$toast.open({\n                  type: 'error',\n                  message: result.message || 'Something went wrong. Please try again later'\n                });\n\n              case 18:\n                this.isSaving = false;\n\n              case 19:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function save() {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }()\n  }),\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    this.updateStateOrderMappings([]);\n    next();\n  },\n  created: function created() {\n    this.fetch();\n  }\n};",{"version":3,"sources":["DetectQuantityForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <PageDetailLoading v-if=\"isFetching\"></PageDetailLoading>\n  <div class=\"page\" v-else>\n    <UnsavedBar\n      :show=\"isShowUnsavedBar\"\n      :showDiscard=\"true\"\n      :loading=\"isSaving\"\n      @save=\"save\"\n      @discard=\"discard\"\n      title=\"Save\"\n    ></UnsavedBar>\n    <div class=\"page-header\">\n      <h1 class=\"page-title\">Quantity Detection Rules</h1>\n    </div>\n    <div class=\"page-content container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-block\">\n              <div class=\"card-title\">\n                <h4>\n                  Conditions\n                </h4>\n              </div>\n              <div>\n                <condition-item\n                  v-for=\"(rule, index) in form.rules\"\n                  :condition=\"rule\"\n                  :key=\"index\"\n                  :disable-remove=\"index === 0\"\n                  @remove=\"removeCondition(index)\"\n                  @input=\"changeCondition(index, $event)\"\n                  ref=\"conditions\"\n                  type=\"quantity\"\n                />\n                <div class=\"row\">\n                  <div class=\"col-12 mt-2\">\n                    <p-button\n                      type=\"default\"\n                      class=\"mt-2\"\n                      @click.prevent=\"addCondition\"\n                    >\n                      Add new condition\n                    </p-button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState, mapMutations } from 'vuex'\nimport { cloneDeep, isObjectDiff, asyncFilter } from '@core/utils'\nimport ConditionItem from './components/ConditionItem'\nimport { types } from '../constant'\nimport { FETCH_ORDER_MAPPINGS } from '../store'\nexport default {\n  name: 'SettingDetectQuantity',\n  components: {\n    ConditionItem,\n  },\n  data() {\n    return {\n      form: {\n        disjunctive: true,\n        product_type_id: 0,\n        type: types.quantity,\n        rules: [\n          {\n            column: 'title',\n            relation: 'match',\n            condition: '',\n          },\n        ],\n      },\n      initialForm: {},\n      isShowUnsavedBar: false,\n      isFetching: false,\n      isSaving: false,\n    }\n  },\n  computed: {\n    ...mapState('orderMapping', {\n      quantityMappingState: (state) => state.orderMapping,\n      quantityMappingListState: (state) => state.orderMappingsList,\n    }),\n  },\n  watch: {\n    form: {\n      handler(val) {\n        this.isShowUnsavedBar = isObjectDiff(val, this.initialForm)\n      },\n      deep: true,\n    },\n    initialForm: {\n      handler(val) {\n        this.isShowUnsavedBar = isObjectDiff(val, this.form)\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    ...mapActions('orderMapping', {\n      fetchOrderMapping: 'fetchOrderMapping',\n      fetchOrderMappingList: 'fetchOrderMappingList',\n      createOrUpdateOrderMapping: 'createOrUpdateOrderMapping',\n    }),\n    ...mapMutations('orderMapping', {\n      updateStateOrderMappings: FETCH_ORDER_MAPPINGS,\n    }),\n    async fetch() {\n      this.isFetching = true\n      let result = await this.fetchOrderMappingList({\n        type: types.quantity,\n      })\n      if (\n        result &&\n        result.success &&\n        this.quantityMappingListState.length > 0\n      ) {\n        result = await this.fetchOrderMapping({\n          type: types.quantity,\n          id: this.quantityMappingListState[0].id,\n        })\n        if (result && result.success) {\n          this.form = cloneDeep(this.quantityMappingState)\n        }\n      }\n      this.initialForm = cloneDeep(this.form)\n      this.isFetching = false\n    },\n    removeCondition(index) {\n      this.form.rules.splice(index, 1)\n    },\n    changeCondition(index, event) {\n      this.$set(this.form.rules, index, event)\n    },\n    addCondition() {\n      const rules = this.form.rules\n      rules.push({\n        ...rules[rules.length - 1],\n        condition: '',\n      })\n    },\n    discard() {\n      this.form = cloneDeep(this.initialForm)\n    },\n    async save() {\n      if (this.$refs.conditions && this.$refs.conditions.length) {\n        const filtered = await asyncFilter(this.$refs.conditions, async (c) => {\n          const isValid = await c.$validator.validateAll()\n          return isValid\n        })\n        const isConditionsValid =\n          filtered.length === this.$refs.conditions.length\n        if (!isConditionsValid) {\n          return\n        }\n      }\n      this.isSaving = true\n      const result = await this.createOrUpdateOrderMapping({\n        type: types.quantity,\n        payload: cloneDeep(this.form),\n      })\n\n      if (result && result.success) {\n        this.$toast.open({\n          type: 'success',\n          message: 'Saved successfully',\n        })\n        await this.fetch()\n      } else {\n        this.$toast.open({\n          type: 'error',\n          message:\n            result.message || 'Something went wrong. Please try again later',\n        })\n      }\n      this.isSaving = false\n    },\n  },\n  beforeRouteLeave(to, from, next) {\n    this.updateStateOrderMappings([])\n    next()\n  },\n  created() {\n    this.fetch()\n  },\n}\n</script>\n"],"sourceRoot":"src/packages/order-mapping/views"}]}