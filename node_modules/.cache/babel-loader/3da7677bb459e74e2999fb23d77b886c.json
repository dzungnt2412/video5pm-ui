{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/OptionMappingList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/OptionMappingList.vue","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { VclTable } from 'vue-content-loading';\nimport { mapActions, mapState, mapMutations } from 'vuex';\nimport mixinRoute from '@core/mixins/route';\nimport mixinTable from '@core/mixins/table';\nimport EmptySearchResult from '@components/shared/EmptySearchResult';\nimport { types } from '../constant';\nimport { FETCH_ORDER_MAPPINGS } from '../store';\nexport default {\n  name: 'OptionMappingList',\n  mixins: [mixinRoute, mixinTable],\n  components: {\n    VclTable: VclTable,\n    EmptySearchResult: EmptySearchResult\n  },\n  computed: _objectSpread(_objectSpread({}, mapState('orderMapping', {\n    orderMappingsList: function orderMappingsList(state) {\n      return state.orderMappingsList;\n    },\n    count: function count(state) {\n      return state.orderMappingsCount;\n    },\n    products: function products(state) {\n      return state.productTypes;\n    }\n  })), {}, {\n    formatDisplayRules: function formatDisplayRules() {\n      return function (item) {\n        if (!item.rules || item.rules.length === 0) {\n          return [];\n        }\n\n        return item.rules.reduce(function (acc, rule) {\n          if (rule.column === 'option_set') {\n            acc.push({\n              name: rule.condition,\n              values: []\n            });\n          } else {\n            acc[acc.length - 1].values.push(rule.condition);\n          }\n\n          return acc;\n        }, []).map(function (optionSet) {\n          return optionSet.values.join(', ');\n        });\n      };\n    }\n  }),\n  data: function data() {\n    return {\n      isFetching: false,\n      filter: {\n        product_type_ids: []\n      }\n    };\n  },\n  created: function created() {\n    this.filter = this.getRouteQuery();\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions('orderMapping', {\n    fetchOrderMappingList: 'fetchOrderMappingList',\n    fetchProductTypes: 'fetchProductTypes',\n    deleteOrderMapping: 'deleteOrderMapping'\n  })), mapMutations('orderMapping', {\n    updateStateOrderMappings: FETCH_ORDER_MAPPINGS\n  })), {}, {\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isFetching = true;\n                this.handleUpdateRouteQuery();\n                _context.next = 4;\n                return Promise.all([this.fetchOrderMappingList({\n                  type: types.option,\n                  payload: this.filter\n                }), this.fetchProductTypes()]);\n\n              case 4:\n                this.isFetching = false;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    showConfirmDeleteMapping: function showConfirmDeleteMapping(item) {\n      var _this = this;\n\n      this.$dialog.confirm({\n        title: \"Delete option mapping?\",\n        message: \"Are you sure you want to delete this option mapping?\",\n        confirmText: 'Delete',\n        onConfirm: function onConfirm() {\n          return _this.deleteMapping(item);\n        },\n        type: 'danger'\n      });\n    },\n    deleteMapping: function () {\n      var _deleteMapping = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(item) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.isFetching = true;\n                _context2.next = 3;\n                return this.deleteOrderMapping({\n                  type: types.option,\n                  id: item.id\n                });\n\n              case 3:\n                response = _context2.sent;\n\n                if (response.success) {\n                  this.$toast.open({\n                    type: 'success',\n                    message: 'Your option mapping was deleted'\n                  });\n                  this.fetchOrderMappingList({\n                    type: types.option,\n                    payload: this.filter\n                  });\n                } else {\n                  this.$toast.open({\n                    type: 'error',\n                    message: response.message || 'Something went wrong. Please try again later'\n                  });\n                }\n\n                this.isFetching = false;\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function deleteMapping(_x) {\n        return _deleteMapping.apply(this, arguments);\n      }\n\n      return deleteMapping;\n    }(),\n    editMapping: function editMapping(item) {\n      this.$router.push({\n        name: 'option-mapping-update',\n        params: {\n          id: item.id\n        }\n      });\n    },\n    addNewRule: function addNewRule() {\n      this.$router.push({\n        name: 'option-mapping-_new'\n      });\n    },\n    onProductTypeSelect: function onProductTypeSelect(val) {\n      this.filter.product_type_ids = val;\n    }\n  }),\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    this.updateStateOrderMappings([]);\n    next();\n  },\n  watch: {\n    filter: {\n      handler: function handler() {\n        this.init();\n      },\n      deep: true\n    }\n  }\n};",null]}