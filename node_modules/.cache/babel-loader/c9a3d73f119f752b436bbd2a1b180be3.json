{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/store/index.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/store/index.js","mtime":1605110441116},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nvar _mutations, _getters;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { ROLE_SELLER } from '@core/constants';\nimport api from '../api';\nimport AuthService from '@core/services/auth';\nimport Affiliate from '@core/helpers/affiliate';\nimport { HTTP_STATUS_FORBIDDEN } from '@core/constants/http';\n/**\n * Type\n */\n\nexport var AUTHENTICATE = 'authenticate';\nexport var GET_USER = 'getUser';\nexport var VERIFY_EMAIL = 'verifyEmail';\nexport var RESEND_EMAIL = 'resendEmail';\nexport var CURRENT_USER = 'currentUser';\n/**\n * State\n */\n\nexport var state = {\n  user: {}\n};\n/**\n * Actions\n */\n\nexport var actions = {\n  /**\n   * Init\n   * @param commit\n   */\n  init: function init(_ref) {\n    var commit = _ref.commit;\n    AuthService.init();\n\n    if (AuthService.isAuthenticated()) {\n      handleAuthenticated(commit, Object.assign({}, AuthService.user));\n    }\n  },\n\n  /**\n   * Sign in\n   * @param commit\n   * @param payload\n   * @returns {Promise<{success: boolean}>}\n   */\n  signIn: function () {\n    var _signIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2, payload) {\n      var commit, response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context.next = 3;\n              return api.signIn(payload);\n\n            case 3:\n              response = _context.sent;\n\n              if (!(response && response.access_token)) {\n                _context.next = 8;\n                break;\n              }\n\n              data = Object.assign({}, response.user, {\n                access_token: response.access_token\n              });\n              handleAuthenticated(commit, transformerAuthenticate(data));\n              return _context.abrupt(\"return\", {\n                success: true,\n                permission: data.role === ROLE_SELLER\n              });\n\n            case 8:\n              if (!(response && response.user && response.statusCode == HTTP_STATUS_FORBIDDEN)) {\n                _context.next = 11;\n                break;\n              }\n\n              commit(CURRENT_USER, response.user);\n              return _context.abrupt(\"return\", {\n                success: false,\n                message: response.errorMessage || '',\n                userInActive: true\n              });\n\n            case 11:\n              return _context.abrupt(\"return\", {\n                success: false,\n                message: response.errorMessage || '',\n                number_incorrect: response.number_incorrect_password || 0\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function signIn(_x, _x2) {\n      return _signIn.apply(this, arguments);\n    }\n\n    return signIn;\n  }(),\n\n  /**\n   * Sign up\n   * @param commit\n   * @param payload\n   * @returns {Promise<{success: boolean}>}\n   */\n  // eslint-disable-next-line\n  signUp: function () {\n    var _signUp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref3.commit;\n\n              if (Affiliate.hasRef()) {\n                payload.user_referring_code = Affiliate.getRef();\n              }\n\n              payload.user.username = payload.user.username.toLowerCase();\n              _context2.next = 5;\n              return api.signUp(payload);\n\n            case 5:\n              response = _context2.sent;\n\n              if (!(response && response.user && response.user.id)) {\n                _context2.next = 9;\n                break;\n              }\n\n              commit(CURRENT_USER, response.user);\n              return _context2.abrupt(\"return\", {\n                success: true\n              });\n\n            case 9:\n              return _context2.abrupt(\"return\", response);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function signUp(_x3, _x4) {\n      return _signUp.apply(this, arguments);\n    }\n\n    return signUp;\n  }(),\n\n  /**\n   * Sign out\n   * @param commit\n   */\n  signOut: function signOut(_ref4) {\n    var commit = _ref4.commit;\n    AuthService.set({});\n    commit(AUTHENTICATE, {});\n    AuthService.clear();\n  },\n  // eslint-disable-next-line\n  forgotPassword: function () {\n    var _forgotPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref5, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context3.next = 3;\n              return api.forgot(payload);\n\n            case 3:\n              response = _context3.sent;\n\n              if (!response.success) {\n                _context3.next = 6;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", {\n                success: true,\n                message: 'Instructions to reset your password have been sent to you. Please check your email.'\n              });\n\n            case 6:\n              return _context3.abrupt(\"return\", response);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function forgotPassword(_x5, _x6) {\n      return _forgotPassword.apply(this, arguments);\n    }\n\n    return forgotPassword;\n  }(),\n  // eslint-disable-next-line\n  resetPassword: function () {\n    var _resetPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref6, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref6.commit;\n              _context4.next = 3;\n              return api.resetPass(payload);\n\n            case 3:\n              response = _context4.sent;\n\n              if (!response.success) {\n                _context4.next = 6;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", {\n                success: true\n              });\n\n            case 6:\n              return _context4.abrupt(\"return\", response);\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function resetPassword(_x7, _x8) {\n      return _resetPassword.apply(this, arguments);\n    }\n\n    return resetPassword;\n  }(),\n  verifyEmail: function () {\n    var _verifyEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref7, payload) {\n      var commit, response, data;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref7.commit;\n              _context5.next = 3;\n              return api.verifyEmail(payload);\n\n            case 3:\n              response = _context5.sent;\n\n              if (!(response && response.access_token)) {\n                _context5.next = 8;\n                break;\n              }\n\n              data = Object.assign({}, response.user, {\n                access_token: response.access_token\n              });\n              handleAuthenticated(commit, transformerAuthenticate(data));\n              return _context5.abrupt(\"return\", {\n                success: true,\n                permission: data.role === ROLE_SELLER\n              });\n\n            case 8:\n              return _context5.abrupt(\"return\", {\n                success: false,\n                message: response.errorMessage || ''\n              });\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function verifyEmail(_x9, _x10) {\n      return _verifyEmail.apply(this, arguments);\n    }\n\n    return verifyEmail;\n  }(),\n  // eslint-disable-next-line\n  resendEmail: function () {\n    var _resendEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(_ref8, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref8.commit;\n              _context6.next = 3;\n              return api.resendEmail(payload);\n\n            case 3:\n              response = _context6.sent;\n\n              if (!response.success) {\n                _context6.next = 6;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", {\n                success: true\n              });\n\n            case 6:\n              return _context6.abrupt(\"return\", {\n                success: false\n              });\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function resendEmail(_x11, _x12) {\n      return _resendEmail.apply(this, arguments);\n    }\n\n    return resendEmail;\n  }()\n};\n/**\n * Mutations\n */\n\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, AUTHENTICATE, function (state, payload) {\n  state.user = payload;\n}), _defineProperty(_mutations, VERIFY_EMAIL, function (state, payload) {\n  state.user_signUp = payload;\n  state.token = payload;\n}), _defineProperty(_mutations, CURRENT_USER, function (state, payload) {\n  state.user = payload;\n}), _mutations);\n/**\n * Getters\n */\n\nexport var getters = (_getters = {}, _defineProperty(_getters, GET_USER, function (state) {\n  if (state.user && state.user.id) {\n    return Object.assign({}, state.user);\n  }\n\n  return {\n    id: 0\n  };\n}), _defineProperty(_getters, \"currentRole\", function currentRole(state) {\n  return state.user.role;\n}), _defineProperty(_getters, \"isSeller\", function isSeller(state) {\n  return state.user.role === ROLE_SELLER;\n}), _getters);\n/**\n * Handle after authenticated\n * @param commit\n * @param payload\n */\n\nvar handleAuthenticated = function handleAuthenticated(commit, payload) {\n  if (payload.role !== ROLE_SELLER) {\n    return;\n  }\n\n  AuthService.set(payload);\n  commit(AUTHENTICATE, payload);\n};\n/**\n * transformer authenticate data to storage\n * @param response\n * @return {{name: *, id: *, avatar: *, accessToken: *, email: *}}\n */\n\n\nvar transformerAuthenticate = function transformerAuthenticate(response) {\n  return {\n    id: response.id,\n    accessToken: response.access_token,\n    email: response.email,\n    username: response.username,\n    role: response.role,\n    canReferent: response.can_refer,\n    refCode: response.ref_code || ''\n  };\n};",null]}