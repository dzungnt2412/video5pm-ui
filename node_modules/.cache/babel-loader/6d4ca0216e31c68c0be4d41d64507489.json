{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/uikit/components/modal/Modal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/uikit/components/modal/Modal.vue","mtime":1603898990384},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { removeElement } from '../../utils/dom';\nimport config from '../../config';\nexport default {\n  name: 'PModal',\n  props: {\n    active: Boolean,\n    component: [Object, Function],\n    content: String,\n    programmatic: Boolean,\n    props: Object,\n    events: Object,\n    size: {\n      type: String,\n      default: 'lg'\n    },\n    width: {\n      type: [String, Number],\n      default: 960\n    },\n    hasModalCard: Boolean,\n    animation: {\n      type: String,\n      default: 'zoom-out'\n    },\n    canCancel: {\n      type: [Array, Boolean],\n      default: function _default() {\n        return config.defaultModalCanCancel;\n      }\n    },\n    onCancel: {\n      type: Function,\n      default: function _default() {}\n    },\n    scroll: {\n      type: String,\n      default: function _default() {\n        return config.defaultModalScroll ? config.defaultModalScroll : 'clip';\n      },\n      validator: function validator(value) {\n        return ['clip', 'keep'].indexOf(value) >= 0;\n      }\n    },\n    fullScreen: Boolean,\n    customClass: String,\n    title: {\n      type: String,\n      default: ''\n    },\n    typeClass: String\n  },\n  data: function data() {\n    return {\n      isActive: this.active || false,\n      savedScrollTop: null,\n      newWidth: typeof this.width === 'number' ? this.width + 'px' : this.width\n    };\n  },\n  computed: {\n    classSize: function classSize() {\n      return this.size ? 'modal-' + this.size : '';\n    },\n    cancelOptions: function cancelOptions() {\n      return typeof this.canCancel === 'boolean' ? this.canCancel ? config.defaultModalCanCancel : [] : this.canCancel;\n    },\n    showX: function showX() {\n      return this.cancelOptions.indexOf('x') >= 0;\n    },\n    customStyle: function customStyle() {\n      if (!this.fullScreen) {\n        return {\n          maxWidth: this.newWidth\n        };\n      }\n\n      return null;\n    }\n  },\n  watch: {\n    active: function active(value) {\n      this.isActive = value;\n    },\n    isActive: function isActive() {\n      this.handleScroll();\n    }\n  },\n  methods: {\n    hasHeaderSlot: function hasHeaderSlot() {\n      return this.$slots.header || this.title;\n    },\n    handleScroll: function handleScroll() {\n      if (typeof window === 'undefined') {\n        return;\n      }\n\n      if (this.scroll === 'clip') {\n        if (this.isActive) {\n          document.documentElement.classList.add('is-clipped');\n        } else {\n          document.documentElement.classList.remove('is-clipped');\n        }\n\n        return;\n      }\n\n      this.savedScrollTop = !this.savedScrollTop ? document.documentElement.scrollTop : this.savedScrollTop;\n\n      if (this.isActive) {\n        document.body.classList.add('is-noscroll');\n      } else {\n        document.body.classList.remove('is-noscroll');\n      }\n\n      if (this.isActive) {\n        document.body.style.top = \"-\".concat(this.savedScrollTop, \"px\");\n        return;\n      }\n\n      document.documentElement.scrollTop = this.savedScrollTop;\n      document.body.style.top = null;\n      this.savedScrollTop = null;\n    },\n\n    /**\n     * Close the Modal if canCancel and call the onCancel prop (function).\n     */\n    cancel: function cancel(method) {\n      if (this.cancelOptions.indexOf(method) < 0) {\n        return;\n      }\n\n      this.onCancel.apply(null, arguments);\n      this.close();\n    },\n\n    /**\n     * Call the onCancel prop (function).\n     * Emit events, and destroy modal if it's programmatic.\n     */\n    close: function close() {\n      var _this = this;\n\n      this.$emit('close');\n      this.$emit('update:active', false); // Timeout for the animation complete before destroying\n\n      if (this.programmatic) {\n        this.isActive = false;\n        setTimeout(function () {\n          _this.$destroy();\n\n          removeElement(_this.$el);\n        }, 150);\n      }\n    },\n\n    /**\n     * Keypress event that is bound to the document.\n     */\n    keyPress: function keyPress(event) {\n      // Esc key\n      if (this.isActive && event.keyCode === 27) {\n        this.cancel('escape');\n      }\n    }\n  },\n  created: function created() {\n    if (typeof window !== 'undefined') {\n      document.addEventListener('keyup', this.keyPress);\n    }\n  },\n  beforeMount: function beforeMount() {\n    // Insert the Modal component in body tag\n    // only if it's programmatic\n    this.programmatic && document.body.appendChild(this.$el);\n  },\n  mounted: function mounted() {\n    if (this.programmatic) this.isActive = true;else if (this.isActive) this.handleScroll();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (typeof window !== 'undefined') {\n      document.removeEventListener('keyup', this.keyPress); // reset scroll\n\n      document.documentElement.classList.remove('is-clipped');\n      var savedScrollTop = !this.savedScrollTop ? document.documentElement.scrollTop : this.savedScrollTop;\n      document.body.classList.remove('is-noscroll');\n      document.documentElement.scrollTop = savedScrollTop;\n      document.body.style.top = null;\n    }\n  }\n};",{"version":3,"sources":["Modal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <transition :name=\"animation\">\n    <div\n      v-if=\"isActive\"\n      class=\"p-modal is-active\"\n      :class=\"[{ 'is-full-screen': fullScreen }, customClass]\"\n    >\n      <div class=\"p-modal-background\" @click=\"cancel('outside')\"></div>\n      <div\n        class=\"p-animation-content\"\n        :class=\"[{ 'p-modal-content': !hasModalCard }, classSize, typeClass]\"\n        :style=\"customStyle\"\n      >\n        <div class=\"modal-content\">\n          <component\n            v-if=\"component\"\n            v-bind=\"props\"\n            v-on=\"events\"\n            :is=\"component\"\n            @close=\"close\"\n          />\n          <div v-else-if=\"content\" v-html=\"content\"></div>\n          <template v-else>\n            <div class=\"modal-header\">\n              <slot name=\"header\">\n                <button\n                  type=\"button\"\n                  class=\"close\"\n                  aria-label=\"Close\"\n                  @click=\"cancel('x')\"\n                >\n                  <span aria-hidden=\"true\">×</span>\n                </button>\n                <h4 class=\"modal-title\">{{ title }}</h4>\n              </slot>\n            </div>\n            <div class=\"modal-body\">\n              <slot></slot>\n            </div>\n            <div class=\"modal-footer\">\n              <slot name=\"footer\"> </slot>\n            </div>\n          </template>\n        </div>\n      </div>\n      <button\n        type=\"button\"\n        v-if=\"showX\"\n        class=\"p-modal-close is-large\"\n        @click=\"cancel('x')\"\n      >\n      </button>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport { removeElement } from '../../utils/dom'\nimport config from '../../config'\n\nexport default {\n  name: 'PModal',\n  props: {\n    active: Boolean,\n    component: [Object, Function],\n    content: String,\n    programmatic: Boolean,\n    props: Object,\n    events: Object,\n    size: {\n      type: String,\n      default: 'lg',\n    },\n    width: {\n      type: [String, Number],\n      default: 960,\n    },\n    hasModalCard: Boolean,\n    animation: {\n      type: String,\n      default: 'zoom-out',\n    },\n    canCancel: {\n      type: [Array, Boolean],\n      default: () => {\n        return config.defaultModalCanCancel\n      },\n    },\n    onCancel: {\n      type: Function,\n      default: () => {},\n    },\n    scroll: {\n      type: String,\n      default: () => {\n        return config.defaultModalScroll ? config.defaultModalScroll : 'clip'\n      },\n      validator: (value) => {\n        return ['clip', 'keep'].indexOf(value) >= 0\n      },\n    },\n    fullScreen: Boolean,\n    customClass: String,\n    title: {\n      type: String,\n      default: '',\n    },\n    typeClass: String,\n  },\n  data() {\n    return {\n      isActive: this.active || false,\n      savedScrollTop: null,\n      newWidth: typeof this.width === 'number' ? this.width + 'px' : this.width,\n    }\n  },\n  computed: {\n    classSize() {\n      return this.size ? 'modal-' + this.size : ''\n    },\n    cancelOptions() {\n      return typeof this.canCancel === 'boolean'\n        ? this.canCancel\n          ? config.defaultModalCanCancel\n          : []\n        : this.canCancel\n    },\n    showX() {\n      return this.cancelOptions.indexOf('x') >= 0\n    },\n    customStyle() {\n      if (!this.fullScreen) {\n        return { maxWidth: this.newWidth }\n      }\n      return null\n    },\n  },\n  watch: {\n    active(value) {\n      this.isActive = value\n    },\n    isActive() {\n      this.handleScroll()\n    },\n  },\n  methods: {\n    hasHeaderSlot() {\n      return this.$slots.header || this.title\n    },\n    handleScroll() {\n      if (typeof window === 'undefined') {\n        return\n      }\n\n      if (this.scroll === 'clip') {\n        if (this.isActive) {\n          document.documentElement.classList.add('is-clipped')\n        } else {\n          document.documentElement.classList.remove('is-clipped')\n        }\n        return\n      }\n\n      this.savedScrollTop = !this.savedScrollTop\n        ? document.documentElement.scrollTop\n        : this.savedScrollTop\n\n      if (this.isActive) {\n        document.body.classList.add('is-noscroll')\n      } else {\n        document.body.classList.remove('is-noscroll')\n      }\n\n      if (this.isActive) {\n        document.body.style.top = `-${this.savedScrollTop}px`\n        return\n      }\n\n      document.documentElement.scrollTop = this.savedScrollTop\n      document.body.style.top = null\n      this.savedScrollTop = null\n    },\n\n    /**\n     * Close the Modal if canCancel and call the onCancel prop (function).\n     */\n    cancel(method) {\n      if (this.cancelOptions.indexOf(method) < 0) {\n        return\n      }\n\n      this.onCancel.apply(null, arguments)\n      this.close()\n    },\n\n    /**\n     * Call the onCancel prop (function).\n     * Emit events, and destroy modal if it's programmatic.\n     */\n    close() {\n      this.$emit('close')\n      this.$emit('update:active', false)\n\n      // Timeout for the animation complete before destroying\n      if (this.programmatic) {\n        this.isActive = false\n        setTimeout(() => {\n          this.$destroy()\n          removeElement(this.$el)\n        }, 150)\n      }\n    },\n\n    /**\n     * Keypress event that is bound to the document.\n     */\n    keyPress(event) {\n      // Esc key\n      if (this.isActive && event.keyCode === 27) {\n        this.cancel('escape')\n      }\n    },\n  },\n  created() {\n    if (typeof window !== 'undefined') {\n      document.addEventListener('keyup', this.keyPress)\n    }\n  },\n  beforeMount() {\n    // Insert the Modal component in body tag\n    // only if it's programmatic\n    this.programmatic && document.body.appendChild(this.$el)\n  },\n  mounted() {\n    if (this.programmatic) this.isActive = true\n    else if (this.isActive) this.handleScroll()\n  },\n  beforeDestroy() {\n    if (typeof window !== 'undefined') {\n      document.removeEventListener('keyup', this.keyPress)\n      // reset scroll\n      document.documentElement.classList.remove('is-clipped')\n      const savedScrollTop = !this.savedScrollTop\n        ? document.documentElement.scrollTop\n        : this.savedScrollTop\n      document.body.classList.remove('is-noscroll')\n      document.documentElement.scrollTop = savedScrollTop\n      document.body.style.top = null\n    }\n  },\n}\n</script>\n"],"sourceRoot":"uikit/components/modal"}]}