{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/dashboard/store/index.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/dashboard/store/index.js","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nvar _mutations, _getters;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport api from '../api';\nimport { ORDER_STATUS_CANCELED, ORDER_STATUS_FULFILLED, ORDER_STATUS_PENDING, ORDER_STATUS_PROCESS } from '@core/constants';\nexport var FETCH_STATISTIC_ORDERS = 'fetchStatisticOrders';\nexport var FETCH_STATISTIC_TOP_SALES_COUNTRIES = 'fetchStatisticTopSalesCountries';\nexport var GET_PERCENT_TOP_SALES_COUNTRIES = 'getPercentTopSalesCountries';\nexport var GET_STATISTICS_ORDERS_SELLER = 'getStatisticsOrdersSeller';\nexport var FETCH_STATISTIC_ORDERS_SUPPLIER = 'fetchStatisticOrdersSupplier';\nexport var GET_STATISTICS_ORDER_SUPPLIER = 'getStatisticsOrdersSupplier';\nexport var FETCH_STATISTIC_REF_ACTIVE = 'fetchStatisticRefActive';\nexport var FETCH_STATISTIC_REF_SALE = 'fetchStatisticRefSale';\nexport var GET_STATISTIC_REF = 'getStatisticRef';\nexport var state = {\n  statisticOrders: {},\n  supplierStatisticOrders: {},\n  statisticTopSalesCountries: {},\n  statisticRefActive: {},\n  statisticRefSale: {}\n};\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, FETCH_STATISTIC_ORDERS, function (state, payload) {\n  state.statisticOrders = payload;\n}), _defineProperty(_mutations, FETCH_STATISTIC_TOP_SALES_COUNTRIES, function (state, payload) {\n  state.statisticTopSalesCountries = payload;\n}), _defineProperty(_mutations, FETCH_STATISTIC_ORDERS_SUPPLIER, function (state, payload) {\n  state.supplierStatisticOrders = payload;\n}), _defineProperty(_mutations, FETCH_STATISTIC_REF_ACTIVE, function (state, payload) {\n  state.statisticRefActive = payload;\n}), _defineProperty(_mutations, FETCH_STATISTIC_REF_SALE, function (state, payload) {\n  state.statisticRefSale = payload;\n}), _mutations);\nexport var actions = {\n  /**\n   *\n   * @param commit\n   * @param payload\n   * @return {Promise<void>}\n   */\n  fetchStatisticOrders: function () {\n    var _fetchStatisticOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return api.fetchStatisticOrders(payload);\n\n            case 3:\n              response = _context.sent;\n\n              if (!response || response.error) {\n                response = {};\n              }\n\n              commit(FETCH_STATISTIC_ORDERS, response);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function fetchStatisticOrders(_x, _x2) {\n      return _fetchStatisticOrders.apply(this, arguments);\n    }\n\n    return fetchStatisticOrders;\n  }(),\n\n  /**\n   *\n   * @param commit\n   * @param payload\n   * @return {Promise<void>}\n   */\n  fetchStatisticTopSalesCountries: function () {\n    var _fetchStatisticTopSalesCountries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return api.fetchStatisticTopSalesCountries(payload);\n\n            case 3:\n              response = _context2.sent;\n\n              if (!response || response.error) {\n                response = {\n                  countries: {}\n                };\n              }\n\n              commit(FETCH_STATISTIC_TOP_SALES_COUNTRIES, response.countries);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function fetchStatisticTopSalesCountries(_x3, _x4) {\n      return _fetchStatisticTopSalesCountries.apply(this, arguments);\n    }\n\n    return fetchStatisticTopSalesCountries;\n  }(),\n  fetchStatisticOrdersSupplier: function () {\n    var _fetchStatisticOrdersSupplier = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref3, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              result = {\n                success: true\n              };\n              _context3.next = 4;\n              return api.fetchStatisticOrdersSupplier(payload);\n\n            case 4:\n              response = _context3.sent;\n\n              if (response && response.errorMessage) {\n                result = {\n                  success: false,\n                  message: response.errorMessage\n                };\n                response = {};\n              }\n\n              commit(FETCH_STATISTIC_ORDERS_SUPPLIER, response);\n              return _context3.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function fetchStatisticOrdersSupplier(_x5, _x6) {\n      return _fetchStatisticOrdersSupplier.apply(this, arguments);\n    }\n\n    return fetchStatisticOrdersSupplier;\n  }(),\n  fetchStatisticRefActive: function () {\n    var _fetchStatisticRefActive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref4, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              result = {\n                success: true\n              };\n              _context4.next = 4;\n              return api.fetchStatisticRefActive(payload);\n\n            case 4:\n              response = _context4.sent;\n\n              if (response && response.errorMessage) {\n                result = {\n                  success: false,\n                  message: response.errorMessage\n                };\n                response = {};\n              }\n\n              commit(FETCH_STATISTIC_REF_ACTIVE, response);\n              return _context4.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function fetchStatisticRefActive(_x7, _x8) {\n      return _fetchStatisticRefActive.apply(this, arguments);\n    }\n\n    return fetchStatisticRefActive;\n  }(),\n  fetchStatisticRefSale: function () {\n    var _fetchStatisticRefSale = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref5, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              result = {\n                success: true\n              };\n              _context5.next = 4;\n              return api.fetchStatisticRefSale(payload);\n\n            case 4:\n              response = _context5.sent;\n\n              if (response && response.errorMessage) {\n                result = {\n                  success: false,\n                  message: response.errorMessage\n                };\n                response = {};\n              }\n\n              commit(FETCH_STATISTIC_REF_SALE, response);\n              return _context5.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function fetchStatisticRefSale(_x9, _x10) {\n      return _fetchStatisticRefSale.apply(this, arguments);\n    }\n\n    return fetchStatisticRefSale;\n  }()\n};\n\nvar getRouteByStatus = function getRouteByStatus(status) {\n  return {\n    name: 'order-list',\n    query: {\n      status: status\n    }\n  };\n};\n\nvar status = {\n  pending: {\n    icon: 'shopping-cart',\n    color: 'warning',\n    heading: 'Pending',\n    route: getRouteByStatus(ORDER_STATUS_PENDING)\n  },\n  process: {\n    icon: 'collection-folder-image',\n    color: 'info',\n    heading: 'Process',\n    route: getRouteByStatus(ORDER_STATUS_PROCESS)\n  },\n  fulfilled: {\n    icon: 'truck',\n    color: 'success',\n    heading: 'Fulfilled',\n    route: getRouteByStatus(ORDER_STATUS_FULFILLED)\n  },\n  reject: {\n    icon: 'delete',\n    color: 'danger',\n    heading: 'Cancelled',\n    route: getRouteByStatus(ORDER_STATUS_CANCELED)\n  }\n};\nvar ReferentCard = {\n  user_active: {\n    icon: 'collection-folder-image',\n    color: 'warning',\n    heading: 'User Active'\n  },\n  amount: {\n    icon: 'shopping-cart',\n    color: 'info',\n    heading: 'Amount'\n  },\n  order: {\n    icon: 'truck',\n    color: 'success',\n    heading: 'Order'\n  }\n};\n\nvar getStatisticsByStatus = function getStatisticsByStatus(statisticsStatus) {\n  var statistics = [];\n  Object.keys(statisticsStatus).forEach(function (key) {\n    statistics.push(Object.assign(_objectSpread({\n      value: statisticsStatus[key] || 0\n    }, status[key])));\n  });\n  return statistics;\n};\n\nvar getStatisticsRefByIcon = function getStatisticsRefByIcon(statisticsRef) {\n  var statistics = [];\n  Object.keys(statisticsRef).forEach(function (key) {\n    statistics.push(Object.assign(_objectSpread({\n      value: statisticsRef[key] || 0\n    }, ReferentCard[key])));\n  });\n  return statistics;\n};\n\nexport var getters = (_getters = {}, _defineProperty(_getters, GET_PERCENT_TOP_SALES_COUNTRIES, function (state, getters, rootState) {\n  if (!Object.keys(state.statisticTopSalesCountries).length) {\n    return [];\n  }\n\n  var countries = [];\n  var total = Object.values(state.statisticTopSalesCountries).reduce(function (accumulator, currentValue) {\n    return accumulator + currentValue;\n  });\n  Object.keys(state.statisticTopSalesCountries).forEach(function (key) {\n    var sales = state.statisticTopSalesCountries[key];\n    var country = rootState.shared.countries.find(function (_ref6) {\n      var code = _ref6.code;\n      return code === key;\n    });\n    countries.push({\n      code: key,\n      name: country ? country.name : key,\n      sales: sales,\n      percent: (sales / total * 100).toFixed(2)\n    });\n  });\n  return countries.sort(function (a, b) {\n    return b.sales - a.sales;\n  });\n}), _defineProperty(_getters, GET_STATISTICS_ORDERS_SELLER, function (state) {\n  var statisticsStatus;\n\n  if (state.statisticOrders.result != undefined) {\n    statisticsStatus = {\n      pending: state.statisticOrders.result.order_pending,\n      process: state.statisticOrders.result.order_process,\n      fulfilled: state.statisticOrders.result.order_fulfilled,\n      reject: state.statisticOrders.result.order_canceled\n    };\n    return getStatisticsByStatus(statisticsStatus);\n  }\n\n  return [];\n}), _defineProperty(_getters, GET_STATISTICS_ORDER_SUPPLIER, function (state) {\n  var statisticsStatus = {\n    pending: state.supplierStatisticOrders.order_pending,\n    fulfilled: state.supplierStatisticOrders.order_fulfilled,\n    reject: state.supplierStatisticOrders.order_reject\n  };\n  return getStatisticsByStatus(statisticsStatus);\n}), _defineProperty(_getters, GET_STATISTIC_REF, function (state) {\n  var statisticsRef = {\n    user_active: state.statisticRefActive.user_active,\n    amount: state.statisticRefSale.amount,\n    order: state.statisticRefSale.order\n  };\n  return getStatisticsRefByIcon(statisticsRef);\n}), _getters);",null]}