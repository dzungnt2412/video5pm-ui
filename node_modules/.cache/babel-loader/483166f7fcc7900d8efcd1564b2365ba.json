{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/uikit/components/progress/Progress.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/uikit/components/progress/Progress.vue","mtime":1604479002001},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'PProgress',\n  props: {\n    type: {\n      type: [String, Object],\n      default: 'dark'\n    },\n    size: String,\n    value: {\n      type: Number,\n      default: undefined\n    },\n    max: {\n      type: Number,\n      default: 100\n    },\n    showValue: {\n      type: Boolean,\n      default: false\n    },\n    format: {\n      type: String,\n      default: 'raw',\n      validator: function validator(value) {\n        return ['raw', 'percent'].indexOf(value) >= 0;\n      }\n    },\n    precision: {\n      type: Number,\n      default: 2\n    },\n    keepTrailingZeroes: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    isIndeterminate: function isIndeterminate() {\n      return this.value === undefined || this.value === null;\n    },\n    newType: function newType() {\n      return [this.size ? \"is-\".concat(this.size) : '', this.type ? \"is-\".concat(this.type) : ''];\n    },\n    newValue: function newValue() {\n      if (this.value === undefined || this.value === null || isNaN(this.value)) {\n        return undefined;\n      }\n\n      if (this.format === 'percent') {\n        var _val = this.toFixed(this.value * this.max / 100);\n\n        return \"\".concat(_val, \"%\");\n      }\n\n      var val = this.toFixed(this.value);\n      return val;\n    }\n  },\n  watch: {\n    value: function value(_value) {\n      this.setValue(_value);\n    }\n  },\n  methods: {\n    /**\n     * When value is changed back to undefined, value of native progress get reset to 0.\n     * Need to add and remove the value attribute to have the indeterminate or not.\n     */\n    setValue: function setValue(value) {\n      if (this.isIndeterminate) {\n        this.$refs.progress.removeAttribute('value');\n      } else {\n        this.$refs.progress.setAttribute('value', value);\n      }\n    },\n    // Custom function that imitate the javascript toFixed method with improved rounding\n    toFixed: function toFixed(num) {\n      var fixed = (+\"\".concat(Math.round(+\"\".concat(num, \"e\").concat(this.precision)), \"e\").concat(-this.precision)).toFixed(this.precision);\n\n      if (!this.keepTrailingZeroes) {\n        fixed = fixed.replace(/\\.?0+$/, '');\n      }\n\n      return fixed;\n    }\n  },\n  mounted: function mounted() {\n    this.setValue(this.value);\n  }\n};",{"version":3,"sources":["Progress.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"progress-wrapper\">\n    <progress ref=\"progress\" class=\"progress\" :class=\"newType\" :max=\"max\">{{\n      newValue\n    }}</progress>\n    <p v-if=\"showValue\" class=\"progress-value\"\n      ><slot>{{ newValue }}</slot></p\n    >\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'PProgress',\n  props: {\n    type: {\n      type: [String, Object],\n      default: 'dark',\n    },\n    size: String,\n    value: {\n      type: Number,\n      default: undefined,\n    },\n    max: {\n      type: Number,\n      default: 100,\n    },\n    showValue: {\n      type: Boolean,\n      default: false,\n    },\n    format: {\n      type: String,\n      default: 'raw',\n      validator: (value) => {\n        return ['raw', 'percent'].indexOf(value) >= 0\n      },\n    },\n    precision: {\n      type: Number,\n      default: 2,\n    },\n    keepTrailingZeroes: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    isIndeterminate() {\n      return this.value === undefined || this.value === null\n    },\n    newType() {\n      return [\n        this.size ? `is-${this.size}` : '',\n        this.type ? `is-${this.type}` : '',\n      ]\n    },\n    newValue() {\n      if (\n        this.value === undefined ||\n        this.value === null ||\n        isNaN(this.value)\n      ) {\n        return undefined\n      }\n\n      if (this.format === 'percent') {\n        const val = this.toFixed((this.value * this.max) / 100)\n        return `${val}%`\n      }\n      const val = this.toFixed(this.value)\n      return val\n    },\n  },\n  watch: {\n    value(value) {\n      this.setValue(value)\n    },\n  },\n  methods: {\n    /**\n     * When value is changed back to undefined, value of native progress get reset to 0.\n     * Need to add and remove the value attribute to have the indeterminate or not.\n     */\n    setValue(value) {\n      if (this.isIndeterminate) {\n        this.$refs.progress.removeAttribute('value')\n      } else {\n        this.$refs.progress.setAttribute('value', value)\n      }\n    },\n    // Custom function that imitate the javascript toFixed method with improved rounding\n    toFixed(num) {\n      let fixed = (+`${Math.round(+`${num}e${this.precision}`)}e${-this\n        .precision}`).toFixed(this.precision)\n      if (!this.keepTrailingZeroes) {\n        fixed = fixed.replace(/\\.?0+$/, '')\n      }\n      return fixed\n    },\n  },\n  mounted() {\n    this.setValue(this.value)\n  },\n}\n</script>\n"],"sourceRoot":"uikit/components/progress"}]}