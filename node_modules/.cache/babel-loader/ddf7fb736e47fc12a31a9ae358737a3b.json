{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/api.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/api.js","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["import http from '@core/services/http';\nimport { buildQueryString } from '@core/utils/url';\nexport default {\n  // Product types\n  fetchProductTypes: function fetchProductTypes() {\n    var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return http.get(\"/products/types/all?\".concat(buildQueryString(payload)));\n  },\n  fetchProductType: function fetchProductType(id) {\n    return http.get(\"/products/types/\".concat(id));\n  },\n  addProductType: function addProductType(payload) {\n    return http.post('/products', {\n      product_type: payload\n    });\n  },\n  updateProductType: function updateProductType(payload) {\n    return http.put(\"/products/types/\".concat(payload.id), {\n      product_type: payload\n    });\n  },\n  updateProductTypesStatus: function updateProductTypesStatus(payload) {\n    return http.put('/products/types/status', payload);\n  },\n  // Packages\n  fetchPackages: function fetchPackages() {\n    var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return http.get(\"/products/packages?\".concat(buildQueryString(payload)));\n  },\n  addPackage: function addPackage(payload) {\n    return http.post('/packages', payload);\n  },\n  updatePackage: function updatePackage(payload) {\n    return http.put(\"/package/\".concat(payload.id), {\n      package: payload\n    });\n  },\n\n  /**\n   * Fetch order mapping list and count\n   * @param payload\n   * @return {*}\n   */\n  fetchOrderMappings: function fetchOrderMappings(type, payload) {\n    return http.get(\"/order-mapping/\".concat(type, \"?\").concat(buildQueryString(payload))); // return _new Promise((resolve) => {\n    //   resolve({\"order_mappings\":[{\"product_type_id\":null,\"rules\":[{\"column\":\"option_set\",\"relation\":\"equal\",\"condition\":\"Sizes\",\"target_value\":null},{\"column\":\"option\",\"relation\":\"equal\",\"condition\":\"Small\",\"target_value\":null},{\"column\":\"option\",\"relation\":\"equal\",\"condition\":\" Medium\",\"target_value\":null},{\"column\":\"option_set\",\"relation\":\"equal\",\"condition\":\"Color\",\"target_value\":null},{\"column\":\"option\",\"relation\":\"equal\",\"condition\":\"Blue\",\"target_value\":null},{\"column\":\"option\",\"relation\":\"equal\",\"condition\":\" Red\",\"target_value\":null}],\"type\":\"option\",\"disjunctive\":false}]})\n    // })\n  },\n\n  /**\n   * Fetch order mapping\n   * @param id\n   * @return {*}\n   */\n  fetchOrderMapping: function fetchOrderMapping(type, id) {\n    return http.get(\"/order-mapping/\".concat(type, \"/\").concat(id));\n  },\n\n  /**\n   * Create or update order mapping\n   * @param payload\n   * @return {*}\n   */\n  createOrUpdateOrderMapping: function createOrUpdateOrderMapping(type, payload) {\n    return http.post(\"/order-mapping/\".concat(type), payload);\n  },\n\n  /**\n   * Delete order mapping\n   * @param id\n   * @return {*}\n   */\n  deleteOrderMapping: function deleteOrderMapping(type, id) {\n    return http.delete(\"/order-mapping/\".concat(type, \"/\").concat(id));\n  },\n\n  /**\n   * Get options and option sets by product id\n   * @param id\n   * @return {*}\n   */\n  getOptionsByProductId: function getOptionsByProductId(id) {\n    return http.get(\"/products/options/\".concat(id));\n  },\n\n  /**\n   * Fetch order mapping fail lists\n   * @param id\n   * @return {*}\n   */\n  fetchOrderMappingFails: function fetchOrderMappingFails(payload) {\n    return http.get(\"/order-mapping/order-map-fail?\".concat(buildQueryString(payload)));\n  },\n\n  /**\n   * Retry order mapping fails\n   * @param id\n   * @return {*}\n   */\n  retryOrderMappingFails: function retryOrderMappingFails(payload) {\n    return http.post(\"/order-mapping/retry-order-map-fail\", payload);\n  }\n};",null]}