{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/user/store/index.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/user/store/index.js","mtime":1604479001993},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nvar _mutations;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport api from '../api';\n/**\n * Types\n */\n\nexport var CHANGE_PASSWORD = 'changePassword';\nexport var CHANGE_PROFILE = 'changeProfile';\nexport var FETCH_PROFILE = 'fetchProfile';\nexport var FETCH_STAFFS = 'fetchStaffs';\nexport var FETCH_CURRENT_SUPPORTS = 'fetchCurrentSupports';\nexport var STORE_PERMISSION_STAFF_SUPPORT = 'storePermissionStaffSupportSeller';\n/**\n * State\n */\n\nexport var state = {\n  current: {},\n  staffs: [],\n  cuurentSupports: []\n};\n/**\n * Actions\n */\n\nexport var actions = {\n  /**\n   *  Change password\n   * @param commit\n   * @param payload\n   * @return {Promise<{success: object}>}\n   */\n  // eslint-disable-next-line\n  changePassword: function () {\n    var _changePassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              result = {\n                success: true\n              };\n              _context.next = 4;\n              return api.changePassword(payload);\n\n            case 4:\n              response = _context.sent;\n\n              if (response && response.errorMessage) {\n                result = {\n                  success: false,\n                  message: response.errorMessage\n                };\n              }\n\n              return _context.abrupt(\"return\", result);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function changePassword(_x, _x2) {\n      return _changePassword.apply(this, arguments);\n    }\n\n    return changePassword;\n  }(),\n\n  /**\n   * Fetch profile\n   * @param commit\n   * @return {Promise<{success: object}>}\n   */\n  fetchProfile: function () {\n    var _fetchProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              result = {\n                success: true\n              };\n              _context2.next = 4;\n              return api.fetchProfile();\n\n            case 4:\n              response = _context2.sent;\n\n              if (response && response.errorMessage) {\n                result = {\n                  success: false,\n                  message: response.errorMessage\n                };\n                response = {\n                  user: {}\n                };\n              }\n\n              commit(FETCH_PROFILE, response.user);\n              return _context2.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function fetchProfile(_x3) {\n      return _fetchProfile.apply(this, arguments);\n    }\n\n    return fetchProfile;\n  }(),\n\n  /**\n   *  Change profile\n   * @param commit\n   * @param payload\n   * @return {Promise<{success: boolean}>}\n   */\n  changeProfile: function () {\n    var _changeProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref3, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              result = {\n                success: true\n              };\n              _context3.next = 4;\n              return api.changeProfile(payload);\n\n            case 4:\n              response = _context3.sent;\n\n              if (response && response.errorMessage) {\n                result = {\n                  success: false,\n                  message: response.errorMessage\n                };\n              } else {\n                commit(FETCH_PROFILE, response.user);\n              }\n\n              return _context3.abrupt(\"return\", result);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function changeProfile(_x4, _x5) {\n      return _changeProfile.apply(this, arguments);\n    }\n\n    return changeProfile;\n  }(),\n\n  /**\n   * get users role support\n   * @param commit\n   * @param payload\n   * @return {Promise<{success: boolean}>}\n   */\n  fetchStaffs: function () {\n    var _fetchStaffs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref4) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              result = {\n                success: true\n              };\n              _context4.next = 4;\n              return api.fetchUsers({\n                limit: 250,\n                role: 'support',\n                status: 'active'\n              });\n\n            case 4:\n              response = _context4.sent;\n\n              if (response && response.errorMessage) {\n                result = {\n                  success: false,\n                  message: response.errorMessage\n                };\n                response = {\n                  users: []\n                };\n              }\n\n              commit(FETCH_STAFFS, response.users);\n              return _context4.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function fetchStaffs(_x6) {\n      return _fetchStaffs.apply(this, arguments);\n    }\n\n    return fetchStaffs;\n  }(),\n\n  /**\n   * get users role support\n   * @param commit\n   * @param payload\n   * @return {Promise<{success: boolean}>}\n   */\n  fetchCurrentSupports: function () {\n    var _fetchCurrentSupports = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref5, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              result = {\n                success: true\n              };\n              _context5.next = 4;\n              return api.fetchSupports(payload);\n\n            case 4:\n              response = _context5.sent;\n\n              if (response && response.errorMessage) {\n                result = {\n                  success: false,\n                  message: response.errorMessage\n                };\n                response = {\n                  supports: []\n                };\n              }\n\n              commit(FETCH_CURRENT_SUPPORTS, response.supports);\n              return _context5.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function fetchCurrentSupports(_x7, _x8) {\n      return _fetchCurrentSupports.apply(this, arguments);\n    }\n\n    return fetchCurrentSupports;\n  }(),\n\n  /**\n   * save permission staff support seller\n   * @param commit\n   * @param payload\n   * @return {Promise<{success: boolean}>}\n   */\n  // eslint-disable-next-line\n  storePermissionStaffSupportSeller: function () {\n    var _storePermissionStaffSupportSeller = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(_ref6, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref6.commit;\n              _context6.next = 3;\n              return api.storePermissionStaffSupportSeller(payload);\n\n            case 3:\n              response = _context6.sent;\n\n              if (!(response && response.success === true)) {\n                _context6.next = 6;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", {\n                success: true\n              });\n\n            case 6:\n              return _context6.abrupt(\"return\", {\n                success: false,\n                message: response.errorMessage || ''\n              });\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function storePermissionStaffSupportSeller(_x9, _x10) {\n      return _storePermissionStaffSupportSeller.apply(this, arguments);\n    }\n\n    return storePermissionStaffSupportSeller;\n  }()\n};\n/**\n * Mutations\n */\n\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, FETCH_PROFILE, function (state, payload) {\n  state.current = payload;\n}), _defineProperty(_mutations, FETCH_STAFFS, function (state, payload) {\n  state.staffs = payload;\n}), _defineProperty(_mutations, FETCH_CURRENT_SUPPORTS, function (state, payload) {\n  state.cuurentSupports = payload;\n}), _mutations);",null]}