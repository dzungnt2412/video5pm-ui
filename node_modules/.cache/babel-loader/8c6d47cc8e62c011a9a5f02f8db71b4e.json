{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/store/index.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/store/index.js","mtime":1605110441116},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nvar _mutations, _getters;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { ROLE_SELLER } from '@core/constants';\nimport api from '../api';\nimport AuthService from '@core/services/auth';\nimport Affiliate from '@core/helpers/affiliate';\nimport { HTTP_STATUS_FORBIDDEN } from '@core/constants/http';\n/**\n * Type\n */\n\nexport var AUTHENTICATE = 'authenticate';\nexport var GET_USER = 'getUser';\nexport var VERIFY_EMAIL = 'verifyEmail';\nexport var RESEND_EMAIL = 'resendEmail';\nexport var CURRENT_USER = 'currentUser';\n/**\n * State\n */\n\nexport var state = {\n  user: {}\n};\n/**\n * Actions\n */\n\nexport var actions = {\n  /**\n   * Init\n   * @param commit\n   */\n  init: function init(_ref) {\n    var commit = _ref.commit;\n    AuthService.init();\n\n    if (AuthService.isAuthenticated()) {\n      handleAuthenticated(commit, Object.assign({}, AuthService.user));\n    }\n  },\n\n  /**\n   * Sign in\n   * @param commit\n   * @param payload\n   * @returns {Promise<{success: boolean}>}\n   */\n  signIn: function () {\n    var _signIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2, payload) {\n      var commit, response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context.next = 3;\n              return api.signIn(payload);\n\n            case 3:\n              response = _context.sent;\n\n              if (!(response && response.access_token)) {\n                _context.next = 8;\n                break;\n              }\n\n              data = Object.assign({}, response.user, {\n                access_token: response.access_token\n              });\n              handleAuthenticated(commit, transformerAuthenticate(data));\n              return _context.abrupt(\"return\", {\n                success: true,\n                permission: data.role === ROLE_SELLER\n              });\n\n            case 8:\n              if (!(response && response.user && response.statusCode == HTTP_STATUS_FORBIDDEN)) {\n                _context.next = 11;\n                break;\n              }\n\n              commit(CURRENT_USER, response.user);\n              return _context.abrupt(\"return\", {\n                success: false,\n                message: response.errorMessage || '',\n                userInActive: true\n              });\n\n            case 11:\n              return _context.abrupt(\"return\", {\n                success: false,\n                message: response.errorMessage || '',\n                number_incorrect: response.number_incorrect_password || 0\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function signIn(_x, _x2) {\n      return _signIn.apply(this, arguments);\n    }\n\n    return signIn;\n  }(),\n\n  /**\n   * Sign up\n   * @param commit\n   * @param payload\n   * @returns {Promise<{success: boolean}>}\n   */\n  // eslint-disable-next-line\n  signUp: function () {\n    var _signUp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref3.commit;\n\n              if (Affiliate.hasRef()) {\n                payload.user_referring_code = Affiliate.getRef();\n              }\n\n              payload.user.username = payload.user.username.toLowerCase();\n              _context2.next = 5;\n              return api.signUp(payload);\n\n            case 5:\n              response = _context2.sent;\n\n              if (!(response && response.user && response.user.id)) {\n                _context2.next = 9;\n                break;\n              }\n\n              commit(CURRENT_USER, response.user);\n              return _context2.abrupt(\"return\", {\n                success: true\n              });\n\n            case 9:\n              return _context2.abrupt(\"return\", response);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function signUp(_x3, _x4) {\n      return _signUp.apply(this, arguments);\n    }\n\n    return signUp;\n  }(),\n\n  /**\n   * Sign out\n   * @param commit\n   */\n  signOut: function signOut(_ref4) {\n    var commit = _ref4.commit;\n    AuthService.set({});\n    commit(AUTHENTICATE, {});\n    AuthService.clear();\n  },\n  // eslint-disable-next-line\n  forgotPassword: function () {\n    var _forgotPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref5, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context3.next = 3;\n              return api.forgot(payload);\n\n            case 3:\n              response = _context3.sent;\n\n              if (!response.success) {\n                _context3.next = 6;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", {\n                success: true,\n                message: 'Instructions to reset your password have been sent to you. Please check your email.'\n              });\n\n            case 6:\n              return _context3.abrupt(\"return\", response);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function forgotPassword(_x5, _x6) {\n      return _forgotPassword.apply(this, arguments);\n    }\n\n    return forgotPassword;\n  }(),\n  // eslint-disable-next-line\n  resetPassword: function () {\n    var _resetPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref6, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref6.commit;\n              _context4.next = 3;\n              return api.resetPass(payload);\n\n            case 3:\n              response = _context4.sent;\n\n              if (!response.success) {\n                _context4.next = 6;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", {\n                success: true\n              });\n\n            case 6:\n              return _context4.abrupt(\"return\", response);\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function resetPassword(_x7, _x8) {\n      return _resetPassword.apply(this, arguments);\n    }\n\n    return resetPassword;\n  }(),\n  verifyEmail: function () {\n    var _verifyEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref7, payload) {\n      var commit, response, data;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref7.commit;\n              _context5.next = 3;\n              return api.verifyEmail(payload);\n\n            case 3:\n              response = _context5.sent;\n\n              if (!(response && response.access_token)) {\n                _context5.next = 8;\n                break;\n              }\n\n              data = Object.assign({}, response.user, {\n                access_token: response.access_token\n              });\n              handleAuthenticated(commit, transformerAuthenticate(data));\n              return _context5.abrupt(\"return\", {\n                success: true,\n                permission: data.role === ROLE_SELLER\n              });\n\n            case 8:\n              return _context5.abrupt(\"return\", {\n                success: false,\n                message: response.errorMessage || ''\n              });\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function verifyEmail(_x9, _x10) {\n      return _verifyEmail.apply(this, arguments);\n    }\n\n    return verifyEmail;\n  }(),\n  // eslint-disable-next-line\n  resendEmail: function () {\n    var _resendEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(_ref8, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref8.commit;\n              _context6.next = 3;\n              return api.resendEmail(payload);\n\n            case 3:\n              response = _context6.sent;\n\n              if (!response.success) {\n                _context6.next = 6;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", {\n                success: true\n              });\n\n            case 6:\n              return _context6.abrupt(\"return\", {\n                success: false\n              });\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function resendEmail(_x11, _x12) {\n      return _resendEmail.apply(this, arguments);\n    }\n\n    return resendEmail;\n  }()\n};\n/**\n * Mutations\n */\n\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, AUTHENTICATE, function (state, payload) {\n  state.user = payload;\n}), _defineProperty(_mutations, VERIFY_EMAIL, function (state, payload) {\n  state.user_signUp = payload;\n  state.token = payload;\n}), _defineProperty(_mutations, CURRENT_USER, function (state, payload) {\n  state.user = payload;\n}), _mutations);\n/**\n * Getters\n */\n\nexport var getters = (_getters = {}, _defineProperty(_getters, GET_USER, function (state) {\n  if (state.user && state.user.id) {\n    return Object.assign({}, state.user);\n  }\n\n  return {\n    id: 0\n  };\n}), _defineProperty(_getters, \"currentRole\", function currentRole(state) {\n  return state.user.role;\n}), _defineProperty(_getters, \"isSeller\", function isSeller(state) {\n  return state.user.role === ROLE_SELLER;\n}), _getters);\n/**\n * Handle after authenticated\n * @param commit\n * @param payload\n */\n\nvar handleAuthenticated = function handleAuthenticated(commit, payload) {\n  if (payload.role !== ROLE_SELLER) {\n    return;\n  }\n\n  AuthService.set(payload);\n  commit(AUTHENTICATE, payload);\n};\n/**\n * transformer authenticate data to storage\n * @param response\n * @return {{name: *, id: *, avatar: *, accessToken: *, email: *}}\n */\n\n\nvar transformerAuthenticate = function transformerAuthenticate(response) {\n  return {\n    id: response.id,\n    accessToken: response.access_token,\n    email: response.email,\n    username: response.username,\n    role: response.role,\n    canReferent: response.can_refer,\n    refCode: response.ref_code || ''\n  };\n};",{"version":3,"sources":["/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/store/index.js"],"names":["ROLE_SELLER","api","AuthService","Affiliate","HTTP_STATUS_FORBIDDEN","AUTHENTICATE","GET_USER","VERIFY_EMAIL","RESEND_EMAIL","CURRENT_USER","state","user","actions","init","commit","isAuthenticated","handleAuthenticated","Object","assign","signIn","payload","response","access_token","data","transformerAuthenticate","success","permission","role","statusCode","message","errorMessage","userInActive","number_incorrect","number_incorrect_password","signUp","hasRef","user_referring_code","getRef","username","toLowerCase","id","signOut","set","clear","forgotPassword","forgot","resetPassword","resetPass","verifyEmail","resendEmail","mutations","user_signUp","token","getters","accessToken","email","canReferent","can_refer","refCode","ref_code"],"mappings":"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","sourcesContent":["import { ROLE_SELLER } from '@core/constants'\nimport api from '../api'\nimport AuthService from '@core/services/auth'\nimport Affiliate from '@core/helpers/affiliate'\nimport { HTTP_STATUS_FORBIDDEN } from '@core/constants/http'\n/**\n * Type\n */\nexport const AUTHENTICATE = 'authenticate'\nexport const GET_USER = 'getUser'\nexport const VERIFY_EMAIL = 'verifyEmail'\nexport const RESEND_EMAIL = 'resendEmail'\nexport const CURRENT_USER = 'currentUser'\n/**\n * State\n */\nexport const state = {\n  user: {},\n}\n\n/**\n * Actions\n */\nexport const actions = {\n  /**\n   * Init\n   * @param commit\n   */\n  init({ commit }) {\n    AuthService.init()\n\n    if (AuthService.isAuthenticated()) {\n      handleAuthenticated(commit, Object.assign({}, AuthService.user))\n    }\n  },\n\n  /**\n   * Sign in\n   * @param commit\n   * @param payload\n   * @returns {Promise<{success: boolean}>}\n   */\n  async signIn({ commit }, payload) {\n    let response\n\n    response = await api.signIn(payload)\n    if (response && response.access_token) {\n      const data = Object.assign({}, response.user, {\n        access_token: response.access_token,\n      })\n      handleAuthenticated(commit, transformerAuthenticate(data))\n\n      return {\n        success: true,\n        permission: data.role === ROLE_SELLER,\n      }\n    }\n\n    if (\n      response &&\n      response.user &&\n      response.statusCode == HTTP_STATUS_FORBIDDEN\n    ) {\n      commit(CURRENT_USER, response.user)\n      return {\n        success: false,\n        message: response.errorMessage || '',\n        userInActive: true,\n      }\n    }\n\n    return {\n      success: false,\n      message: response.errorMessage || '',\n      number_incorrect: response.number_incorrect_password || 0,\n    }\n  },\n\n  /**\n   * Sign up\n   * @param commit\n   * @param payload\n   * @returns {Promise<{success: boolean}>}\n   */\n  // eslint-disable-next-line\n  async signUp({ commit }, payload) {\n    if (Affiliate.hasRef()) {\n      payload.user_referring_code = Affiliate.getRef()\n    }\n\n    payload.user.username = payload.user.username.toLowerCase()\n    const response = await api.signUp(payload)\n\n    if (response && response.user && response.user.id) {\n      commit(CURRENT_USER, response.user)\n      return {\n        success: true,\n      }\n    }\n\n    return response\n  },\n\n  /**\n   * Sign out\n   * @param commit\n   */\n  signOut({ commit }) {\n    AuthService.set({})\n    commit(AUTHENTICATE, {})\n    AuthService.clear()\n  },\n\n  // eslint-disable-next-line\n  async forgotPassword({ commit }, payload) {\n    const response = await api.forgot(payload)\n    if (response.success) {\n      return {\n        success: true,\n        message:\n          'Instructions to reset your password have been sent to you. Please check your email.',\n      }\n    }\n\n    return response\n  },\n  // eslint-disable-next-line\n  async resetPassword({ commit }, payload) {\n    const response = await api.resetPass(payload)\n    if (response.success) {\n      return {\n        success: true,\n      }\n    }\n\n    return response\n  },\n\n  async verifyEmail({ commit }, payload) {\n    let response\n    response = await api.verifyEmail(payload)\n\n    if (response && response.access_token) {\n      const data = Object.assign({}, response.user, {\n        access_token: response.access_token,\n      })\n      handleAuthenticated(commit, transformerAuthenticate(data))\n\n      return {\n        success: true,\n        permission: data.role === ROLE_SELLER,\n      }\n    }\n    return {\n      success: false,\n      message: response.errorMessage || '',\n    }\n  },\n  // eslint-disable-next-line\n  async resendEmail({ commit }, payload) {\n    const response = await api.resendEmail(payload)\n\n    if (response.success) {\n      return { success: true }\n    }\n\n    return { success: false }\n  },\n}\n\n/**\n * Mutations\n */\nexport const mutations = {\n  [AUTHENTICATE](state, payload) {\n    state.user = payload\n  },\n  [VERIFY_EMAIL](state, payload) {\n    state.user_signUp = payload\n    state.token = payload\n  },\n  [CURRENT_USER](state, payload) {\n    state.user = payload\n  },\n}\n\n/**\n * Getters\n */\nexport const getters = {\n  [GET_USER](state) {\n    if (state.user && state.user.id) {\n      return Object.assign({}, state.user)\n    }\n\n    return { id: 0 }\n  },\n  currentRole(state) {\n    return state.user.role\n  },\n  isSeller(state) {\n    return state.user.role === ROLE_SELLER\n  },\n}\n\n/**\n * Handle after authenticated\n * @param commit\n * @param payload\n */\nconst handleAuthenticated = (commit, payload) => {\n  if (payload.role !== ROLE_SELLER) {\n    return\n  }\n\n  AuthService.set(payload)\n  commit(AUTHENTICATE, payload)\n}\n\n/**\n * transformer authenticate data to storage\n * @param response\n * @return {{name: *, id: *, avatar: *, accessToken: *, email: *}}\n */\nconst transformerAuthenticate = (response) => {\n  return {\n    id: response.id,\n    accessToken: response.access_token,\n    email: response.email,\n    username: response.username,\n    role: response.role,\n    canReferent: response.can_refer,\n    refCode: response.ref_code || '',\n  }\n}\n"]}]}