{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/DetectQuantityForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/DetectQuantityForm.vue","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapState, mapMutations } from 'vuex';\nimport { cloneDeep, isObjectDiff, asyncFilter } from '@core/utils';\nimport ConditionItem from './components/ConditionItem';\nimport { types } from '../constant';\nimport { FETCH_ORDER_MAPPINGS } from '../store';\nexport default {\n  name: 'SettingDetectQuantity',\n  components: {\n    ConditionItem: ConditionItem\n  },\n  data: function data() {\n    return {\n      form: {\n        disjunctive: true,\n        product_type_id: 0,\n        type: types.quantity,\n        rules: [{\n          column: 'title',\n          relation: 'match',\n          condition: ''\n        }]\n      },\n      initialForm: {},\n      isShowUnsavedBar: false,\n      isFetching: false,\n      isSaving: false\n    };\n  },\n  computed: _objectSpread({}, mapState('orderMapping', {\n    quantityMappingState: function quantityMappingState(state) {\n      return state.orderMapping;\n    },\n    quantityMappingListState: function quantityMappingListState(state) {\n      return state.orderMappingsList;\n    }\n  })),\n  watch: {\n    form: {\n      handler: function handler(val) {\n        this.isShowUnsavedBar = isObjectDiff(val, this.initialForm);\n      },\n      deep: true\n    },\n    initialForm: {\n      handler: function handler(val) {\n        this.isShowUnsavedBar = isObjectDiff(val, this.form);\n      },\n      deep: true\n    }\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions('orderMapping', {\n    fetchOrderMapping: 'fetchOrderMapping',\n    fetchOrderMappingList: 'fetchOrderMappingList',\n    createOrUpdateOrderMapping: 'createOrUpdateOrderMapping'\n  })), mapMutations('orderMapping', {\n    updateStateOrderMappings: FETCH_ORDER_MAPPINGS\n  })), {}, {\n    fetch: function () {\n      var _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isFetching = true;\n                _context.next = 3;\n                return this.fetchOrderMappingList({\n                  type: types.quantity\n                });\n\n              case 3:\n                result = _context.sent;\n\n                if (!(result && result.success && this.quantityMappingListState.length > 0)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 7;\n                return this.fetchOrderMapping({\n                  type: types.quantity,\n                  id: this.quantityMappingListState[0].id\n                });\n\n              case 7:\n                result = _context.sent;\n\n                if (result && result.success) {\n                  this.form = cloneDeep(this.quantityMappingState);\n                }\n\n              case 9:\n                this.initialForm = cloneDeep(this.form);\n                this.isFetching = false;\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetch() {\n        return _fetch.apply(this, arguments);\n      }\n\n      return fetch;\n    }(),\n    removeCondition: function removeCondition(index) {\n      this.form.rules.splice(index, 1);\n    },\n    changeCondition: function changeCondition(index, event) {\n      this.$set(this.form.rules, index, event);\n    },\n    addCondition: function addCondition() {\n      var rules = this.form.rules;\n      rules.push(_objectSpread(_objectSpread({}, rules[rules.length - 1]), {}, {\n        condition: ''\n      }));\n    },\n    discard: function discard() {\n      this.form = cloneDeep(this.initialForm);\n    },\n    save: function () {\n      var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var filtered, isConditionsValid, result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.$refs.conditions && this.$refs.conditions.length)) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                _context3.next = 3;\n                return asyncFilter(this.$refs.conditions, /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(c) {\n                    var isValid;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.next = 2;\n                            return c.$validator.validateAll();\n\n                          case 2:\n                            isValid = _context2.sent;\n                            return _context2.abrupt(\"return\", isValid);\n\n                          case 4:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n\n              case 3:\n                filtered = _context3.sent;\n                isConditionsValid = filtered.length === this.$refs.conditions.length;\n\n                if (isConditionsValid) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 7:\n                this.isSaving = true;\n                _context3.next = 10;\n                return this.createOrUpdateOrderMapping({\n                  type: types.quantity,\n                  payload: cloneDeep(this.form)\n                });\n\n              case 10:\n                result = _context3.sent;\n\n                if (!(result && result.success)) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                this.$toast.open({\n                  type: 'success',\n                  message: 'Saved successfully'\n                });\n                _context3.next = 15;\n                return this.fetch();\n\n              case 15:\n                _context3.next = 18;\n                break;\n\n              case 17:\n                this.$toast.open({\n                  type: 'error',\n                  message: result.message || 'Something went wrong. Please try again later'\n                });\n\n              case 18:\n                this.isSaving = false;\n\n              case 19:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function save() {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }()\n  }),\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    this.updateStateOrderMappings([]);\n    next();\n  },\n  created: function created() {\n    this.fetch();\n  }\n};",null]}