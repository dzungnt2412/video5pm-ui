{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/fulfillment/views/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/fulfillment/views/List.vue","mtime":1603898990380},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport EmptySearchResult from '@components/shared/EmptySearchResult';\nimport { mapState, mapActions } from 'vuex';\nimport mixinRoute from '@core/mixins/route';\nimport { VclTable } from 'vue-content-loading';\nimport mixinTable from '@core/mixins/table';\nimport mixinExportOrder from '@/packages/container/mixins/export-file';\nimport { FULLFILL_EXPORT_BUCKET } from '@core/constants/storage';\nexport default {\n  name: 'FulfillmentList',\n  mixins: [mixinRoute, mixinTable, mixinExportOrder],\n  components: {\n    EmptySearchResult: EmptySearchResult,\n    VclTable: VclTable\n  },\n  data: function data() {\n    return {\n      isFetching: false,\n      filter: {\n        page: 1,\n        search: '',\n        limit: 50,\n        user_id: 0\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState('fulfillment', {\n    fulfillments: function fulfillments(state) {\n      return state.fulfillments;\n    },\n    count: function count(state) {\n      return state.count;\n    },\n    download: function download(state) {\n      return state.download;\n    }\n  })),\n  created: function created() {\n    this.filter = this.getRouteQuery();\n    this.fetch();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions('fulfillment', ['fetchFulfillments', 'countFulfillments', 'exportFulfillments'])), {}, {\n    fetch: function () {\n      var _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isFetching = true;\n                this.handleUpdateRouteQuery();\n                _context.next = 4;\n                return this.fetchFulfillments(this.filter);\n\n              case 4:\n                result = _context.sent;\n\n                if (!result.success) {\n                  this.$notify({\n                    title: 'Alert',\n                    type: 'error',\n                    text: 'Server Error'\n                  });\n                }\n\n                this.isFetching = false;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetch() {\n        return _fetch.apply(this, arguments);\n      }\n\n      return fetch;\n    }(),\n    changeDate: function changeDate(date) {\n      this.date = date;\n      this.filter = _objectSpread(_objectSpread({}, this.filter), {}, {\n        create_start_date: date.startDate.toISOString().split('T')[0],\n        create_end_date: date.endDate.toISOString().split('T')[0]\n      });\n    },\n    exportExcel: function () {\n      var _exportExcel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var timePerDay, endDate, startDate, days, result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(!this.filter.create_end_date || !this.filter.create_start_date)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$notify({\n                  title: 'Alert',\n                  type: 'error',\n                  text: 'Please choose the time to export'\n                }));\n\n              case 2:\n                timePerDay = 24 * 60 * 60 * 1000;\n                endDate = new Date(this.filter.create_end_date);\n                startDate = new Date(this.filter.create_start_date);\n                days = (endDate - startDate) / timePerDay; // 1 day\n\n                if (!(days > 7)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$notify({\n                  title: 'Alert',\n                  type: 'error',\n                  text: 'Export : Max 7 days'\n                }));\n\n              case 8:\n                this.handleUpdateRouteQuery();\n                _context2.next = 11;\n                return this.exportFulfillments(this.filter);\n\n              case 11:\n                result = _context2.sent;\n                this.exportFile(result, \"fullfill-export.csv\", FULLFILL_EXPORT_BUCKET);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function exportExcel() {\n        return _exportExcel.apply(this, arguments);\n      }\n\n      return exportExcel;\n    }()\n  }),\n  watch: {\n    filter: {\n      handler: function handler() {\n        this.fetch();\n      },\n      deep: true\n    }\n  }\n};",{"version":3,"sources":["List.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"page\">\n    <div class=\"page-content\">\n      <button\n        class=\"btn btn-primary mb-25 mr-25 float-right\"\n        @click=\"exportExcel\"\n        >Export</button\n      >\n      <div style=\"clear:both\"></div>\n      <div class=\"row\">\n        <div class=\"col-11\">\n          <p-datepicker\n            placeholder=\"Tìm kiếm ticket theo Mã đơn hàng/Tiêu đề\"\n            prefixIcon=\"search\"\n            class=\"mb-2 taf\"\n            type=\"search\"\n            style=\"width:100%\"\n            @update=\"changeDate\"\n          ></p-datepicker>\n        </div>\n        <div class=\"col-1\">\n          <p-button icon=\"search\" @click=\"fetch\">Search</p-button>\n        </div>\n      </div>\n    </div>\n    <div class=\"page-content container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-xl-12\">\n          <VclTable class=\"my-20\" v-if=\"isFetching\"></VclTable>\n          <template v-else-if=\"fulfillments.length\">\n            <div class=\"table-responsive-xl\">\n              <table class=\"table table-hover table-border\">\n                <thead>\n                  <tr>\n                    <th>Order Number</th>\n                    <th>Tracking Company</th>\n                    <th>Tracking Number</th>\n                    <th>Tracking URL</th>\n                    <th class=\"text-right\">Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"(item, index) in fulfillments\" :key=\"index\">\n                    <td>{{ item.order ? item.order.ref_id : '' }}</td>\n                    <td>{{ item.tracking_company }}</td>\n                    <td>{{ item.tracking_number }}</td>\n                    <td>\n                      <a :href=\"item.tracking_url\" target=\"_blank\">\n                        {{ item.tracking_url }}\n                      </a>\n                    </td>\n                    <td class=\"text-right\">{{\n                      item.created_at | datetime('dd/MM/yyyy HH:mm')\n                    }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <span>{{ paginationLabel }}</span>\n              <p-pagination\n                :total=\"count\"\n                :perPage=\"filter.limit\"\n                :current.sync=\"filter.page\"\n                size=\"sm\"\n              ></p-pagination>\n            </div>\n          </template>\n          <EmptySearchResult\n            v-else\n            title=\"Không tìm thấy fulfillment\"\n          ></EmptySearchResult>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport EmptySearchResult from '@components/shared/EmptySearchResult'\nimport { mapState, mapActions } from 'vuex'\nimport mixinRoute from '@core/mixins/route'\nimport { VclTable } from 'vue-content-loading'\nimport mixinTable from '@core/mixins/table'\nimport mixinExportOrder from '@/packages/container/mixins/export-file'\nimport { FULLFILL_EXPORT_BUCKET } from '@core/constants/storage'\nexport default {\n  name: 'FulfillmentList',\n  mixins: [mixinRoute, mixinTable, mixinExportOrder],\n  components: {\n    EmptySearchResult,\n    VclTable,\n  },\n  data: () => ({\n    isFetching: false,\n    filter: {\n      page: 1,\n      search: '',\n      limit: 50,\n      user_id: 0,\n    },\n  }),\n  computed: {\n    ...mapState('fulfillment', {\n      fulfillments: (state) => state.fulfillments,\n      count: (state) => state.count,\n      download: (state) => state.download,\n    }),\n  },\n  created() {\n    this.filter = this.getRouteQuery()\n\n    this.fetch()\n  },\n  methods: {\n    ...mapActions('fulfillment', [\n      'fetchFulfillments',\n      'countFulfillments',\n      'exportFulfillments',\n    ]),\n\n    async fetch() {\n      this.isFetching = true\n      this.handleUpdateRouteQuery()\n\n      const result = await this.fetchFulfillments(this.filter)\n\n      if (!result.success) {\n        this.$notify({\n          title: 'Alert',\n          type: 'error',\n          text: 'Server Error',\n        })\n      }\n\n      this.isFetching = false\n    },\n\n    changeDate(date) {\n      this.date = date\n\n      this.filter = {\n        ...this.filter,\n        create_start_date: date.startDate.toISOString().split('T')[0],\n        create_end_date: date.endDate.toISOString().split('T')[0],\n      }\n    },\n    async exportExcel() {\n      if (!this.filter.create_end_date || !this.filter.create_start_date) {\n        return this.$notify({\n          title: 'Alert',\n          type: 'error',\n          text: 'Please choose the time to export',\n        })\n      }\n\n      const timePerDay = 24 * 60 * 60 * 1000\n      const endDate = new Date(this.filter.create_end_date)\n      const startDate = new Date(this.filter.create_start_date)\n      const days = (endDate - startDate) / timePerDay // 1 day\n\n      if (days > 7) {\n        return this.$notify({\n          title: 'Alert',\n          type: 'error',\n          text: 'Export : Max 7 days',\n        })\n      }\n\n      this.handleUpdateRouteQuery()\n\n      const result = await this.exportFulfillments(this.filter)\n\n      this.exportFile(result, `fullfill-export.csv`, FULLFILL_EXPORT_BUCKET)\n    },\n  },\n  watch: {\n    filter: {\n      handler: function() {\n        this.fetch()\n      },\n      deep: true,\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/packages/fulfillment/views"}]}