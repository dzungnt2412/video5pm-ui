{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/container/views/ContainerList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/container/views/ContainerList.vue","mtime":1604203859953},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { VclTable } from 'vue-content-loading';\nimport { mapState, mapActions } from 'vuex';\nimport mixinRoute from '@core/mixins/route';\nimport mixinTable from '@core/mixins/table';\nimport { FETCH_CONTAINERS } from '../store/types';\nimport { CONTAINER_STATUS } from '../constants';\nimport EmptySearchResult from '@components/shared/EmptySearchResult';\nimport StatusTab from '@components/shared/StatusTab';\nimport mixinContainerExport from '@/packages/container/mixins/container-export';\nexport default {\n  name: 'ContainerList',\n  mixins: [mixinRoute, mixinTable, mixinContainerExport],\n  components: {\n    StatusTab: StatusTab,\n    VclTable: VclTable,\n    EmptySearchResult: EmptySearchResult\n  },\n  computed: _objectSpread(_objectSpread({}, mapState('container', {\n    count: function count(state) {\n      return state.containerCount;\n    },\n    containers: function containers(state) {\n      return state.containers;\n    }\n  })), {}, {\n    containerStatus: function containerStatus() {\n      return CONTAINER_STATUS;\n    },\n    notFoundImage: function notFoundImage() {\n      return require('@assets/img/notfound.svg');\n    }\n  }),\n  data: function data() {\n    return {\n      isFetching: true,\n      result: {},\n      actions: {}\n    };\n  },\n  created: function created() {\n    this.filter = this.getRouteQuery();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions('container', [FETCH_CONTAINERS])), {}, {\n    handleFetchContainers: function () {\n      var _handleFetchContainers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isFetching = true;\n                this.handleUpdateRouteQuery();\n                _context.next = 4;\n                return this.fetchContainers(this.filter);\n\n              case 4:\n                this.result = _context.sent;\n                this.isFetching = false;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleFetchContainers() {\n        return _handleFetchContainers.apply(this, arguments);\n      }\n\n      return handleFetchContainers;\n    }(),\n    handleActionItem: function handleActionItem() {}\n  }),\n  watch: {\n    filter: {\n      handler: function handler() {\n        this.handleFetchContainers();\n      },\n      deep: true\n    }\n  }\n};",{"version":3,"sources":["ContainerList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA,SAAA,QAAA,QAAA,qBAAA;AACA,SAAA,QAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,UAAA,MAAA,oBAAA;AACA,OAAA,UAAA,MAAA,oBAAA;AACA,SAAA,gBAAA,QAAA,gBAAA;AACA,SAAA,gBAAA,QAAA,cAAA;AACA,OAAA,iBAAA,MAAA,sCAAA;AACA,OAAA,SAAA,MAAA,8BAAA;AACA,OAAA,oBAAA,MAAA,8CAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,oBAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,QAAA,EAAA,QAFA;AAGA,IAAA,iBAAA,EAAA;AAHA,GAHA;AAQA,EAAA,QAAA,kCACA,QAAA,CAAA,WAAA,EAAA;AACA,IAAA,KAAA,EAAA,eAAA,KAAA;AAAA,aAAA,KAAA,CAAA,cAAA;AAAA,KADA;AAEA,IAAA,UAAA,EAAA,oBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,UAAA;AAAA;AAFA,GAAA,CADA;AAKA,IAAA,eALA,6BAKA;AACA,aAAA,gBAAA;AACA,KAPA;AAQA,IAAA,aARA,2BAQA;AACA,aAAA,OAAA,CAAA,0BAAA,CAAA;AACA;AAVA,IARA;AAoBA,EAAA,IApBA,kBAoBA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,IADA;AAEA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAAA;AAKA,GA1BA;AA2BA,EAAA,OA3BA,qBA2BA;AACA,SAAA,MAAA,GAAA,KAAA,aAAA,EAAA;AACA,GA7BA;AA8BA,EAAA,OAAA,kCACA,UAAA,CAAA,WAAA,EAAA,CAAA,gBAAA,CAAA,CADA;AAGA,IAAA,qBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,qBAAA,UAAA,GAAA,IAAA;AACA,qBAAA,sBAAA;AALA;AAAA,uBAMA,KAAA,eAAA,CAAA,KAAA,MAAA,CANA;;AAAA;AAMA,qBAAA,MANA;AAOA,qBAAA,UAAA,GAAA,KAAA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAUA,IAAA,gBAVA,8BAUA,CAAA;AAVA,IA9BA;AA0CA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,OAAA,EAAA,mBAAA;AACA,aAAA,qBAAA;AACA,OAHA;AAIA,MAAA,IAAA,EAAA;AAJA;AADA;AA1CA,CAAA","sourcesContent":["<template>\n  <div class=\"order-list-page page\">\n    <div class=\"page-content container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-xl-12\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <status-tab v-model=\"filter.status\" :status=\"containerStatus\" />\n              <p-input\n                placeholder=\"Tìm kiếm delivery order theo ID\"\n                prefixIcon=\"search\"\n                class=\"mb-2\"\n                type=\"username\"\n                :value=\"filter.search\"\n                @keyup.enter=\"handleSearch\"\n              >\n                <template slot=\"append\">\n                  <p-button\n                    type=\"default\"\n                    icon=\"close\"\n                    v-if=\"filter.search\"\n                    @click=\"clearSearch\"\n                  ></p-button>\n                </template>\n              </p-input>\n              <VclTable class=\"my-20\" v-if=\"isFetching\"> </VclTable>\n              <template v-else-if=\"containers.length\">\n                <div class=\"table-responsive\">\n                  <table class=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th width=\"80\">ID</th>\n                        <th>Tổng tiền</th>\n                        <th>Ngày</th>\n                        <th>Trạng thái</th>\n                        <th class=\"text-right\">Chức năng</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"(item, index) in containers\" :key=\"index\">\n                        <td width=\"80\">\n                          <router-link\n                            class=\"text-no-underline\"\n                            :to=\"{\n                              name: 'container-view',\n                              params: { id: item.id },\n                            }\"\n                          >\n                            {{ item.id }}\n                          </router-link>\n                        </td>\n                        <td>\n                          <span v-if=\"item.status === 'pending'\">\n                            Pending\n                          </span>\n                          <span v-else>\n                            {{ item.total_amount | formatPrice }}\n                          </span>\n                        </td>\n                        <td>\n                          {{ item.created_at | date }}\n                        </td>\n                        <td>\n                          <span v-status:status=\"item.status\"></span>\n                        </td>\n                        <td class=\"text-right\">\n                          <p-popover\n                            class=\"mx-10\"\n                            placement=\"top\"\n                            trigger=\"hover\"\n                            type=\"dark\"\n                            content=\"Xem chi tiết\"\n                            compact\n                          >\n                            <router-link\n                              slot=\"reference\"\n                              :to=\"{\n                                name: 'container-view',\n                                params: { id: item.id },\n                              }\"\n                            >\n                              <p-icon name=\"eye\" iconPack=\"md\"></p-icon>\n                            </router-link>\n                          </p-popover>\n                          <p-popover\n                            class=\"mx-10\"\n                            placement=\"top\"\n                            trigger=\"hover\"\n                            type=\"dark\"\n                            content=\"Tải xuống\"\n                            compact\n                          >\n                            <a\n                              slot=\"reference\"\n                              href=\"#\"\n                              @click.prevent=\"handleExportContainer(item.id)\"\n                            >\n                              <p-icon\n                                name=\"long-arrow-down \"\n                                iconPack=\"md\"\n                              ></p-icon>\n                            </a>\n                          </p-popover>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div class=\"d-flex justify-content-between align-items-center\">\n                  <span>\n                    {{ paginationLabel }}\n                  </span>\n                  <p-pagination\n                    :total=\"count\"\n                    :perPage=\"filter.limit\"\n                    :current.sync=\"filter.page\"\n                    size=\"sm\"\n                  >\n                  </p-pagination>\n                </div>\n              </template>\n              <template v-else>\n                <EmptySearchResult\n                  title=\"Không tìm thấy delivery order\"\n                ></EmptySearchResult>\n              </template>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { VclTable } from 'vue-content-loading'\nimport { mapState, mapActions } from 'vuex'\nimport mixinRoute from '@core/mixins/route'\nimport mixinTable from '@core/mixins/table'\nimport { FETCH_CONTAINERS } from '../store/types'\nimport { CONTAINER_STATUS } from '../constants'\nimport EmptySearchResult from '@components/shared/EmptySearchResult'\nimport StatusTab from '@components/shared/StatusTab'\nimport mixinContainerExport from '@/packages/container/mixins/container-export'\n\nexport default {\n  name: 'ContainerList',\n  mixins: [mixinRoute, mixinTable, mixinContainerExport],\n  components: {\n    StatusTab,\n    VclTable,\n    EmptySearchResult,\n  },\n  computed: {\n    ...mapState('container', {\n      count: (state) => state.containerCount,\n      containers: (state) => state.containers,\n    }),\n    containerStatus() {\n      return CONTAINER_STATUS\n    },\n    notFoundImage() {\n      return require('@assets/img/notfound.svg')\n    },\n  },\n  data() {\n    return {\n      isFetching: true,\n      result: {},\n      actions: {},\n    }\n  },\n  created() {\n    this.filter = this.getRouteQuery()\n  },\n  methods: {\n    ...mapActions('container', [FETCH_CONTAINERS]),\n\n    async handleFetchContainers() {\n      this.isFetching = true\n      this.handleUpdateRouteQuery()\n      this.result = await this.fetchContainers(this.filter)\n      this.isFetching = false\n    },\n\n    handleActionItem() {},\n  },\n  watch: {\n    filter: {\n      handler: function() {\n        this.handleFetchContainers()\n      },\n      deep: true,\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/packages/container/views"}]}