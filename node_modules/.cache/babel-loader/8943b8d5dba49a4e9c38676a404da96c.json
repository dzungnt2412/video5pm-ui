{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/core/services/http.js","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/core/services/http.js","mtime":1603898990376},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1597736267502}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport isEmpty from 'lodash/isEmpty';\nimport HttpError from '@core/errors/http-handler';\nimport { isString } from '@core/utils/type';\nimport AuthService from '@core/services/auth';\nimport { SERVER_ERROR_MESSAGE, RESPONSE_TYPE_BLOB, RESPONSE_TYPE_JSON } from '@core/constants/http';\n/**\n * Responsible for all HTTP requests.\n */\n\nexport var http = {\n  // eslint-disable-next-line\n  request: function () {\n    var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(method, url, data) {\n      var options,\n          apiUrl,\n          type,\n          init,\n          response,\n          _data,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n              _context.prev = 1;\n              apiUrl = url.indexOf('http') === 0 ? url : \"\".concat(process.env.VUE_APP_BASE_API_ENDPOINT).concat(url);\n              type = isString(options) ? options : options.type || RESPONSE_TYPE_JSON;\n              init = {\n                method: method.toUpperCase(),\n                headers: Object.assign({}, options.headers || {})\n              };\n\n              if (AuthService.isAuthenticated()) {\n                init.headers['Authorization'] = \"Bearer \".concat(AuthService.getAccessToken());\n              }\n\n              if (!isEmpty(data)) {\n                init.body = JSON.stringify(data);\n              }\n\n              if (data instanceof ArrayBuffer || data instanceof FormData) {\n                init.body = data;\n              }\n\n              _context.next = 10;\n              return fetch(apiUrl, init);\n\n            case 10:\n              response = _context.sent;\n\n              if (response.ok) {\n                _context.next = 25;\n                break;\n              }\n\n              HttpError.handle(response);\n              _data = {};\n              _context.prev = 14;\n              _context.next = 17;\n              return response.json();\n\n            case 17:\n              _data = _context.sent;\n              _context.next = 23;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](14);\n              _data = {};\n\n            case 23:\n              _data.errorMessage = _data.message || _data.error || SERVER_ERROR_MESSAGE;\n              return _context.abrupt(\"return\", Object.assign({\n                success: false,\n                error: true,\n                requestError: true,\n                statusCode: response.status\n              }, _data));\n\n            case 25:\n              if (!(type === RESPONSE_TYPE_JSON)) {\n                _context.next = 29;\n                break;\n              }\n\n              _context.next = 28;\n              return response.json();\n\n            case 28:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 29:\n              if (!(type === RESPONSE_TYPE_BLOB)) {\n                _context.next = 33;\n                break;\n              }\n\n              _context.next = 32;\n              return response.blob();\n\n            case 32:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 33:\n              _context.next = 35;\n              return response.text();\n\n            case 35:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 38:\n              _context.prev = 38;\n              _context.t1 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", {\n                success: false,\n                error: true,\n                requestError: true,\n                errorMessage: SERVER_ERROR_MESSAGE\n              });\n\n            case 41:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 38], [14, 20]]);\n    }));\n\n    function request(_x, _x2, _x3) {\n      return _request.apply(this, arguments);\n    }\n\n    return request;\n  }(),\n  get: function get(url, options) {\n    return this.request('get', url, {}, options);\n  },\n  post: function post(url, data, options) {\n    return this.request('post', url, data, options);\n  },\n  put: function put(url, data, options) {\n    return this.request('put', url, data, options);\n  },\n  delete: function _delete(url) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var options = arguments.length > 2 ? arguments[2] : undefined;\n    return this.request('delete', url, data, options);\n  }\n};\nexport default http;",{"version":3,"sources":["/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/core/services/http.js"],"names":["isEmpty","HttpError","isString","AuthService","SERVER_ERROR_MESSAGE","RESPONSE_TYPE_BLOB","RESPONSE_TYPE_JSON","http","request","method","url","data","options","apiUrl","indexOf","process","env","VUE_APP_BASE_API_ENDPOINT","type","init","toUpperCase","headers","Object","assign","isAuthenticated","getAccessToken","body","JSON","stringify","ArrayBuffer","FormData","fetch","response","ok","handle","json","errorMessage","message","error","success","requestError","statusCode","status","blob","text","get","post","put","delete"],"mappings":"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","sourcesContent":["import isEmpty from 'lodash/isEmpty'\nimport HttpError from '@core/errors/http-handler'\nimport { isString } from '@core/utils/type'\nimport AuthService from '@core/services/auth'\n\nimport {\n  SERVER_ERROR_MESSAGE,\n  RESPONSE_TYPE_BLOB,\n  RESPONSE_TYPE_JSON,\n} from '@core/constants/http'\n\n/**\n * Responsible for all HTTP requests.\n */\nexport const http = {\n  // eslint-disable-next-line\n  async request(method, url, data, options = {}) {\n    try {\n      const apiUrl =\n        url.indexOf('http') === 0\n          ? url\n          : `${process.env.VUE_APP_BASE_API_ENDPOINT}${url}`\n      const type = isString(options)\n        ? options\n        : options.type || RESPONSE_TYPE_JSON\n\n      const init = {\n        method: method.toUpperCase(),\n        headers: Object.assign({}, options.headers || {}),\n      }\n\n      if (AuthService.isAuthenticated()) {\n        init.headers['Authorization'] = `Bearer ${AuthService.getAccessToken()}`\n      }\n\n      if (!isEmpty(data)) {\n        init.body = JSON.stringify(data)\n      }\n\n      if (data instanceof ArrayBuffer || data instanceof FormData) {\n        init.body = data\n      }\n\n      let response\n\n      response = await fetch(apiUrl, init)\n\n      if (!response.ok) {\n        HttpError.handle(response)\n        let data = {}\n        try {\n          data = await response.json()\n        } catch (error) {\n          data = {}\n        }\n\n        data.errorMessage = data.message || data.error || SERVER_ERROR_MESSAGE\n\n        return Object.assign(\n          {\n            success: false,\n            error: true,\n            requestError: true,\n            statusCode: response.status,\n          },\n          data\n        )\n      }\n\n      if (type === RESPONSE_TYPE_JSON) {\n        return await response.json()\n      }\n\n      if (type === RESPONSE_TYPE_BLOB) {\n        return await response.blob()\n      }\n\n      return await response.text()\n    } catch (e) {\n      return {\n        success: false,\n        error: true,\n        requestError: true,\n        errorMessage: SERVER_ERROR_MESSAGE,\n      }\n    }\n  },\n  get(url, options) {\n    return this.request('get', url, {}, options)\n  },\n  post(url, data, options) {\n    return this.request('post', url, data, options)\n  },\n  put(url, data, options) {\n    return this.request('put', url, data, options)\n  },\n  delete(url, data = {}, options) {\n    return this.request('delete', url, data, options)\n  },\n}\n\nexport default http\n"]}]}