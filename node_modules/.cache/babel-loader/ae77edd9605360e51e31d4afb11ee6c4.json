{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/order-mapping/views/ProductMappingForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/order-mapping/views/ProductMappingForm.vue","mtime":1603898990384},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@babel/runtime/regenerator\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapState } from 'vuex';\nimport { cloneDeep, isObjectDiff, asyncFilter } from '@core/utils';\nimport ConditionItem from './components/ConditionItem';\nimport { types } from '../constant';\nexport default {\n  name: 'ProductMappingForm',\n  components: {\n    ConditionItem: ConditionItem\n  },\n  data: function data() {\n    return {\n      mode: 'new',\n      form: {\n        disjunctive: true,\n        product_type_id: null,\n        type: types.product_type,\n        rules: [{\n          column: 'title',\n          relation: 'contain',\n          condition: ''\n        }]\n      },\n      initialForm: {},\n      isShowUnsavedBar: false,\n      isFetching: false,\n      isSaving: false,\n      isDeleting: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState('orderMapping', {\n    productMappingState: function productMappingState(state) {\n      return state.orderMapping;\n    },\n    products: function products(state) {\n      return state.productTypes;\n    }\n  })), {}, {\n    pageTitle: function pageTitle() {\n      return this.mode === 'new' ? 'Create product mapping rule' : 'Update product mapping rule';\n    }\n  }),\n  watch: {\n    form: {\n      handler: function handler(val) {\n        this.isShowUnsavedBar = isObjectDiff(val, this.initialForm);\n      },\n      deep: true\n    },\n    initialForm: {\n      handler: function handler(val) {\n        this.isShowUnsavedBar = isObjectDiff(val, this.form);\n      },\n      deep: true\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions('orderMapping', {\n    createOrUpdateOrderMapping: 'createOrUpdateOrderMapping',\n    fetchOrderMapping: 'fetchOrderMapping',\n    deleteOrderMapping: 'deleteOrderMapping',\n    fetchProductTypes: 'fetchProductTypes'\n  })), {}, {\n    removeCondition: function removeCondition(index) {\n      this.form.rules.splice(index, 1);\n    },\n    changeCondition: function changeCondition(index, event) {\n      this.$set(this.form.rules, index, event);\n    },\n    addCondition: function addCondition() {\n      var rules = this.form.rules;\n      rules.push(_objectSpread(_objectSpread({}, rules[rules.length - 1]), {}, {\n        condition: ''\n      }));\n    },\n    fetch: function () {\n      var _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var promises, _yield$Promise$all, _yield$Promise$all2, res2;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isFetching = true;\n                promises = [this.fetchProductTypes()];\n\n                if (this.$route.params.id && this.$route.params.id !== 'new') {\n                  this.mode = 'edit';\n                  promises.push(this.fetchOrderMapping({\n                    type: types.product_type,\n                    id: +this.$route.params.id\n                  }));\n                }\n\n                _context.next = 5;\n                return Promise.all(promises);\n\n              case 5:\n                _yield$Promise$all = _context.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n                res2 = _yield$Promise$all2[1];\n\n                if (res2 && res2.success) {\n                  this.form = cloneDeep(this.productMappingState);\n                }\n\n                this.initialForm = cloneDeep(this.form);\n                this.isFetching = false;\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetch() {\n        return _fetch.apply(this, arguments);\n      }\n\n      return fetch;\n    }(),\n    discard: function discard() {\n      this.form = cloneDeep(this.initialForm);\n    },\n    showConfirmDelete: function showConfirmDelete() {\n      var _this = this;\n\n      this.$dialog.confirm({\n        title: \"Delete product mapping?\",\n        message: \"Are you sure you want to delete this product mapping?\",\n        confirmText: 'Delete',\n        onConfirm: function onConfirm() {\n          return _this.delete();\n        },\n        type: 'danger'\n      });\n    },\n    save: function () {\n      var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var validate, isConditionsValid, filtered;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.$validator.validateAll();\n\n              case 2:\n                validate = _context3.sent;\n                isConditionsValid = true;\n\n                if (!(this.$refs.conditions && this.$refs.conditions.length)) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                _context3.next = 7;\n                return asyncFilter(this.$refs.conditions, /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(c) {\n                    var isValid;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.next = 2;\n                            return c.$validator.validateAll();\n\n                          case 2:\n                            isValid = _context2.sent;\n                            return _context2.abrupt(\"return\", isValid);\n\n                          case 4:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n\n              case 7:\n                filtered = _context3.sent;\n                isConditionsValid = filtered.length === this.$refs.conditions.length;\n\n              case 9:\n                if (!(!validate || !isConditionsValid)) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 11:\n                this.isSaving = true;\n\n                if (!(this.mode === 'new')) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                _context3.next = 15;\n                return this.create();\n\n              case 15:\n                _context3.next = 19;\n                break;\n\n              case 17:\n                _context3.next = 19;\n                return this.update();\n\n              case 19:\n                this.isSaving = false;\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function save() {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }(),\n    create: function () {\n      var _create = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.createOrUpdateOrderMapping({\n                  type: types.product_type,\n                  payload: cloneDeep(this.form)\n                });\n\n              case 2:\n                response = _context4.sent;\n\n                if (response.success) {\n                  this.$toast.open({\n                    type: 'success',\n                    message: 'Your product mapping was created'\n                  });\n                  this.$router.push({\n                    name: 'product-mapping-update',\n                    params: {\n                      id: response.id\n                    }\n                  });\n                } else {\n                  this.$toast.open({\n                    type: 'error',\n                    message: response.message || 'Something went wrong. Please try again later'\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function create() {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }(),\n    update: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.createOrUpdateOrderMapping({\n                  type: types.product_type,\n                  payload: cloneDeep(this.form)\n                });\n\n              case 2:\n                response = _context5.sent;\n\n                if (!response.success) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                this.$toast.open({\n                  type: 'success',\n                  message: 'Your product mapping was updated'\n                });\n                _context5.next = 7;\n                return this.fetch();\n\n              case 7:\n                _context5.next = 10;\n                break;\n\n              case 9:\n                this.$toast.open({\n                  type: 'error',\n                  message: response.message || 'Something went wrong. Please try again later'\n                });\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function update() {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }(),\n    delete: function () {\n      var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.isDeleting = true;\n                _context6.next = 3;\n                return this.deleteOrderMapping({\n                  type: types.product_type,\n                  id: this.productMappingState.id\n                });\n\n              case 3:\n                response = _context6.sent;\n\n                if (response.success) {\n                  this.$toast.open({\n                    type: 'success',\n                    message: 'Your product mapping was deleted'\n                  });\n                  this.$router.push({\n                    name: 'product-mapping-list'\n                  });\n                } else {\n                  this.$toast.open({\n                    type: 'error',\n                    message: response.message || 'Something went wrong. Please try again later'\n                  });\n                }\n\n                this.isDeleting = false;\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function _delete() {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }()\n  }),\n  created: function created() {\n    this.fetch();\n  }\n};",{"version":3,"sources":["ProductMappingForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AACA,SAAA,SAAA,EAAA,YAAA,EAAA,WAAA,QAAA,aAAA;AACA,OAAA,aAAA,MAAA,4BAAA;AACA,SAAA,KAAA,QAAA,aAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AACA,QAAA,WAAA,EAAA,IADA;AAEA,QAAA,eAAA,EAAA,IAFA;AAGA,QAAA,IAAA,EAAA,KAAA,CAAA,YAHA;AAIA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,MAAA,EAAA,OADA;AAEA,UAAA,QAAA,EAAA,SAFA;AAGA,UAAA,SAAA,EAAA;AAHA,SADA;AAJA,OAFA;AAcA,MAAA,WAAA,EAAA,EAdA;AAeA,MAAA,gBAAA,EAAA,KAfA;AAgBA,MAAA,UAAA,EAAA,KAhBA;AAiBA,MAAA,QAAA,EAAA,KAjBA;AAkBA,MAAA,UAAA,EAAA;AAlBA,KAAA;AAoBA,GA1BA;AA2BA,EAAA,QAAA,kCACA,QAAA,CAAA,cAAA,EAAA;AACA,IAAA,mBAAA,EAAA,6BAAA,KAAA;AAAA,aAAA,KAAA,CAAA,YAAA;AAAA,KADA;AAEA,IAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,YAAA;AAAA;AAFA,GAAA,CADA;AAKA,IAAA,SALA,uBAKA;AACA,aAAA,KAAA,IAAA,KAAA,KAAA,GACA,6BADA,GAEA,6BAFA;AAGA;AATA,IA3BA;AAsCA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,OADA,mBACA,GADA,EACA;AACA,aAAA,gBAAA,GAAA,YAAA,CAAA,GAAA,EAAA,KAAA,WAAA,CAAA;AACA,OAHA;AAIA,MAAA,IAAA,EAAA;AAJA,KADA;AAOA,IAAA,WAAA,EAAA;AACA,MAAA,OADA,mBACA,GADA,EACA;AACA,aAAA,gBAAA,GAAA,YAAA,CAAA,GAAA,EAAA,KAAA,IAAA,CAAA;AACA,OAHA;AAIA,MAAA,IAAA,EAAA;AAJA;AAPA,GAtCA;AAoDA,EAAA,OAAA,kCACA,UAAA,CAAA,cAAA,EAAA;AACA,IAAA,0BAAA,EAAA,4BADA;AAEA,IAAA,iBAAA,EAAA,mBAFA;AAGA,IAAA,kBAAA,EAAA,oBAHA;AAIA,IAAA,iBAAA,EAAA;AAJA,GAAA,CADA;AAOA,IAAA,eAPA,2BAOA,KAPA,EAOA;AACA,WAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,KATA;AAUA,IAAA,eAVA,2BAUA,KAVA,EAUA,KAVA,EAUA;AACA,WAAA,IAAA,CAAA,KAAA,IAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA;AACA,KAZA;AAaA,IAAA,YAbA,0BAaA;AACA,UAAA,KAAA,GAAA,KAAA,IAAA,CAAA,KAAA;AACA,MAAA,KAAA,CAAA,IAAA,iCACA,KAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA,CADA;AAEA,QAAA,SAAA,EAAA;AAFA;AAIA,KAnBA;AAoBA,IAAA,KApBA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAqBA,qBAAA,UAAA,GAAA,IAAA;AACA,gBAAA,QAtBA,GAsBA,CAAA,KAAA,iBAAA,EAAA,CAtBA;;AAuBA,oBAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,IAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,KAAA,KAAA,EAAA;AACA,uBAAA,IAAA,GAAA,MAAA;AACA,kBAAA,QAAA,CAAA,IAAA,CACA,KAAA,iBAAA,CAAA;AACA,oBAAA,IAAA,EAAA,KAAA,CAAA,YADA;AAEA,oBAAA,EAAA,EAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA;AAFA,mBAAA,CADA;AAMA;;AA/BA;AAAA,uBAgCA,OAAA,CAAA,GAAA,CAAA,QAAA,CAhCA;;AAAA;AAAA;AAAA;AAgCA,gBAAA,IAhCA;;AAiCA,oBAAA,IAAA,IAAA,IAAA,CAAA,OAAA,EAAA;AACA,uBAAA,IAAA,GAAA,SAAA,CAAA,KAAA,mBAAA,CAAA;AACA;;AACA,qBAAA,WAAA,GAAA,SAAA,CAAA,KAAA,IAAA,CAAA;AACA,qBAAA,UAAA,GAAA,KAAA;;AArCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuCA,IAAA,OAvCA,qBAuCA;AACA,WAAA,IAAA,GAAA,SAAA,CAAA,KAAA,WAAA,CAAA;AACA,KAzCA;AA0CA,IAAA,iBA1CA,+BA0CA;AAAA;;AACA,WAAA,OAAA,CAAA,OAAA,CAAA;AACA,QAAA,KAAA,2BADA;AAEA,QAAA,OAAA,yDAFA;AAGA,QAAA,WAAA,EAAA,QAHA;AAIA,QAAA,SAAA,EAAA;AAAA,iBAAA,KAAA,CAAA,MAAA,EAAA;AAAA,SAJA;AAKA,QAAA,IAAA,EAAA;AALA,OAAA;AAOA,KAlDA;AAmDA,IAAA,IAnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAoDA,KAAA,UAAA,CAAA,WAAA,EApDA;;AAAA;AAoDA,gBAAA,QApDA;AAsDA,gBAAA,iBAtDA,GAsDA,IAtDA;;AAAA,sBAuDA,KAAA,KAAA,CAAA,UAAA,IAAA,KAAA,KAAA,CAAA,UAAA,CAAA,MAvDA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAwDA,WAAA,CAAA,KAAA,KAAA,CAAA,UAAA;AAAA,sFAAA,kBAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACA,CAAA,CAAA,UAAA,CAAA,WAAA,EADA;;AAAA;AACA,4BAAA,OADA;AAAA,8DAEA,OAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA;;AAAA;AAAA;AAAA;AAAA,oBAxDA;;AAAA;AAwDA,gBAAA,QAxDA;AA4DA,gBAAA,iBAAA,GAAA,QAAA,CAAA,MAAA,KAAA,KAAA,KAAA,CAAA,UAAA,CAAA,MAAA;;AA5DA;AAAA,sBA8DA,CAAA,QAAA,IAAA,CAAA,iBA9DA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAkEA,qBAAA,QAAA,GAAA,IAAA;;AAlEA,sBAmEA,KAAA,IAAA,KAAA,KAnEA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAoEA,KAAA,MAAA,EApEA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAsEA,KAAA,MAAA,EAtEA;;AAAA;AAwEA,qBAAA,QAAA,GAAA,KAAA;;AAxEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0EA,IAAA,MA1EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA2EA,KAAA,0BAAA,CAAA;AACA,kBAAA,IAAA,EAAA,KAAA,CAAA,YADA;AAEA,kBAAA,OAAA,EAAA,SAAA,CAAA,KAAA,IAAA;AAFA,iBAAA,CA3EA;;AAAA;AA2EA,gBAAA,QA3EA;;AA+EA,oBAAA,QAAA,CAAA,OAAA,EAAA;AACA,uBAAA,MAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,EAAA,SADA;AAEA,oBAAA,OAAA,EAAA;AAFA,mBAAA;AAIA,uBAAA,OAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,EAAA,wBADA;AAEA,oBAAA,MAAA,EAAA;AACA,sBAAA,EAAA,EAAA,QAAA,CAAA;AADA;AAFA,mBAAA;AAMA,iBAXA,MAWA;AACA,uBAAA,MAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,EAAA,OADA;AAEA,oBAAA,OAAA,EACA,QAAA,CAAA,OAAA,IAAA;AAHA,mBAAA;AAKA;;AAhGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkGA,IAAA,MAlGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAmGA,KAAA,0BAAA,CAAA;AACA,kBAAA,IAAA,EAAA,KAAA,CAAA,YADA;AAEA,kBAAA,OAAA,EAAA,SAAA,CAAA,KAAA,IAAA;AAFA,iBAAA,CAnGA;;AAAA;AAmGA,gBAAA,QAnGA;;AAAA,qBAuGA,QAAA,CAAA,OAvGA;AAAA;AAAA;AAAA;;AAwGA,qBAAA,MAAA,CAAA,IAAA,CAAA;AACA,kBAAA,IAAA,EAAA,SADA;AAEA,kBAAA,OAAA,EAAA;AAFA,iBAAA;AAxGA;AAAA,uBA4GA,KAAA,KAAA,EA5GA;;AAAA;AAAA;AAAA;;AAAA;AA8GA,qBAAA,MAAA,CAAA,IAAA,CAAA;AACA,kBAAA,IAAA,EAAA,OADA;AAEA,kBAAA,OAAA,EACA,QAAA,CAAA,OAAA,IAAA;AAHA,iBAAA;;AA9GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqHA,IAAA,MArHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsHA,qBAAA,UAAA,GAAA,IAAA;AAtHA;AAAA,uBAuHA,KAAA,kBAAA,CAAA;AACA,kBAAA,IAAA,EAAA,KAAA,CAAA,YADA;AAEA,kBAAA,EAAA,EAAA,KAAA,mBAAA,CAAA;AAFA,iBAAA,CAvHA;;AAAA;AAuHA,gBAAA,QAvHA;;AA2HA,oBAAA,QAAA,CAAA,OAAA,EAAA;AACA,uBAAA,MAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,EAAA,SADA;AAEA,oBAAA,OAAA,EAAA;AAFA,mBAAA;AAIA,uBAAA,OAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,EAAA;AADA,mBAAA;AAGA,iBARA,MAQA;AACA,uBAAA,MAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,EAAA,OADA;AAEA,oBAAA,OAAA,EACA,QAAA,CAAA,OAAA,IAAA;AAHA,mBAAA;AAKA;;AACA,qBAAA,UAAA,GAAA,KAAA;;AA1IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,IApDA;AAiMA,EAAA,OAjMA,qBAiMA;AACA,SAAA,KAAA;AACA;AAnMA,CAAA","sourcesContent":["<template>\n  <PageDetailLoading v-if=\"isFetching\"></PageDetailLoading>\n  <div class=\"page\" v-else>\n    <UnsavedBar\n      :show=\"isShowUnsavedBar\"\n      :showDiscard=\"true\"\n      :loading=\"isSaving\"\n      @save=\"save\"\n      @discard=\"discard\"\n      title=\"Save\"\n    ></UnsavedBar>\n    <div class=\"page-header\">\n      <p-button icon=\"chevron-left\" class=\"btn-pure pl-0 mb-15\">\n        <router-link :to=\"{ name: 'product-mapping-list' }\">\n          Product mapping rules\n        </router-link>\n      </p-button>\n      <h1 class=\"page-title\">{{ pageTitle }}</h1>\n    </div>\n    <div class=\"page-content container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-block\">\n              <div class=\"d-flex mt-20\">\n                <span class=\"mr-15 mt-10\">Lionnix product</span>\n                <div class=\"form-group mb-0\">\n                  <p-select\n                    :class=\"[{ 'is-invalid': errors.has('product_type_id') }]\"\n                    v-model=\"form.product_type_id\"\n                    v-validate=\"'required'\"\n                    name=\"product_type_id\"\n                    placeholder=\"Select product\"\n                    style=\"width: 250px;\"\n                  >\n                    <option\n                      v-for=\"(item, i) in products\"\n                      :key=\"i\"\n                      :value=\"item.id\"\n                    >\n                      {{ item.name }}\n                    </option>\n                  </p-select>\n                  <div\n                    class=\"invalid-feedback\"\n                    v-if=\"errors.has('product_type_id')\"\n                  >\n                    Product type is required\n                  </div>\n                </div>\n              </div>\n              <div class=\"d-flex mt-15 align-items-center\">\n                <p class=\"m-0 mr-30\">Must match</p>\n                <p-radio\n                  class=\"mr-15\"\n                  v-model=\"form.disjunctive\"\n                  :native-value=\"true\"\n                >\n                  All conditions\n                </p-radio>\n                <p-radio v-model=\"form.disjunctive\" :native-value=\"false\">\n                  Any condition\n                </p-radio>\n              </div>\n              <div>\n                <condition-item\n                  v-for=\"(rule, index) in form.rules\"\n                  :condition=\"rule\"\n                  :key=\"index\"\n                  :disable-remove=\"index === 0\"\n                  @remove=\"removeCondition(index)\"\n                  @input=\"changeCondition(index, $event)\"\n                  type=\"product_type\"\n                  ref=\"conditions\"\n                />\n                <div class=\"row\">\n                  <div class=\"col-12 mt-2\">\n                    <p-button\n                      type=\"default\"\n                      class=\"mt-2\"\n                      @click.prevent=\"addCondition\"\n                    >\n                      Add new condition\n                    </p-button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"d-flex justify-content-between\">\n            <p-button\n              type=\"danger\"\n              @click=\"showConfirmDelete\"\n              @disabled=\"isDeleting\"\n              :loading=\"isDeleting\"\n              v-if=\"productMappingState.id\"\n            >\n              Delete\n            </p-button>\n            <div v-else></div>\n            <div class=\"d-flex\">\n              <p-button type=\"default\" @click=\"discard\">\n                Cancel\n              </p-button>\n              <p-button\n                class=\"ml-15\"\n                @click=\"save\"\n                :disabled=\"isSaving\"\n                :loading=\"isSaving\"\n              >\n                Save\n              </p-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'vuex'\nimport { cloneDeep, isObjectDiff, asyncFilter } from '@core/utils'\nimport ConditionItem from './components/ConditionItem'\nimport { types } from '../constant'\nexport default {\n  name: 'ProductMappingForm',\n  components: {\n    ConditionItem,\n  },\n  data() {\n    return {\n      mode: 'new',\n      form: {\n        disjunctive: true,\n        product_type_id: null,\n        type: types.product_type,\n        rules: [\n          {\n            column: 'title',\n            relation: 'contain',\n            condition: '',\n          },\n        ],\n      },\n      initialForm: {},\n      isShowUnsavedBar: false,\n      isFetching: false,\n      isSaving: false,\n      isDeleting: false,\n    }\n  },\n  computed: {\n    ...mapState('orderMapping', {\n      productMappingState: (state) => state.orderMapping,\n      products: (state) => state.productTypes,\n    }),\n    pageTitle() {\n      return this.mode === 'new'\n        ? 'Create product mapping rule'\n        : 'Update product mapping rule'\n    },\n  },\n  watch: {\n    form: {\n      handler(val) {\n        this.isShowUnsavedBar = isObjectDiff(val, this.initialForm)\n      },\n      deep: true,\n    },\n    initialForm: {\n      handler(val) {\n        this.isShowUnsavedBar = isObjectDiff(val, this.form)\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    ...mapActions('orderMapping', {\n      createOrUpdateOrderMapping: 'createOrUpdateOrderMapping',\n      fetchOrderMapping: 'fetchOrderMapping',\n      deleteOrderMapping: 'deleteOrderMapping',\n      fetchProductTypes: 'fetchProductTypes',\n    }),\n    removeCondition(index) {\n      this.form.rules.splice(index, 1)\n    },\n    changeCondition(index, event) {\n      this.$set(this.form.rules, index, event)\n    },\n    addCondition() {\n      const rules = this.form.rules\n      rules.push({\n        ...rules[rules.length - 1],\n        condition: '',\n      })\n    },\n    async fetch() {\n      this.isFetching = true\n      const promises = [this.fetchProductTypes()]\n      if (this.$route.params.id && this.$route.params.id !== 'new') {\n        this.mode = 'edit'\n        promises.push(\n          this.fetchOrderMapping({\n            type: types.product_type,\n            id: +this.$route.params.id,\n          })\n        )\n      }\n      const [, res2] = await Promise.all(promises)\n      if (res2 && res2.success) {\n        this.form = cloneDeep(this.productMappingState)\n      }\n      this.initialForm = cloneDeep(this.form)\n      this.isFetching = false\n    },\n    discard() {\n      this.form = cloneDeep(this.initialForm)\n    },\n    showConfirmDelete() {\n      this.$dialog.confirm({\n        title: `Delete product mapping?`,\n        message: `Are you sure you want to delete this product mapping?`,\n        confirmText: 'Delete',\n        onConfirm: () => this.delete(),\n        type: 'danger',\n      })\n    },\n    async save() {\n      const validate = await this.$validator.validateAll()\n\n      let isConditionsValid = true\n      if (this.$refs.conditions && this.$refs.conditions.length) {\n        const filtered = await asyncFilter(this.$refs.conditions, async (c) => {\n          const isValid = await c.$validator.validateAll()\n          return isValid\n        })\n        isConditionsValid = filtered.length === this.$refs.conditions.length\n      }\n      if (!validate || !isConditionsValid) {\n        return\n      }\n\n      this.isSaving = true\n      if (this.mode === 'new') {\n        await this.create()\n      } else {\n        await this.update()\n      }\n      this.isSaving = false\n    },\n    async create() {\n      const response = await this.createOrUpdateOrderMapping({\n        type: types.product_type,\n        payload: cloneDeep(this.form),\n      })\n      if (response.success) {\n        this.$toast.open({\n          type: 'success',\n          message: 'Your product mapping was created',\n        })\n        this.$router.push({\n          name: 'product-mapping-update',\n          params: {\n            id: response.id,\n          },\n        })\n      } else {\n        this.$toast.open({\n          type: 'error',\n          message:\n            response.message || 'Something went wrong. Please try again later',\n        })\n      }\n    },\n    async update() {\n      const response = await this.createOrUpdateOrderMapping({\n        type: types.product_type,\n        payload: cloneDeep(this.form),\n      })\n      if (response.success) {\n        this.$toast.open({\n          type: 'success',\n          message: 'Your product mapping was updated',\n        })\n        await this.fetch()\n      } else {\n        this.$toast.open({\n          type: 'error',\n          message:\n            response.message || 'Something went wrong. Please try again later',\n        })\n      }\n    },\n    async delete() {\n      this.isDeleting = true\n      const response = await this.deleteOrderMapping({\n        type: types.product_type,\n        id: this.productMappingState.id,\n      })\n      if (response.success) {\n        this.$toast.open({\n          type: 'success',\n          message: 'Your product mapping was deleted',\n        })\n        this.$router.push({\n          name: 'product-mapping-list',\n        })\n      } else {\n        this.$toast.open({\n          type: 'error',\n          message:\n            response.message || 'Something went wrong. Please try again later',\n        })\n      }\n      this.isDeleting = false\n    },\n  },\n  created() {\n    this.fetch()\n  },\n}\n</script>\n"],"sourceRoot":"src/packages/order-mapping/views"}]}