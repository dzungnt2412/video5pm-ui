{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/core/services/socket.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/core/services/socket.js","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["import AuthService from '@core/services/auth';\nexport var socket = {\n  conn: null,\n  connect: function connect(callbackMessage) {\n    var _this = this;\n\n    if (!window['WebSocket']) {\n      return this;\n    }\n\n    this.conn = new WebSocket(process.env.VUE_APP_WEBSOCKET_URL);\n    this.onOpen();\n    this.onMessage(function (e) {\n      callbackMessage(e);\n    });\n    this.onclose(function () {\n      setTimeout(function () {\n        _this.connect(callbackMessage);\n      }, 3000);\n    });\n    return this;\n  },\n  onOpen: function onOpen() {\n    var _this2 = this;\n\n    var token = AuthService.getAccessToken();\n\n    if (!token) {\n      return;\n    }\n\n    this.conn.addEventListener('open', function () {\n      _this2.conn.send(JSON.stringify({\n        type: 'connect',\n        token: token\n      }));\n    });\n  },\n  onclose: function onclose(callback) {\n    this.conn.onclose = function (e) {\n      console.log('web socket is disconnected');\n      callback(e);\n    };\n  },\n  onSend: function onSend(data) {\n    if (!data || !this.conn) {\n      return;\n    }\n\n    this.conn.send(data);\n  },\n  onMessage: function onMessage(callback) {\n    this.conn.addEventListener('message', function (e) {\n      callback(e);\n    });\n  },\n  onEvent: function onEvent(eventName, callback) {\n    this.conn.addEventListener(eventName, function (e) {\n      callback(e);\n    });\n  }\n};\nexport default socket;",null]}