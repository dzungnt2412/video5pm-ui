{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/uikit/components/multiselect/pointerMixin.js","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/uikit/components/multiselect/pointerMixin.js","mtime":1603898990384},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1597736267502}],"contextDependencies":[],"result":["export default {\n  data: function data() {\n    return {\n      pointer: 0,\n      pointerDirty: false\n    };\n  },\n  props: {\n    /**\n     * Enable/disable highlighting of the pointed value.\n     * @type {Boolean}\n     * @default true\n     */\n    showPointer: {\n      type: Boolean,\n      default: true\n    },\n    optionHeight: {\n      type: Number,\n      default: 40\n    }\n  },\n  computed: {\n    pointerPosition: function pointerPosition() {\n      return this.pointer * this.optionHeight;\n    },\n    visibleElements: function visibleElements() {\n      return this.optimizedHeight / this.optionHeight;\n    }\n  },\n  watch: {\n    filteredOptions: function filteredOptions() {\n      this.pointerAdjust();\n    },\n    isOpen: function isOpen() {\n      this.pointerDirty = false;\n    },\n    pointer: function pointer() {\n      this.$refs.search.setAttribute('aria-activedescendant', this.id + '-' + this.pointer.toString());\n    }\n  },\n  methods: {\n    optionHighlight: function optionHighlight(index, option) {\n      return {\n        'multiselect__option--highlight': index === this.pointer && this.showPointer,\n        'multiselect__option--selected': this.isSelected(option)\n      };\n    },\n    groupHighlight: function groupHighlight(index, selectedGroup) {\n      var _this = this;\n\n      if (!this.groupSelect) {\n        return ['multiselect__option--group', 'multiselect__option--disabled'];\n      }\n\n      var group = this.options.find(function (option) {\n        return option[_this.groupLabel] === selectedGroup.$groupLabel;\n      });\n      return group && !this.wholeGroupDisabled(group) ? ['multiselect__option--group', {\n        'multiselect__option--highlight': index === this.pointer && this.showPointer\n      }, {\n        'multiselect__option--group-selected': this.wholeGroupSelected(group)\n      }] : 'multiselect__option--disabled';\n    },\n    addPointerElement: function addPointerElement() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Enter',\n          key = _ref.key;\n\n      /* istanbul ignore else */\n      if (this.filteredOptions.length > 0) {\n        this.select(this.filteredOptions[this.pointer], key);\n      }\n\n      this.pointerReset();\n    },\n    pointerForward: function pointerForward() {\n      /* istanbul ignore else */\n      if (this.pointer < this.filteredOptions.length - 1) {\n        this.pointer++;\n        /* istanbul ignore next */\n\n        if (this.$refs.list.scrollTop <= this.pointerPosition - (this.visibleElements - 1) * this.optionHeight) {\n          this.$refs.list.scrollTop = this.pointerPosition - (this.visibleElements - 1) * this.optionHeight;\n        }\n        /* istanbul ignore else */\n\n\n        if (this.filteredOptions[this.pointer] && this.filteredOptions[this.pointer].$isLabel && !this.groupSelect) this.pointerForward();\n      }\n\n      this.pointerDirty = true;\n    },\n    pointerBackward: function pointerBackward() {\n      if (this.pointer > 0) {\n        this.pointer--;\n        /* istanbul ignore else */\n\n        if (this.$refs.list.scrollTop >= this.pointerPosition) {\n          this.$refs.list.scrollTop = this.pointerPosition;\n        }\n        /* istanbul ignore else */\n\n\n        if (this.filteredOptions[this.pointer] && this.filteredOptions[this.pointer].$isLabel && !this.groupSelect) this.pointerBackward();\n      } else {\n        /* istanbul ignore else */\n        if (this.filteredOptions[this.pointer] && this.filteredOptions[0].$isLabel && !this.groupSelect) this.pointerForward();\n      }\n\n      this.pointerDirty = true;\n    },\n    pointerReset: function pointerReset() {\n      /* istanbul ignore else */\n      if (!this.closeOnSelect) return;\n      this.pointer = 0;\n      /* istanbul ignore else */\n\n      if (this.$refs.list) {\n        this.$refs.list.scrollTop = 0;\n      }\n    },\n    pointerAdjust: function pointerAdjust() {\n      /* istanbul ignore else */\n      if (this.pointer >= this.filteredOptions.length - 1) {\n        this.pointer = this.filteredOptions.length ? this.filteredOptions.length - 1 : 0;\n      }\n\n      if (this.filteredOptions.length > 0 && this.filteredOptions[this.pointer].$isLabel && !this.groupSelect) {\n        this.pointerForward();\n      }\n    },\n    pointerSet: function pointerSet(index) {\n      this.pointer = index;\n      this.pointerDirty = true;\n    }\n  }\n};",{"version":3,"sources":["/home/tiendzung/workspace/lionnix/lionnix-seller-v2/uikit/components/multiselect/pointerMixin.js"],"names":["data","pointer","pointerDirty","props","showPointer","type","Boolean","default","optionHeight","Number","computed","pointerPosition","visibleElements","optimizedHeight","watch","filteredOptions","pointerAdjust","isOpen","$refs","search","setAttribute","id","toString","methods","optionHighlight","index","option","isSelected","groupHighlight","selectedGroup","groupSelect","group","options","find","groupLabel","$groupLabel","wholeGroupDisabled","wholeGroupSelected","addPointerElement","key","length","select","pointerReset","pointerForward","list","scrollTop","$isLabel","pointerBackward","closeOnSelect","pointerSet"],"mappings":"AAAA,eAAe;AACbA,EAAAA,IADa,kBACN;AACL,WAAO;AACLC,MAAAA,OAAO,EAAE,CADJ;AAELC,MAAAA,YAAY,EAAE;AAFT,KAAP;AAID,GANY;AAObC,EAAAA,KAAK,EAAE;AACL;;;;;AAKAC,IAAAA,WAAW,EAAE;AACXC,MAAAA,IAAI,EAAEC,OADK;AAEXC,MAAAA,OAAO,EAAE;AAFE,KANR;AAULC,IAAAA,YAAY,EAAE;AACZH,MAAAA,IAAI,EAAEI,MADM;AAEZF,MAAAA,OAAO,EAAE;AAFG;AAVT,GAPM;AAsBbG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eADQ,6BACU;AAChB,aAAO,KAAKV,OAAL,GAAe,KAAKO,YAA3B;AACD,KAHO;AAIRI,IAAAA,eAJQ,6BAIU;AAChB,aAAO,KAAKC,eAAL,GAAuB,KAAKL,YAAnC;AACD;AANO,GAtBG;AA8BbM,EAAAA,KAAK,EAAE;AACLC,IAAAA,eADK,6BACa;AAChB,WAAKC,aAAL;AACD,KAHI;AAILC,IAAAA,MAJK,oBAII;AACP,WAAKf,YAAL,GAAoB,KAApB;AACD,KANI;AAOLD,IAAAA,OAPK,qBAOK;AACR,WAAKiB,KAAL,CAAWC,MAAX,CAAkBC,YAAlB,CACE,uBADF,EAEE,KAAKC,EAAL,GAAU,GAAV,GAAgB,KAAKpB,OAAL,CAAaqB,QAAb,EAFlB;AAID;AAZI,GA9BM;AA4CbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eADO,2BACSC,KADT,EACgBC,MADhB,EACwB;AAC7B,aAAO;AACL,0CACED,KAAK,KAAK,KAAKxB,OAAf,IAA0B,KAAKG,WAF5B;AAGL,yCAAiC,KAAKuB,UAAL,CAAgBD,MAAhB;AAH5B,OAAP;AAKD,KAPM;AAQPE,IAAAA,cARO,0BAQQH,KARR,EAQeI,aARf,EAQ8B;AAAA;;AACnC,UAAI,CAAC,KAAKC,WAAV,EAAuB;AACrB,eAAO,CAAC,4BAAD,EAA+B,+BAA/B,CAAP;AACD;;AAED,UAAMC,KAAK,GAAG,KAAKC,OAAL,CAAaC,IAAb,CAAkB,UAACP,MAAD,EAAY;AAC1C,eAAOA,MAAM,CAAC,KAAI,CAACQ,UAAN,CAAN,KAA4BL,aAAa,CAACM,WAAjD;AACD,OAFa,CAAd;AAIA,aAAOJ,KAAK,IAAI,CAAC,KAAKK,kBAAL,CAAwBL,KAAxB,CAAV,GACH,CACE,4BADF,EAEE;AACE,0CACEN,KAAK,KAAK,KAAKxB,OAAf,IAA0B,KAAKG;AAFnC,OAFF,EAME;AACE,+CAAuC,KAAKiC,kBAAL,CACrCN,KADqC;AADzC,OANF,CADG,GAaH,+BAbJ;AAcD,KA/BM;AAgCPO,IAAAA,iBAhCO,+BAgC8B;AAAA,qFAAT,OAAS;AAAA,UAAjBC,GAAiB,QAAjBA,GAAiB;;AACnC;AACA,UAAI,KAAKxB,eAAL,CAAqByB,MAArB,GAA8B,CAAlC,EAAqC;AACnC,aAAKC,MAAL,CAAY,KAAK1B,eAAL,CAAqB,KAAKd,OAA1B,CAAZ,EAAgDsC,GAAhD;AACD;;AACD,WAAKG,YAAL;AACD,KAtCM;AAuCPC,IAAAA,cAvCO,4BAuCU;AACf;AACA,UAAI,KAAK1C,OAAL,GAAe,KAAKc,eAAL,CAAqByB,MAArB,GAA8B,CAAjD,EAAoD;AAClD,aAAKvC,OAAL;AACA;;AACA,YACE,KAAKiB,KAAL,CAAW0B,IAAX,CAAgBC,SAAhB,IACA,KAAKlC,eAAL,GAAuB,CAAC,KAAKC,eAAL,GAAuB,CAAxB,IAA6B,KAAKJ,YAF3D,EAGE;AACA,eAAKU,KAAL,CAAW0B,IAAX,CAAgBC,SAAhB,GACE,KAAKlC,eAAL,GACA,CAAC,KAAKC,eAAL,GAAuB,CAAxB,IAA6B,KAAKJ,YAFpC;AAGD;AACD;;;AACA,YACE,KAAKO,eAAL,CAAqB,KAAKd,OAA1B,KACA,KAAKc,eAAL,CAAqB,KAAKd,OAA1B,EAAmC6C,QADnC,IAEA,CAAC,KAAKhB,WAHR,EAKE,KAAKa,cAAL;AACH;;AACD,WAAKzC,YAAL,GAAoB,IAApB;AACD,KA7DM;AA8DP6C,IAAAA,eA9DO,6BA8DW;AAChB,UAAI,KAAK9C,OAAL,GAAe,CAAnB,EAAsB;AACpB,aAAKA,OAAL;AACA;;AACA,YAAI,KAAKiB,KAAL,CAAW0B,IAAX,CAAgBC,SAAhB,IAA6B,KAAKlC,eAAtC,EAAuD;AACrD,eAAKO,KAAL,CAAW0B,IAAX,CAAgBC,SAAhB,GAA4B,KAAKlC,eAAjC;AACD;AACD;;;AACA,YACE,KAAKI,eAAL,CAAqB,KAAKd,OAA1B,KACA,KAAKc,eAAL,CAAqB,KAAKd,OAA1B,EAAmC6C,QADnC,IAEA,CAAC,KAAKhB,WAHR,EAKE,KAAKiB,eAAL;AACH,OAbD,MAaO;AACL;AACA,YACE,KAAKhC,eAAL,CAAqB,KAAKd,OAA1B,KACA,KAAKc,eAAL,CAAqB,CAArB,EAAwB+B,QADxB,IAEA,CAAC,KAAKhB,WAHR,EAKE,KAAKa,cAAL;AACH;;AACD,WAAKzC,YAAL,GAAoB,IAApB;AACD,KAtFM;AAuFPwC,IAAAA,YAvFO,0BAuFQ;AACb;AACA,UAAI,CAAC,KAAKM,aAAV,EAAyB;AACzB,WAAK/C,OAAL,GAAe,CAAf;AACA;;AACA,UAAI,KAAKiB,KAAL,CAAW0B,IAAf,EAAqB;AACnB,aAAK1B,KAAL,CAAW0B,IAAX,CAAgBC,SAAhB,GAA4B,CAA5B;AACD;AACF,KA/FM;AAgGP7B,IAAAA,aAhGO,2BAgGS;AACd;AACA,UAAI,KAAKf,OAAL,IAAgB,KAAKc,eAAL,CAAqByB,MAArB,GAA8B,CAAlD,EAAqD;AACnD,aAAKvC,OAAL,GAAe,KAAKc,eAAL,CAAqByB,MAArB,GACX,KAAKzB,eAAL,CAAqByB,MAArB,GAA8B,CADnB,GAEX,CAFJ;AAGD;;AAED,UACE,KAAKzB,eAAL,CAAqByB,MAArB,GAA8B,CAA9B,IACA,KAAKzB,eAAL,CAAqB,KAAKd,OAA1B,EAAmC6C,QADnC,IAEA,CAAC,KAAKhB,WAHR,EAIE;AACA,aAAKa,cAAL;AACD;AACF,KA/GM;AAgHPM,IAAAA,UAhHO,sBAgHIxB,KAhHJ,EAgHW;AAChB,WAAKxB,OAAL,GAAewB,KAAf;AACA,WAAKvB,YAAL,GAAoB,IAApB;AACD;AAnHM;AA5CI,CAAf","sourcesContent":["export default {\n  data() {\n    return {\n      pointer: 0,\n      pointerDirty: false,\n    }\n  },\n  props: {\n    /**\n     * Enable/disable highlighting of the pointed value.\n     * @type {Boolean}\n     * @default true\n     */\n    showPointer: {\n      type: Boolean,\n      default: true,\n    },\n    optionHeight: {\n      type: Number,\n      default: 40,\n    },\n  },\n  computed: {\n    pointerPosition() {\n      return this.pointer * this.optionHeight\n    },\n    visibleElements() {\n      return this.optimizedHeight / this.optionHeight\n    },\n  },\n  watch: {\n    filteredOptions() {\n      this.pointerAdjust()\n    },\n    isOpen() {\n      this.pointerDirty = false\n    },\n    pointer() {\n      this.$refs.search.setAttribute(\n        'aria-activedescendant',\n        this.id + '-' + this.pointer.toString()\n      )\n    },\n  },\n  methods: {\n    optionHighlight(index, option) {\n      return {\n        'multiselect__option--highlight':\n          index === this.pointer && this.showPointer,\n        'multiselect__option--selected': this.isSelected(option),\n      }\n    },\n    groupHighlight(index, selectedGroup) {\n      if (!this.groupSelect) {\n        return ['multiselect__option--group', 'multiselect__option--disabled']\n      }\n\n      const group = this.options.find((option) => {\n        return option[this.groupLabel] === selectedGroup.$groupLabel\n      })\n\n      return group && !this.wholeGroupDisabled(group)\n        ? [\n            'multiselect__option--group',\n            {\n              'multiselect__option--highlight':\n                index === this.pointer && this.showPointer,\n            },\n            {\n              'multiselect__option--group-selected': this.wholeGroupSelected(\n                group\n              ),\n            },\n          ]\n        : 'multiselect__option--disabled'\n    },\n    addPointerElement({ key } = 'Enter') {\n      /* istanbul ignore else */\n      if (this.filteredOptions.length > 0) {\n        this.select(this.filteredOptions[this.pointer], key)\n      }\n      this.pointerReset()\n    },\n    pointerForward() {\n      /* istanbul ignore else */\n      if (this.pointer < this.filteredOptions.length - 1) {\n        this.pointer++\n        /* istanbul ignore next */\n        if (\n          this.$refs.list.scrollTop <=\n          this.pointerPosition - (this.visibleElements - 1) * this.optionHeight\n        ) {\n          this.$refs.list.scrollTop =\n            this.pointerPosition -\n            (this.visibleElements - 1) * this.optionHeight\n        }\n        /* istanbul ignore else */\n        if (\n          this.filteredOptions[this.pointer] &&\n          this.filteredOptions[this.pointer].$isLabel &&\n          !this.groupSelect\n        )\n          this.pointerForward()\n      }\n      this.pointerDirty = true\n    },\n    pointerBackward() {\n      if (this.pointer > 0) {\n        this.pointer--\n        /* istanbul ignore else */\n        if (this.$refs.list.scrollTop >= this.pointerPosition) {\n          this.$refs.list.scrollTop = this.pointerPosition\n        }\n        /* istanbul ignore else */\n        if (\n          this.filteredOptions[this.pointer] &&\n          this.filteredOptions[this.pointer].$isLabel &&\n          !this.groupSelect\n        )\n          this.pointerBackward()\n      } else {\n        /* istanbul ignore else */\n        if (\n          this.filteredOptions[this.pointer] &&\n          this.filteredOptions[0].$isLabel &&\n          !this.groupSelect\n        )\n          this.pointerForward()\n      }\n      this.pointerDirty = true\n    },\n    pointerReset() {\n      /* istanbul ignore else */\n      if (!this.closeOnSelect) return\n      this.pointer = 0\n      /* istanbul ignore else */\n      if (this.$refs.list) {\n        this.$refs.list.scrollTop = 0\n      }\n    },\n    pointerAdjust() {\n      /* istanbul ignore else */\n      if (this.pointer >= this.filteredOptions.length - 1) {\n        this.pointer = this.filteredOptions.length\n          ? this.filteredOptions.length - 1\n          : 0\n      }\n\n      if (\n        this.filteredOptions.length > 0 &&\n        this.filteredOptions[this.pointer].$isLabel &&\n        !this.groupSelect\n      ) {\n        this.pointerForward()\n      }\n    },\n    pointerSet(index) {\n      this.pointer = index\n      this.pointerDirty = true\n    },\n  },\n}\n"]}]}