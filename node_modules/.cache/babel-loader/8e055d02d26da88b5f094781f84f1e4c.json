{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/core/helpers/cookie.js","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/core/helpers/cookie.js","mtime":1603898990376},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1597736267502}],"contextDependencies":[],"result":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport CookieJs from 'js-cookie';\nimport { byteLength } from '@core/utils';\nimport { isEmpty } from '@core/utils/object';\nimport log from '@core/helpers/log';\nimport { DEFAULT_STORAGE_LIFE_TIME, MAX_COOKIE_BYTES } from '@core/constants/storage';\nvar Cookie = {\n  /**\n   * Set\n   * @param key\n   * @param val\n   * @param expires\n   */\n  set: function set(key, val) {\n    var expires = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    if (byteLength(val) > MAX_COOKIE_BYTES) {\n      log(\"Cookie \\\"\".concat(key, \"\\\" is too big. Bytes: \").concat(byteLength(val), \", Val: \").concat(val));\n      return;\n    }\n\n    var duration;\n\n    if (expires) {\n      duration = new Date(expires);\n    } else {\n      duration = DEFAULT_STORAGE_LIFE_TIME;\n    }\n\n    CookieJs.set(key, val, {\n      expires: duration\n    });\n  },\n\n  /**\n   * Get\n   * @param key\n   * @return {*}\n   */\n  get: function get(key) {\n    return CookieJs.get(key);\n  },\n\n  /**\n   * Get all\n   * @param callback\n   * @return {Array}\n   */\n  each: function each(callback) {\n    var values = CookieJs.get();\n\n    if (values && !isEmpty(values)) {\n      Object.entries(values).forEach(function (item) {\n        var _item = _slicedToArray(item, 2),\n            key = _item[0],\n            value = _item[1];\n\n        callback(key, value);\n      });\n    }\n  },\n\n  /**\n   * Remove\n   * @param key\n   */\n  remove: function remove(key) {\n    CookieJs.remove(key);\n  },\n\n  /**\n   * Has\n   * @param key\n   * @return {boolean}\n   */\n  has: function has(key) {\n    return typeof Cookie.get(key) !== 'undefined';\n  },\n\n  /**\n   * Clear all\n   */\n  clearAll: function clearAll() {\n    Cookie.each(function (key) {\n      Cookie.remove(key);\n    });\n  }\n};\nexport default Cookie;",{"version":3,"sources":["/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/core/helpers/cookie.js"],"names":["CookieJs","byteLength","isEmpty","log","DEFAULT_STORAGE_LIFE_TIME","MAX_COOKIE_BYTES","Cookie","set","key","val","expires","duration","Date","get","each","callback","values","Object","entries","forEach","item","value","remove","has","clearAll"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SACEC,yBADF,EAEEC,gBAFF,QAGO,yBAHP;AAKA,IAAMC,MAAM,GAAG;AACb;;;;;;AAMAC,EAAAA,GAPa,eAOTC,GAPS,EAOJC,GAPI,EAOiB;AAAA,QAAhBC,OAAgB,uEAAN,IAAM;;AAC5B,QAAIT,UAAU,CAACQ,GAAD,CAAV,GAAkBJ,gBAAtB,EAAwC;AACtCF,MAAAA,GAAG,oBAAYK,GAAZ,mCAAuCP,UAAU,CAACQ,GAAD,CAAjD,oBAAgEA,GAAhE,EAAH;AACA;AACD;;AAED,QAAIE,QAAJ;;AAEA,QAAID,OAAJ,EAAa;AACXC,MAAAA,QAAQ,GAAG,IAAIC,IAAJ,CAASF,OAAT,CAAX;AACD,KAFD,MAEO;AACLC,MAAAA,QAAQ,GAAGP,yBAAX;AACD;;AAEDJ,IAAAA,QAAQ,CAACO,GAAT,CAAaC,GAAb,EAAkBC,GAAlB,EAAuB;AAAEC,MAAAA,OAAO,EAAEC;AAAX,KAAvB;AACD,GAtBY;;AAwBb;;;;;AAKAE,EAAAA,GA7Ba,eA6BTL,GA7BS,EA6BJ;AACP,WAAOR,QAAQ,CAACa,GAAT,CAAaL,GAAb,CAAP;AACD,GA/BY;;AAiCb;;;;;AAKAM,EAAAA,IAtCa,gBAsCRC,QAtCQ,EAsCE;AACb,QAAMC,MAAM,GAAGhB,QAAQ,CAACa,GAAT,EAAf;;AAEA,QAAIG,MAAM,IAAI,CAACd,OAAO,CAACc,MAAD,CAAtB,EAAgC;AAC9BC,MAAAA,MAAM,CAACC,OAAP,CAAeF,MAAf,EAAuBG,OAAvB,CAA+B,UAACC,IAAD,EAAU;AAAA,mCAClBA,IADkB;AAAA,YAChCZ,GADgC;AAAA,YAC3Ba,KAD2B;;AAEvCN,QAAAA,QAAQ,CAACP,GAAD,EAAMa,KAAN,CAAR;AACD,OAHD;AAID;AACF,GA/CY;;AAiDb;;;;AAIAC,EAAAA,MArDa,kBAqDNd,GArDM,EAqDD;AACVR,IAAAA,QAAQ,CAACsB,MAAT,CAAgBd,GAAhB;AACD,GAvDY;;AAyDb;;;;;AAKAe,EAAAA,GA9Da,eA8DTf,GA9DS,EA8DJ;AACP,WAAO,OAAOF,MAAM,CAACO,GAAP,CAAWL,GAAX,CAAP,KAA2B,WAAlC;AACD,GAhEY;;AAkEb;;;AAGAgB,EAAAA,QArEa,sBAqEF;AACTlB,IAAAA,MAAM,CAACQ,IAAP,CAAY,UAACN,GAAD,EAAS;AACnBF,MAAAA,MAAM,CAACgB,MAAP,CAAcd,GAAd;AACD,KAFD;AAGD;AAzEY,CAAf;AA4EA,eAAeF,MAAf","sourcesContent":["import CookieJs from 'js-cookie'\nimport { byteLength } from '@core/utils'\nimport { isEmpty } from '@core/utils/object'\nimport log from '@core/helpers/log'\nimport {\n  DEFAULT_STORAGE_LIFE_TIME,\n  MAX_COOKIE_BYTES,\n} from '@core/constants/storage'\n\nconst Cookie = {\n  /**\n   * Set\n   * @param key\n   * @param val\n   * @param expires\n   */\n  set(key, val, expires = null) {\n    if (byteLength(val) > MAX_COOKIE_BYTES) {\n      log(`Cookie \"${key}\" is too big. Bytes: ${byteLength(val)}, Val: ${val}`)\n      return\n    }\n\n    let duration\n\n    if (expires) {\n      duration = new Date(expires)\n    } else {\n      duration = DEFAULT_STORAGE_LIFE_TIME\n    }\n\n    CookieJs.set(key, val, { expires: duration })\n  },\n\n  /**\n   * Get\n   * @param key\n   * @return {*}\n   */\n  get(key) {\n    return CookieJs.get(key)\n  },\n\n  /**\n   * Get all\n   * @param callback\n   * @return {Array}\n   */\n  each(callback) {\n    const values = CookieJs.get()\n\n    if (values && !isEmpty(values)) {\n      Object.entries(values).forEach((item) => {\n        const [key, value] = item\n        callback(key, value)\n      })\n    }\n  },\n\n  /**\n   * Remove\n   * @param key\n   */\n  remove(key) {\n    CookieJs.remove(key)\n  },\n\n  /**\n   * Has\n   * @param key\n   * @return {boolean}\n   */\n  has(key) {\n    return typeof Cookie.get(key) !== 'undefined'\n  },\n\n  /**\n   * Clear all\n   */\n  clearAll() {\n    Cookie.each((key) => {\n      Cookie.remove(key)\n    })\n  },\n}\n\nexport default Cookie\n"]}]}