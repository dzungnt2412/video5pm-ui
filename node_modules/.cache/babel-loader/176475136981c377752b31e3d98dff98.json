{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/core/helpers/storage.js","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/core/helpers/storage.js","mtime":1603898990376},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1597736267502}],"contextDependencies":[],"result":["import LocalStorage from '@core/helpers/localstorage';\nimport Cookie from '@core/helpers/cookie';\n\nvar getKey = function getKey(key) {\n  return \"lionnix_$_$_\".concat(key);\n};\n\nvar isSupportStorage = typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\nvar store = isSupportStorage ? LocalStorage : Cookie;\nvar Storage = {\n  /**\n   * Set storage value\n   * @param key\n   * @param value\n   * @param expireSeconds\n   */\n  set: function set(key, value) {\n    var expireSeconds = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    value = JSON.stringify(value);\n\n    if (expireSeconds) {\n      store.set(getKey(key), value, new Date().getTime() + expireSeconds * 1000);\n    } else {\n      store.set(getKey(key), value);\n    }\n  },\n\n  /**\n   * Get storage value\n   * @param key\n   * @param defaultVal\n   * @return {null}\n   */\n  get: function get(key) {\n    var defaultVal = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var value = store.get(getKey(key));\n\n    try {\n      return JSON.parse(value);\n    } catch (e) {\n      return defaultVal;\n    }\n  },\n\n  /**\n   * Get keys by prefix\n   * @param prefix\n   */\n  getKeysByPrefix: function getKeysByPrefix(prefix) {\n    var keys = [];\n    store.each(function (value, key) {\n      if (key && key.indexOf(prefix) === 0) {\n        keys.push(key);\n      }\n    });\n    return keys;\n  },\n\n  /**\n   * Remove by key\n   * @param key\n   */\n  remove: function remove(key) {\n    store.remove(getKey(key));\n  },\n\n  /**\n   * Get expire duration of days\n   * @param days\n   * @return {number} the expire seconds of days\n   */\n  getDayDuration: function getDayDuration(days) {\n    var oneDaySeconds = 60 * 60 * 24;\n    return days * oneDaySeconds;\n  },\n\n  /**\n   * Get expire duration of minutes\n   * @param minute\n   * @return {number} the expire seconds of minutes\n   */\n  getMinuteDuration: function getMinuteDuration(minute) {\n    return minute * 60;\n  },\n\n  /**\n   * Remove by prefix\n   * @param {string} prefix\n   */\n  removeByPrefix: function removeByPrefix(prefix) {\n    var _this = this;\n\n    var keys = this.getKeysByPrefix(prefix);\n\n    if (Array.isArray(keys) && keys.length) {\n      keys.forEach(function (key) {\n        return _this.remove(key);\n      });\n    }\n  },\n\n  /**\n   * Has storage by key\n   * @param key\n   * @return {boolean}\n   */\n  has: function has(key) {\n    if (typeof store.has === 'undefined') {\n      return typeof this.get(getKey(key)) !== 'undefined';\n    }\n\n    return store.get(getKey(key));\n  },\n\n  /**\n   * Clear all\n   */\n  clearAll: function clearAll() {\n    store.clearAll();\n  }\n};\nexport default Storage;",{"version":3,"sources":["/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/core/helpers/storage.js"],"names":["LocalStorage","Cookie","getKey","key","isSupportStorage","window","localStorage","store","Storage","set","value","expireSeconds","JSON","stringify","Date","getTime","get","defaultVal","parse","e","getKeysByPrefix","prefix","keys","each","indexOf","push","remove","getDayDuration","days","oneDaySeconds","getMinuteDuration","minute","removeByPrefix","Array","isArray","length","forEach","has","clearAll"],"mappings":"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","sourcesContent":["import LocalStorage from '@core/helpers/localstorage'\nimport Cookie from '@core/helpers/cookie'\n\nconst getKey = (key) => `lionnix_$_$_${key}`\nconst isSupportStorage =\n  typeof window !== 'undefined' && typeof window.localStorage !== 'undefined'\nconst store = isSupportStorage ? LocalStorage : Cookie\n\nconst Storage = {\n  /**\n   * Set storage value\n   * @param key\n   * @param value\n   * @param expireSeconds\n   */\n  set(key, value, expireSeconds = null) {\n    value = JSON.stringify(value)\n\n    if (expireSeconds) {\n      store.set(getKey(key), value, new Date().getTime() + expireSeconds * 1000)\n    } else {\n      store.set(getKey(key), value)\n    }\n  },\n\n  /**\n   * Get storage value\n   * @param key\n   * @param defaultVal\n   * @return {null}\n   */\n  get(key, defaultVal = null) {\n    const value = store.get(getKey(key))\n\n    try {\n      return JSON.parse(value)\n    } catch (e) {\n      return defaultVal\n    }\n  },\n\n  /**\n   * Get keys by prefix\n   * @param prefix\n   */\n  getKeysByPrefix(prefix) {\n    const keys = []\n\n    store.each((value, key) => {\n      if (key && key.indexOf(prefix) === 0) {\n        keys.push(key)\n      }\n    })\n\n    return keys\n  },\n\n  /**\n   * Remove by key\n   * @param key\n   */\n  remove(key) {\n    store.remove(getKey(key))\n  },\n\n  /**\n   * Get expire duration of days\n   * @param days\n   * @return {number} the expire seconds of days\n   */\n  getDayDuration(days) {\n    const oneDaySeconds = 60 * 60 * 24\n\n    return days * oneDaySeconds\n  },\n\n  /**\n   * Get expire duration of minutes\n   * @param minute\n   * @return {number} the expire seconds of minutes\n   */\n  getMinuteDuration(minute) {\n    return minute * 60\n  },\n\n  /**\n   * Remove by prefix\n   * @param {string} prefix\n   */\n  removeByPrefix(prefix) {\n    const keys = this.getKeysByPrefix(prefix)\n\n    if (Array.isArray(keys) && keys.length) {\n      keys.forEach((key) => this.remove(key))\n    }\n  },\n\n  /**\n   * Has storage by key\n   * @param key\n   * @return {boolean}\n   */\n  has(key) {\n    if (typeof store.has === 'undefined') {\n      return typeof this.get(getKey(key)) !== 'undefined'\n    }\n\n    return store.get(getKey(key))\n  },\n\n  /**\n   * Clear all\n   */\n  clearAll() {\n    store.clearAll()\n  },\n}\n\nexport default Storage\n"]}]}