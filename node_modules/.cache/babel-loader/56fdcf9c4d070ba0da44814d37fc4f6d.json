{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/OrderMappingFails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/OrderMappingFails.vue","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { VclTable } from 'vue-content-loading';\nimport { mapActions, mapState } from 'vuex';\nimport mixinRoute from '@core/mixins/route';\nimport mixinTable from '@core/mixins/table';\nimport EmptySearchResult from '@components/shared/EmptySearchResult';\nimport MOdalUpdateAndRetryMapping from './components/ModalUpdateAndRetryMapping';\nexport default {\n  name: 'ProductMappingList',\n  mixins: [mixinRoute, mixinTable],\n  components: {\n    VclTable: VclTable,\n    EmptySearchResult: EmptySearchResult,\n    MOdalUpdateAndRetryMapping: MOdalUpdateAndRetryMapping\n  },\n  computed: _objectSpread(_objectSpread({}, mapState('orderMapping', {\n    orderMappingsFails: function orderMappingsFails(state) {\n      return state.orderMappingFails;\n    },\n    count: function count(state) {\n      return state.orderMappingFailsCount;\n    },\n    products: function products(state) {\n      return state.productTypes;\n    }\n  })), {}, {\n    items: function items() {\n      return this.orderMappingsFails;\n    }\n  }),\n  data: function data() {\n    return {\n      isFetching: false,\n      isVisibleRetryMapping: false,\n      selectedOrderId: 0,\n      actions: {\n        retry: {\n          title: 'Retry',\n          isNeedConfirm: true\n        }\n      }\n    };\n  },\n  created: function created() {\n    this.filter = this.getRouteQuery();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions('orderMapping', {\n    fetchOrderMappingFails: 'fetchOrderMappingFails',\n    fetchProductTypes: 'fetchProductTypes',\n    retryOrderMappingFails: 'retryOrderMappingFails'\n  })), {}, {\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isFetching = true;\n                this.handleUpdateRouteQuery();\n                _context.next = 4;\n                return Promise.all([this.fetchOrderMappingFails(this.filter), this.fetchProductTypes()]);\n\n              case 4:\n                this.isFetching = false;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    updateAndRetryItem: function updateAndRetryItem(item) {\n      this.selectedOrderId = item.id;\n      this.isVisibleRetryMapping = true;\n    },\n    retryAllItems: function () {\n      var _retryAllItems = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var responseRetry;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.retryOrderMappingFails({\n                  ids: this.orderMappingsFails.map(function (order) {\n                    return order.id;\n                  })\n                });\n\n              case 2:\n                responseRetry = _context2.sent;\n\n                if (!(!responseRetry || !responseRetry.success)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                this.$toast.open({\n                  type: 'error',\n                  message: responseRetry.message\n                });\n                this.isSaving = false;\n                return _context2.abrupt(\"return\");\n\n              case 7:\n                _context2.next = 9;\n                return this.init();\n\n              case 9:\n                this.$set(this.action, 'selected', []);\n                this.$toast.open({\n                  type: 'success',\n                  message: 'Retry successfully'\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function retryAllItems() {\n        return _retryAllItems.apply(this, arguments);\n      }\n\n      return retryAllItems;\n    }(),\n    handleActionItem: function () {\n      var _handleActionItem = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.action.current === 'retry')) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                _context3.next = 3;\n                return this.retryAllItems();\n\n              case 3:\n                return _context3.abrupt(\"return\");\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function handleActionItem() {\n        return _handleActionItem.apply(this, arguments);\n      }\n\n      return handleActionItem;\n    }()\n  }),\n  watch: {\n    filter: {\n      handler: function handler() {\n        this.init();\n      },\n      deep: true\n    }\n  }\n};",null]}