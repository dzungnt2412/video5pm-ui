{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/components/shared/modal/ModalImport.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/components/shared/modal/ModalImport.vue","mtime":1605110572645},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'ModalImport',\n  props: {\n    visible: {\n      type: Boolean\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    supportUrl: {\n      type: String,\n      default: ''\n    },\n    uploading: {\n      type: Boolean,\n      default: false\n    },\n    accept: {\n      type: [Object, Array, String],\n      default: ''\n    },\n    error: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      isSubmit: false,\n      file: null,\n      isVisible: false,\n      isValid: true\n    };\n  },\n  methods: {\n    handleClose: function handleClose() {\n      this.$emit('update:visible', false);\n    },\n    handleSave: function handleSave() {\n      if (this.uploading) {\n        console.log('selected');\n        return;\n      }\n\n      this.$emit('selected', this.file);\n    },\n    handleFileChange: function handleFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n\n      if (files.length) {\n        this.file = files[0];\n      }\n    }\n  },\n  watch: {\n    file: {\n      handler: function handler(val) {\n        this.file = val;\n      },\n      immediate: true\n    },\n    visible: {\n      handler: function handler(val) {\n        this.isVisible = val;\n      },\n      immediate: true\n    }\n  }\n};",{"version":3,"sources":["ModalImport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KADA;AAIA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAJA;AAQA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KARA;AAYA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAZA;AAgBA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAhBA;AAoBA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AApBA,GAFA;AA2BA,EAAA,IA3BA,kBA2BA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA,IAFA;AAGA,MAAA,SAAA,EAAA,KAHA;AAIA,MAAA,OAAA,EAAA;AAJA,KAAA;AAMA,GAlCA;AAmCA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA,KAAA;AACA,KAHA;AAIA,IAAA,UAJA,wBAIA;AACA,UAAA,KAAA,SAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,UAAA;AACA;AACA;;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,KAAA,IAAA;AACA,KAVA;AAWA,IAAA,gBAXA,4BAWA,CAXA,EAWA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,CAAA,CAAA,YAAA,CAAA,KAAA;;AAEA,UAAA,KAAA,CAAA,MAAA,EAAA;AACA,aAAA,IAAA,GAAA,KAAA,CAAA,CAAA,CAAA;AACA;AACA;AAjBA,GAnCA;AAsDA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,OAAA,EAAA,iBAAA,GAAA,EAAA;AACA,aAAA,IAAA,GAAA,GAAA;AACA,OAHA;AAIA,MAAA,SAAA,EAAA;AAJA,KADA;AAOA,IAAA,OAAA,EAAA;AACA,MAAA,OAAA,EAAA,iBAAA,GAAA,EAAA;AACA,aAAA,SAAA,GAAA,GAAA;AACA,OAHA;AAIA,MAAA,SAAA,EAAA;AAJA;AAPA;AAtDA,CAAA","sourcesContent":["<template>\n  <p-modal :title=\"title\" :active.sync=\"isVisible\" @close=\"handleClose\">\n    <slot name=\"prepend\"></slot>\n    <div\n      class=\"form-group\"\n      :class=\"[{ 'has-success': !error }, { 'has-danger': error }]\"\n    >\n      <p-upload v-model=\"file\" :accept=\"accept\">\n        <div class=\"btn btn-primary\">\n          <p-icon name=\"upload\"></p-icon>\n          <span class=\"ml-10\">Ch·ªçn file</span>\n        </div>\n      </p-upload>\n      <span class=\"ml-10\" v-if=\"!file\"></span>\n      <span class=\"ml-10\" v-else>{{ file.name }}</span>\n      <span class=\"invalid-feedback\" v-if=\"error\">\n        {{ error }}\n      </span>\n    </div>\n    <slot />\n\n    <template slot=\"footer\">\n      <p-button type=\"default\" @click=\"handleClose\">\n        <span>Cancel</span>\n      </p-button>\n      <p-button\n        type=\"primary\"\n        @click=\"handleSave\"\n        :disabled=\"!file && uploading\"\n      >\n        <span>Upload file</span>\n      </p-button>\n    </template>\n  </p-modal>\n</template>\n\n<script>\nexport default {\n  name: 'ModalImport',\n  props: {\n    visible: {\n      type: Boolean,\n    },\n    title: {\n      type: String,\n      default: '',\n    },\n    supportUrl: {\n      type: String,\n      default: '',\n    },\n    uploading: {\n      type: Boolean,\n      default: false,\n    },\n    accept: {\n      type: [Object, Array, String],\n      default: '',\n    },\n    error: {\n      type: String,\n      default: '',\n    },\n  },\n  data() {\n    return {\n      isSubmit: false,\n      file: null,\n      isVisible: false,\n      isValid: true,\n    }\n  },\n  methods: {\n    handleClose() {\n      this.$emit('update:visible', false)\n    },\n    handleSave() {\n      if (this.uploading) {\n        console.log('selected')\n        return\n      }\n      this.$emit('selected', this.file)\n    },\n    handleFileChange(e) {\n      const files = e.target.files || e.dataTransfer.files\n\n      if (files.length) {\n        this.file = files[0]\n      }\n    },\n  },\n  watch: {\n    file: {\n      handler: function(val) {\n        this.file = val\n      },\n      immediate: true,\n    },\n    visible: {\n      handler: function(val) {\n        this.isVisible = val\n      },\n      immediate: true,\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/components/shared/modal"}]}