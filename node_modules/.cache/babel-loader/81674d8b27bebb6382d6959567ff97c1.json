{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/kit/Accordion.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/kit/Accordion.vue","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Accordion',\n  props: {\n    initialOpenItem: {\n      required: false,\n      type: [Number, String],\n      default: null\n    },\n    initialOpenItems: {\n      required: false,\n      type: Array,\n      default: null,\n      validator: function validator(items) {\n        return Array.isArray(items) && !items.some(function (n) {\n          return typeof n !== 'number';\n        });\n      }\n    },\n    caretAnimation: {\n      required: false,\n      type: Object,\n      default: function _default() {\n        return {\n          duration: '450ms',\n          timerFunc: 'ease'\n        };\n      },\n      validator: function validator(config) {\n        var isValid = typeof config.duration === 'string' && typeof config.timerFunc === 'string' || config.none === true;\n        return isValid;\n      }\n    },\n    dropdown: {\n      required: false,\n      type: Boolean,\n      default: false\n    },\n    icon: {\n      required: false,\n      type: String,\n      default: 'caret',\n      validator: function validator(choice) {\n        var isValid = choice === 'caret' || choice === 'plus-minus' || choice === 'custom';\n        return isValid;\n      }\n    },\n    slide: {\n      required: false,\n      type: Object,\n      default: function _default() {\n        return {\n          duration: '700ms',\n          timerFunc: 'ease'\n        };\n      },\n      validator: function validator(config) {\n        var isValid = typeof config.duration === 'string' && typeof config.timerFunc === 'string';\n        return isValid;\n      }\n    },\n    expand: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$on('child-registered', function (child) {\n      var id = _this.getNextId();\n\n      child.setUniqueId(id);\n      _this.children_toggle_status[id] = false;\n    });\n    this.$on('child-clicked', this.handleChildClicked);\n    this.$on('child-removed', function (child_id) {\n      delete _this.children_toggle_status[child_id];\n    });\n    this.$nextTick(function () {\n      _this.openInitialItems(_this.$children.length);\n    });\n  },\n  data: function data() {\n    return {\n      next_id: 1,\n      children_toggle_status: {}\n    };\n  },\n  methods: {\n    getNextId: function getNextId() {\n      var v = this.next_id.toString(10);\n      this.next_id += 1;\n      return v;\n    },\n    handleChildClicked: function handleChildClicked(child_id) {\n      if (!this.dropdown) {\n        for (var id in this.children_toggle_status) {\n          if (this.children_toggle_status[id] && id !== child_id) {\n            this.$emit('toggle-child', id);\n            this.children_toggle_status[id] = false;\n          }\n        }\n      }\n\n      this.children_toggle_status[child_id] = !this.children_toggle_status[child_id]; // this.$emit('toggle-child', child_id)\n    },\n    openInitialItems: function openInitialItems(items_length) {\n      var _this2 = this;\n\n      var i = this.initialOpenItem;\n      var is = this.initialOpenItems;\n\n      if (i !== null) {\n        this.openInitialItem(i, items_length);\n      } else if (is !== null) {\n        is.forEach(function (item) {\n          _this2.openInitialItem(item, items_length);\n        });\n      }\n    },\n    openInitialItem: function openInitialItem(item, items_length) {\n      var num_item = typeof item === 'number' ? item : parseInt(item, 10);\n\n      if (num_item > 0 && num_item <= items_length) {\n        this.handleChildClicked(String(num_item));\n      } else {\n        throw new Error(\"There are only \".concat(items_length, \" AccordionItems, \").concat(num_item, \" is out of bounds. [indexing from 1]\"));\n      }\n    },\n    handleToggleAll: function handleToggleAll(newStatus) {\n      var _this3 = this;\n\n      Object.keys(this.children_toggle_status).forEach(function (key) {\n        var current = _this3.children_toggle_status[key];\n        _this3.children_toggle_status[key] = newStatus;\n\n        if (current !== newStatus) {\n          _this3.$emit('toggle-child', key);\n        }\n      });\n    }\n  },\n  watch: {\n    expand: function expand(val) {\n      this.handleToggleAll(val);\n    }\n  }\n};",null]}