{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/OptionMappingList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/OptionMappingList.vue","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { VclTable } from 'vue-content-loading';\nimport { mapActions, mapState, mapMutations } from 'vuex';\nimport mixinRoute from '@core/mixins/route';\nimport mixinTable from '@core/mixins/table';\nimport EmptySearchResult from '@components/shared/EmptySearchResult';\nimport { types } from '../constant';\nimport { FETCH_ORDER_MAPPINGS } from '../store';\nexport default {\n  name: 'OptionMappingList',\n  mixins: [mixinRoute, mixinTable],\n  components: {\n    VclTable: VclTable,\n    EmptySearchResult: EmptySearchResult\n  },\n  computed: _objectSpread(_objectSpread({}, mapState('orderMapping', {\n    orderMappingsList: function orderMappingsList(state) {\n      return state.orderMappingsList;\n    },\n    count: function count(state) {\n      return state.orderMappingsCount;\n    },\n    products: function products(state) {\n      return state.productTypes;\n    }\n  })), {}, {\n    formatDisplayRules: function formatDisplayRules() {\n      return function (item) {\n        if (!item.rules || item.rules.length === 0) {\n          return [];\n        }\n\n        return item.rules.reduce(function (acc, rule) {\n          if (rule.column === 'option_set') {\n            acc.push({\n              name: rule.condition,\n              values: []\n            });\n          } else {\n            acc[acc.length - 1].values.push(rule.condition);\n          }\n\n          return acc;\n        }, []).map(function (optionSet) {\n          return optionSet.values.join(', ');\n        });\n      };\n    }\n  }),\n  data: function data() {\n    return {\n      isFetching: false,\n      filter: {\n        product_type_ids: []\n      }\n    };\n  },\n  created: function created() {\n    this.filter = this.getRouteQuery();\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions('orderMapping', {\n    fetchOrderMappingList: 'fetchOrderMappingList',\n    fetchProductTypes: 'fetchProductTypes',\n    deleteOrderMapping: 'deleteOrderMapping'\n  })), mapMutations('orderMapping', {\n    updateStateOrderMappings: FETCH_ORDER_MAPPINGS\n  })), {}, {\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isFetching = true;\n                this.handleUpdateRouteQuery();\n                _context.next = 4;\n                return Promise.all([this.fetchOrderMappingList({\n                  type: types.option,\n                  payload: this.filter\n                }), this.fetchProductTypes()]);\n\n              case 4:\n                this.isFetching = false;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    showConfirmDeleteMapping: function showConfirmDeleteMapping(item) {\n      var _this = this;\n\n      this.$dialog.confirm({\n        title: \"Delete option mapping?\",\n        message: \"Are you sure you want to delete this option mapping?\",\n        confirmText: 'Delete',\n        onConfirm: function onConfirm() {\n          return _this.deleteMapping(item);\n        },\n        type: 'danger'\n      });\n    },\n    deleteMapping: function () {\n      var _deleteMapping = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(item) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.isFetching = true;\n                _context2.next = 3;\n                return this.deleteOrderMapping({\n                  type: types.option,\n                  id: item.id\n                });\n\n              case 3:\n                response = _context2.sent;\n\n                if (response.success) {\n                  this.$toast.open({\n                    type: 'success',\n                    message: 'Your option mapping was deleted'\n                  });\n                  this.fetchOrderMappingList({\n                    type: types.option,\n                    payload: this.filter\n                  });\n                } else {\n                  this.$toast.open({\n                    type: 'error',\n                    message: response.message || 'Something went wrong. Please try again later'\n                  });\n                }\n\n                this.isFetching = false;\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function deleteMapping(_x) {\n        return _deleteMapping.apply(this, arguments);\n      }\n\n      return deleteMapping;\n    }(),\n    editMapping: function editMapping(item) {\n      this.$router.push({\n        name: 'option-mapping-update',\n        params: {\n          id: item.id\n        }\n      });\n    },\n    addNewRule: function addNewRule() {\n      this.$router.push({\n        name: 'option-mapping-_new'\n      });\n    },\n    onProductTypeSelect: function onProductTypeSelect(val) {\n      this.filter.product_type_ids = val;\n    }\n  }),\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    this.updateStateOrderMappings([]);\n    next();\n  },\n  watch: {\n    filter: {\n      handler: function handler() {\n        this.init();\n      },\n      deep: true\n    }\n  }\n};",{"version":3,"sources":["OptionMappingList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"page\">\n    <div class=\"page-header\">\n      <div class=\"d-flex align-items-center justify-content-between\">\n        <h1 class=\"page-title\">Option Mapping Rules</h1>\n        <div class=\"page-header-group-actions__right\">\n          <p-button @click=\"addNewRule\">\n            Add new rule\n          </p-button>\n        </div>\n      </div>\n    </div>\n    <div class=\"page-content container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-xl-12\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <p-select\n                placeholder=\"Filter by Lionnix product\"\n                class=\"mb-2\"\n                :value=\"filter.product_type_ids\"\n                @input=\"onProductTypeSelect\"\n              >\n                <option :value=\"[]\">All</option>\n                <option\n                  v-for=\"(product, index) in products\"\n                  :key=\"index\"\n                  :value=\"[product.id]\"\n                >\n                  {{ product.name }}\n                </option>\n              </p-select>\n              <VclTable class=\"my-20\" v-if=\"isFetching\"> </VclTable>\n              <template v-else-if=\"orderMappingsList.length\">\n                <div class=\"table-responsive\">\n                  <table class=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th>Lionnix Product</th>\n                        <th>Options</th>\n                        <th>Date</th>\n                        <th class=\"text-right\">\n                          <span class=\"mr-10\">Action</span>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"(item, i) in orderMappingsList\" :key=\"i\">\n                        <td>{{ item.product_type_name }}</td>\n                        <td>\n                          <div\n                            v-for=\"(line, index) in formatDisplayRules(item)\"\n                            class=\"d-flex\"\n                            :key=\"index\"\n                          >\n                            {{ line }}\n                          </div>\n                        </td>\n                        <td>{{ item.created_at | date }}</td>\n                        <td class=\"text-right\">\n                          <div class=\"d-flex justify-content-end\">\n                            <p-button\n                              type=\"default\"\n                              icon=\"edit\"\n                              size=\"sm\"\n                              @click=\"editMapping(item)\"\n                            ></p-button>\n                            <p-button\n                              class=\"ml-2\"\n                              type=\"danger\"\n                              size=\"sm\"\n                              icon=\"close\"\n                              @click=\"showConfirmDeleteMapping(item)\"\n                            ></p-button>\n                          </div>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div class=\"d-flex justify-content-between align-items-center\">\n                  <span>\n                    {{ paginationLabel }}\n                  </span>\n                  <p-pagination\n                    :total=\"count\"\n                    :perPage=\"filter.limit\"\n                    :current.sync=\"filter.page\"\n                    size=\"sm\"\n                  >\n                  </p-pagination>\n                </div>\n              </template>\n              <EmptySearchResult\n                v-else\n                title=\"No option mappings found\"\n              ></EmptySearchResult>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { VclTable } from 'vue-content-loading'\nimport { mapActions, mapState, mapMutations } from 'vuex'\nimport mixinRoute from '@core/mixins/route'\nimport mixinTable from '@core/mixins/table'\nimport EmptySearchResult from '@components/shared/EmptySearchResult'\nimport { types } from '../constant'\nimport { FETCH_ORDER_MAPPINGS } from '../store'\nexport default {\n  name: 'OptionMappingList',\n  mixins: [mixinRoute, mixinTable],\n  components: {\n    VclTable,\n    EmptySearchResult,\n  },\n  computed: {\n    ...mapState('orderMapping', {\n      orderMappingsList: (state) => state.orderMappingsList,\n      count: (state) => state.orderMappingsCount,\n      products: (state) => state.productTypes,\n    }),\n    formatDisplayRules() {\n      return (item) => {\n        if (!item.rules || item.rules.length === 0) {\n          return []\n        }\n        return item.rules\n          .reduce((acc, rule) => {\n            if (rule.column === 'option_set') {\n              acc.push({\n                name: rule.condition,\n                values: [],\n              })\n            } else {\n              acc[acc.length - 1].values.push(rule.condition)\n            }\n            return acc\n          }, [])\n          .map((optionSet) => {\n            return optionSet.values.join(', ')\n          })\n      }\n    },\n  },\n  data() {\n    return {\n      isFetching: false,\n      filter: {\n        product_type_ids: [],\n      },\n    }\n  },\n  created() {\n    this.filter = this.getRouteQuery()\n  },\n  methods: {\n    ...mapActions('orderMapping', {\n      fetchOrderMappingList: 'fetchOrderMappingList',\n      fetchProductTypes: 'fetchProductTypes',\n      deleteOrderMapping: 'deleteOrderMapping',\n    }),\n    ...mapMutations('orderMapping', {\n      updateStateOrderMappings: FETCH_ORDER_MAPPINGS,\n    }),\n    async init() {\n      this.isFetching = true\n      this.handleUpdateRouteQuery()\n      await Promise.all([\n        this.fetchOrderMappingList({\n          type: types.option,\n          payload: this.filter,\n        }),\n        this.fetchProductTypes(),\n      ])\n      this.isFetching = false\n    },\n    showConfirmDeleteMapping(item) {\n      this.$dialog.confirm({\n        title: `Delete option mapping?`,\n        message: `Are you sure you want to delete this option mapping?`,\n        confirmText: 'Delete',\n        onConfirm: () => this.deleteMapping(item),\n        type: 'danger',\n      })\n    },\n    async deleteMapping(item) {\n      this.isFetching = true\n      const response = await this.deleteOrderMapping({\n        type: types.option,\n        id: item.id,\n      })\n      if (response.success) {\n        this.$toast.open({\n          type: 'success',\n          message: 'Your option mapping was deleted',\n        })\n        this.fetchOrderMappingList({\n          type: types.option,\n          payload: this.filter,\n        })\n      } else {\n        this.$toast.open({\n          type: 'error',\n          message:\n            response.message || 'Something went wrong. Please try again later',\n        })\n      }\n      this.isFetching = false\n    },\n    editMapping(item) {\n      this.$router.push({\n        name: 'option-mapping-update',\n        params: { id: item.id },\n      })\n    },\n    addNewRule() {\n      this.$router.push({\n        name: 'option-mapping-_new',\n      })\n    },\n    onProductTypeSelect(val) {\n      this.filter.product_type_ids = val\n    },\n  },\n  beforeRouteLeave(to, from, next) {\n    this.updateStateOrderMappings([])\n    next()\n  },\n  watch: {\n    filter: {\n      handler: function() {\n        this.init()\n      },\n      deep: true,\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/packages/order-mapping/views"}]}