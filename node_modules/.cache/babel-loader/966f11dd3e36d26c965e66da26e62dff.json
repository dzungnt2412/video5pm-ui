{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/core/mixins/table.js","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/core/mixins/table.js","mtime":1603898990376},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1597736267502}],"contextDependencies":[],"result":["import { cloneDeep } from '@core/utils';\nexport default {\n  computed: {\n    totalSelected: function totalSelected() {\n      return this.action && this.action.selected ? this.action.selected.length : 0;\n    },\n    paginationLabel: function paginationLabel() {\n      var page = this.filter.page ? this.filter.page : 0;\n      var from = (page - 1) * this.filter.limit || 1;\n      var totalPage = Math.ceil(this.count / this.filter.limit);\n\n      if (totalPage < this.filter.page || !from) {\n        return '';\n      }\n\n      var to = this.count >= this.filter.limit ? page * this.filter.limit : this.count;\n\n      if (to > this.count) {\n        to = this.count;\n      }\n\n      return to > from ? \"Hi\\u1EC3n th\\u1ECB \".concat(from, \"-\").concat(to, \" trong t\\u1ED5ng \").concat(this.count, \" k\\u1EBFt qu\\u1EA3\") : '';\n    },\n    selectedIds: function selectedIds() {\n      return this.action && this.action.selected && this.action.selected.length ? this.action.selected.map(function (_ref) {\n        var id = _ref.id;\n        return id;\n      }) : [];\n    },\n    items: function items() {\n      return [];\n    },\n    isAllChecked: function isAllChecked() {\n      return this.action.selected && this.items.length === this.action.selected.length && this.totalSelected > 0;\n    },\n    isIndeterminate: function isIndeterminate() {\n      return this.action.selected ? this.action.selected.length > 0 && this.action.selected.length < this.items.length : false;\n    },\n    selectionCountText: function selectionCountText() {\n      return \"\".concat(this.totalSelected, \" \\u0111\\u01A1n h\\xE0ng \\u0111\\xE3 \\u0111\\u01B0\\u1EE3c ch\\u1ECDn\");\n    }\n  },\n  data: function data() {\n    return {\n      filter: {\n        page: 1,\n        limit: 20,\n        search: ''\n      },\n      action: {\n        current: '',\n        selected: [],\n        visibleConfirm: false\n      },\n      actions: {}\n    };\n  },\n  methods: {\n    /**\n     * On multiple items selected\n     * @param selected\n     */\n    onMultipleSelect: function onMultipleSelect(selected) {\n      this.$set(this.action, 'selected', selected);\n    },\n    handleActionItem: function handleActionItem() {},\n\n    /**\n     * Handle action\n     * @param current\n     * @param item\n     */\n    handleAction: function handleAction(current) {\n      var _this = this;\n\n      var item = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.action.current = current;\n      this.action.item = item;\n\n      if (this.actions && this.actions[current] && this.actions[current].isNeedConfirm) {\n        this.$dialog.confirm({\n          title: 'Are you sure you want to do this?',\n          onConfirm: function onConfirm() {\n            return _this.handleActionItem();\n          }\n        });\n        return;\n      }\n\n      this.handleActionItem();\n    },\n    handleSearch: function handleSearch(e) {\n      // Default result after search in page 1\n      this.filter.page = 1;\n      this.$set(this.filter, 'search', e.target.value);\n    },\n    clearSearch: function clearSearch() {\n      this.$set(this.filter, 'search', '');\n    },\n\n    /**\n     * On action confirm\n     */\n    onActionConfirm: function onActionConfirm() {\n      this.handleActionItem();\n    },\n\n    /**\n     * Toggle select all\n     */\n    toggleSelectAll: function toggleSelectAll() {\n      var selected = [];\n\n      if (this.isAllChecked) {\n        selected = [];\n      } else {\n        selected = cloneDeep(this.items);\n      }\n\n      this.$set(this.action, 'selected', selected);\n    }\n  },\n  watch: {\n    $route: function $route() {\n      if (this.action.selected) {\n        this.$set(this.action, 'selected', []);\n      }\n    }\n  }\n};",{"version":3,"sources":["/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/core/mixins/table.js"],"names":["cloneDeep","computed","totalSelected","action","selected","length","paginationLabel","page","filter","from","limit","totalPage","Math","ceil","count","to","selectedIds","map","id","items","isAllChecked","isIndeterminate","selectionCountText","data","search","current","visibleConfirm","actions","methods","onMultipleSelect","$set","handleActionItem","handleAction","item","isNeedConfirm","$dialog","confirm","title","onConfirm","handleSearch","e","target","value","clearSearch","onActionConfirm","toggleSelectAll","watch","$route"],"mappings":"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","sourcesContent":["import { cloneDeep } from '@core/utils'\n\nexport default {\n  computed: {\n    totalSelected() {\n      return this.action && this.action.selected\n        ? this.action.selected.length\n        : 0\n    },\n    paginationLabel() {\n      const page = this.filter.page ? this.filter.page : 0\n      const from = (page - 1) * this.filter.limit || 1\n      const totalPage = Math.ceil(this.count / this.filter.limit)\n\n      if (totalPage < this.filter.page || !from) {\n        return ''\n      }\n\n      let to =\n        this.count >= this.filter.limit ? page * this.filter.limit : this.count\n\n      if (to > this.count) {\n        to = this.count\n      }\n\n      return to > from\n        ? `Hiển thị ${from}-${to} trong tổng ${this.count} kết quả`\n        : ''\n    },\n    selectedIds() {\n      return this.action && this.action.selected && this.action.selected.length\n        ? this.action.selected.map(({ id }) => id)\n        : []\n    },\n    items() {\n      return []\n    },\n    isAllChecked() {\n      return (\n        this.action.selected &&\n        this.items.length === this.action.selected.length &&\n        this.totalSelected > 0\n      )\n    },\n    isIndeterminate() {\n      return this.action.selected\n        ? this.action.selected.length > 0 &&\n            this.action.selected.length < this.items.length\n        : false\n    },\n    selectionCountText() {\n      return `${this.totalSelected} đơn hàng đã được chọn`\n    },\n  },\n  data() {\n    return {\n      filter: {\n        page: 1,\n        limit: 20,\n        search: '',\n      },\n      action: {\n        current: '',\n        selected: [],\n        visibleConfirm: false,\n      },\n      actions: {},\n    }\n  },\n  methods: {\n    /**\n     * On multiple items selected\n     * @param selected\n     */\n    onMultipleSelect(selected) {\n      this.$set(this.action, 'selected', selected)\n    },\n\n    handleActionItem() {},\n\n    /**\n     * Handle action\n     * @param current\n     * @param item\n     */\n    handleAction(current, item = {}) {\n      this.action.current = current\n      this.action.item = item\n\n      if (\n        this.actions &&\n        this.actions[current] &&\n        this.actions[current].isNeedConfirm\n      ) {\n        this.$dialog.confirm({\n          title: 'Are you sure you want to do this?',\n          onConfirm: () => this.handleActionItem(),\n        })\n        return\n      }\n\n      this.handleActionItem()\n    },\n\n    handleSearch(e) {\n      // Default result after search in page 1\n      this.filter.page = 1\n      this.$set(this.filter, 'search', e.target.value)\n    },\n\n    clearSearch() {\n      this.$set(this.filter, 'search', '')\n    },\n    /**\n     * On action confirm\n     */\n    onActionConfirm() {\n      this.handleActionItem()\n    },\n\n    /**\n     * Toggle select all\n     */\n    toggleSelectAll() {\n      let selected = []\n\n      if (this.isAllChecked) {\n        selected = []\n      } else {\n        selected = cloneDeep(this.items)\n      }\n\n      this.$set(this.action, 'selected', selected)\n    },\n  },\n  watch: {\n    $route: function() {\n      if (this.action.selected) {\n        this.$set(this.action, 'selected', [])\n      }\n    },\n  },\n}\n"]}]}