{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/views/SignIn.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/views/SignIn.vue","mtime":1605110441120},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapMutations, mapState } from 'vuex';\nimport VueRecaptcha from 'vue-recaptcha';\nimport { SHOW_NOTIFICATION_MESSAGE } from '@/packages/shared/store';\nimport Storage from '@core/helpers/storage';\nexport default {\n  components: {\n    VueRecaptcha: VueRecaptcha\n  },\n  name: 'SignIn',\n  data: function data() {\n    return {\n      email: '',\n      password: '',\n      isLoading: false,\n      result: {\n        success: false,\n        message: ''\n      },\n      form: {\n        checkCaptcha: false\n      },\n      count: 0,\n      status: false,\n      requiredPassword: false,\n      requiredEmail: false,\n      check: true\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState('auth', {\n    currentUser: function currentUser(state) {\n      return state.user;\n    }\n  })), {}, {\n    recapchaKey: function recapchaKey() {\n      return \"\".concat(process.env.VUE_APP_RECAPCHA_KEY);\n    }\n  }),\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions('auth', ['signIn'])), mapMutations('shared', [SHOW_NOTIFICATION_MESSAGE])), {}, {\n    redirect: function redirect() {\n      return this.$router.push('/forgot');\n    },\n    checkRequired: function checkRequired() {\n      var result = true;\n\n      if (this.password == '') {\n        this.requiredPassword = true;\n        result = false;\n      } else {\n        this.requiredPassword = false;\n      }\n\n      if (this.email == '') {\n        this.requiredEmail = true;\n        result = false;\n      } else {\n        this.requiredEmail = false;\n      }\n\n      return result;\n    },\n    pushNoti: function pushNoti() {\n      this.showNotificationMessage('This is message');\n    },\n    onSignIn: function () {\n      var _onSignIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.checkRequired()) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                data = {\n                  password: this.password\n                };\n\n                if (this.email.includes('@')) {\n                  data.email = this.email.trim();\n                } else {\n                  data.username = this.email.trim();\n                }\n\n                if (!(!data.email && !data.username)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                this.$toast.open({\n                  type: 'error',\n                  message: 'Username/Email required'\n                });\n                return _context.abrupt(\"return\");\n\n              case 7:\n                if (data.password) {\n                  _context.next = 10;\n                  break;\n                }\n\n                this.$toast.open({\n                  type: 'error',\n                  message: 'Password required'\n                });\n                return _context.abrupt(\"return\");\n\n              case 10:\n                if (!(this.count >= 1 && !this.form.checkCaptcha)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                this.check = false;\n                return _context.abrupt(\"return\");\n\n              case 13:\n                this.isLoading = true;\n                _context.next = 16;\n                return this.signIn(data);\n\n              case 16:\n                this.result = _context.sent;\n                setTimeout(function () {\n                  _this.isLoading = false;\n                }, 2000);\n\n                if (this.result.number_incorrect >= 3) {\n                  this.count += 1;\n                }\n\n                if (!this.result.success) {\n                  _context.next = 23;\n                  break;\n                }\n\n                setTimeout(function () {\n                  _this.$router.push('/');\n                }, 2000);\n                _context.next = 31;\n                break;\n\n              case 23:\n                if (!this.result.userInActive) {\n                  _context.next = 29;\n                  break;\n                }\n\n                Storage.set('userEmail', this.currentUser.email);\n                console.log(this.currentUser);\n                setTimeout(function () {\n                  _this.$router.push('/verify-email');\n                }, 2000);\n                this.$toast.open({\n                  type: 'error',\n                  message: this.result.message\n                });\n                return _context.abrupt(\"return\");\n\n              case 29:\n                if (this.$refs.recapcha) {\n                  this.$refs.recapcha.reset();\n                  this.form.checkCaptcha = false;\n                }\n\n                this.$toast.open({\n                  type: 'error',\n                  message: this.result.message\n                });\n\n              case 31:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onSignIn() {\n        return _onSignIn.apply(this, arguments);\n      }\n\n      return onSignIn;\n    }(),\n    onVerify: function onVerify(response) {\n      if (response) this.form.checkCaptcha = true;\n      this.check = true;\n    }\n  })\n};",null]}