{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/kit/mixins/migrating.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/kit/mixins/migrating.js","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["export default {\n  mounted: function mounted() {\n    if (process.env.NODE_ENV === 'production') return;\n    if (!this.$vnode) return;\n\n    var _this$getMigratingCon = this.getMigratingConfig(),\n        _this$getMigratingCon2 = _this$getMigratingCon.props,\n        props = _this$getMigratingCon2 === void 0 ? {} : _this$getMigratingCon2,\n        _this$getMigratingCon3 = _this$getMigratingCon.events,\n        events = _this$getMigratingCon3 === void 0 ? {} : _this$getMigratingCon3;\n\n    var _this$$vnode = this.$vnode,\n        data = _this$$vnode.data,\n        componentOptions = _this$$vnode.componentOptions;\n    var definedProps = data.attrs || {};\n    var definedEvents = componentOptions.listeners || {};\n\n    for (var propName in definedProps) {\n      if (definedProps.hasOwnProperty(propName) && props[propName]) {\n        console.warn(\"[Element Migrating][\".concat(this.$options.name, \"][Attribute]: \").concat(props[propName]));\n      }\n    }\n\n    for (var eventName in definedEvents) {\n      if (definedEvents.hasOwnProperty(eventName) && events[eventName]) {\n        console.warn(\"[Element Migrating][\".concat(this.$options.name, \"][Event]: \").concat(events[eventName]));\n      }\n    }\n  },\n  methods: {\n    getMigratingConfig: function getMigratingConfig() {\n      return {\n        props: {},\n        events: {}\n      };\n    }\n  }\n};",null]}