{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/kit/AccordionItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/kit/AccordionItem.vue","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PlusMinus from './AccordionPlusMinus.vue';\nimport { transitionEndEventName } from './utils';\nexport default {\n  name: 'AccordionItem',\n  components: {\n    PlusMinus: PlusMinus\n  },\n  data: function data() {\n    return {\n      isOpen: false,\n      autoHeightInterval: null,\n      showCardContent: false,\n      uniqueId: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.$parent.$emit('child-registered', _this);\n\n      _this.$parent.$on('toggle-child', _this.handleToggleRequest);\n\n      var accordionBody = _this.$refs.body;\n      var eName = transitionEndEventName(accordionBody);\n      accordionBody.addEventListener(eName, function () {\n        if (accordionBody.style.height !== '0px') {\n          _this.autoHeightStart(accordionBody);\n        } else {\n          _this.autoHeightStop();\n\n          _this.showCardContent = false;\n        }\n      });\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$parent.$emit('child-removed', this.uniqueId);\n  },\n  watch: {\n    isOpen: function isOpen(newStatus) {\n      if (newStatus) {\n        this.$emit('open');\n      } else {\n        this.$emit('close');\n      }\n\n      this.doTheSlide();\n    }\n  },\n  computed: {\n    config: function config() {\n      var _this$$parent = this.$parent,\n          _this$$parent$caretAn = _this$$parent.caretAnimation,\n          animation = _this$$parent$caretAn === void 0 ? {\n        duration: '450ms',\n        timerFunc: 'ease'\n      } : _this$$parent$caretAn,\n          _this$$parent$dropdow = _this$$parent.dropdown,\n          dropdown = _this$$parent$dropdow === void 0 ? false : _this$$parent$dropdow,\n          _this$$parent$icon = _this$$parent.icon,\n          icon = _this$$parent$icon === void 0 ? 'caret' : _this$$parent$icon,\n          _this$$parent$slide = _this$$parent.slide,\n          slide = _this$$parent$slide === void 0 ? {\n        duration: '700ms',\n        timerFunc: 'ease'\n      } : _this$$parent$slide;\n      return {\n        animation: animation,\n        dropdown: dropdown,\n        icon: icon,\n        slide: slide\n      };\n    },\n    dropdownIconClasses: function dropdownIconClasses() {\n      return {\n        'header-icon': true,\n        'caret-down': !this.isOpen\n      };\n    },\n    card_classes: function card_classes() {\n      return {\n        card: true,\n        'card-active': this.isOpen\n      };\n    },\n    card_content_classes: function card_content_classes() {\n      return {\n        'card-content': true,\n        'is-hidden': !this.showCardContent\n      };\n    },\n    footerClasses: function footerClasses() {\n      return {\n        'card-footer': true,\n        'is-hidden': !this.$slots.footer\n      };\n    },\n    usingCustomIcon: function usingCustomIcon() {\n      return this.config.icon === 'custom';\n    },\n    showCaret: function showCaret() {\n      return this.config.icon === 'caret';\n    },\n    showPlus: function showPlus() {\n      return this.config.icon === 'plus-minus' && !this.isOpen;\n    },\n    showMinus: function showMinus() {\n      return this.config.icon === 'plus-minus' && this.isOpen;\n    },\n    slideStyle: function slideStyle() {\n      var c = this.config.slide;\n      return {\n        transition: \"all \".concat(c.duration, \" \").concat(c.timerFunc)\n      };\n    },\n    iconStyle: function iconStyle() {\n      var c = this.config.animation;\n\n      if (c.none === true) {\n        return {};\n      }\n\n      return {\n        transition: \"all \".concat(c.duration, \" \").concat(c.timerFunc)\n      };\n    }\n  },\n  methods: {\n    handleToggleRequest: function handleToggleRequest(toggleId) {\n      if (toggleId === this.uniqueId) {\n        this.toggleCollapsed();\n      }\n    },\n    setUniqueId: function setUniqueId(id) {\n      this.uniqueId = id;\n    },\n    notifyOfClick: function notifyOfClick() {\n      if (this.uniqueId) {\n        this.$parent.$emit('child-clicked', this.uniqueId);\n      }\n    },\n    collapse: function collapse() {\n      this.isOpen = false;\n    },\n    toggleCollapsed: function toggleCollapsed() {\n      this.isOpen = !this.isOpen;\n    },\n    doTheSlide: function doTheSlide() {\n      var _this2 = this;\n\n      var el = this.$refs.body;\n\n      if (this.isOpen === true) {\n        this.showCardContent = true;\n        this.$nextTick().then(function () {\n          _this2.adjustHeight(el, el.scrollHeight);\n        });\n      } else {\n        this.slideUp(el);\n      }\n    },\n    adjustHeight: function adjustHeight(el, newHeight) {\n      el.style.height = \"\".concat(newHeight, \"px\");\n    },\n    slideUp: function slideUp(el) {\n      if (el.style.height === 'auto') {\n        el.style.height = \"\".concat(el.scrollHeight, \"px\");\n      }\n\n      el.style.height = '0px';\n    },\n    autoHeightStart: function autoHeightStart(el) {\n      var _this3 = this;\n\n      if (this.autoHeightInterval) this.autoHeightStop();\n      this.autoHeightInterval = setInterval(function () {\n        try {\n          var actualHeight = _this3.$refs.bodyContent.scrollHeight + _this3.$refs.bodyFooter.scrollHeight + 1;\n\n          if (el.style.height !== '0px' && actualHeight !== el.style.height && _this3.isOpen) {\n            _this3.adjustHeight(el, actualHeight);\n          }\n        } catch (e) {\n          _this3.autoHeightStop();\n        }\n      }, 100);\n    },\n    autoHeightStop: function autoHeightStop() {\n      clearInterval(this.autoHeightInterval);\n      this.autoHeightInterval = null;\n    }\n  }\n};",null]}