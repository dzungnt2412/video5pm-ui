{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/mixins/export-file.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/mixins/export-file.js","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport http from '@core/services/http';\nimport Browser from '@core/helpers/browser';\nexport default {\n  methods: {\n    exportFile: function () {\n      var _exportFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(result, file_name, bucket_type) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (result.success) {\n                  _context.next = 3;\n                  break;\n                }\n\n                this.$toast.open({\n                  type: 'error',\n                  message: result.message\n                });\n                return _context.abrupt(\"return\");\n\n              case 3:\n                if (!result.queue) {\n                  _context.next = 6;\n                  break;\n                }\n\n                this.$toast.open(\"We're currently exporting file. This should take less than five minutes. An notify will be sent to you once the export is complete.\");\n                return _context.abrupt(\"return\");\n\n              case 6:\n                _context.prev = 6;\n                _context.next = 9;\n                return http.get(\"/uploads/file-export/download?type=\".concat(bucket_type, \"&url=\").concat(result.url), {\n                  type: 'blob'\n                });\n\n              case 9:\n                data = _context.sent;\n                Browser.downloadBlob(data, \"\".concat(file_name));\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](6);\n                this.$toast.open({\n                  type: 'error',\n                  message: 'File error !!!'\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 13]]);\n      }));\n\n      function exportFile(_x, _x2, _x3) {\n        return _exportFile.apply(this, arguments);\n      }\n\n      return exportFile;\n    }()\n  }\n};",{"version":3,"sources":["/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/mixins/export-file.js"],"names":["http","Browser","methods","exportFile","result","file_name","bucket_type","success","$toast","open","type","message","queue","get","url","data","downloadBlob"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,qBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,eAAe;AACbC,EAAAA,OAAO,EAAE;AACDC,IAAAA,UADC;AAAA,kGACUC,MADV,EACkBC,SADlB,EAC6BC,WAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEAF,MAAM,CAACG,OAFP;AAAA;AAAA;AAAA;;AAGH,qBAAKC,MAAL,CAAYC,IAAZ,CAAiB;AAAEC,kBAAAA,IAAI,EAAE,OAAR;AAAiBC,kBAAAA,OAAO,EAAEP,MAAM,CAACO;AAAjC,iBAAjB;AAHG;;AAAA;AAAA,qBAODP,MAAM,CAACQ,KAPN;AAAA;AAAA;AAAA;;AAQH,qBAAKJ,MAAL,CAAYC,IAAZ,CACE,qIADF;AARG;;AAAA;AAAA;AAAA;AAAA,uBAegBT,IAAI,CAACa,GAAL,8CACqBP,WADrB,kBACwCF,MAAM,CAACU,GAD/C,GAEjB;AACEJ,kBAAAA,IAAI,EAAE;AADR,iBAFiB,CAfhB;;AAAA;AAeGK,gBAAAA,IAfH;AAqBHd,gBAAAA,OAAO,CAACe,YAAR,CAAqBD,IAArB,YAA8BV,SAA9B;AArBG;AAAA;;AAAA;AAAA;AAAA;AAuBH,qBAAKG,MAAL,CAAYC,IAAZ,CAAiB;AAAEC,kBAAAA,IAAI,EAAE,OAAR;AAAiBC,kBAAAA,OAAO,EAAE;AAA1B,iBAAjB;;AAvBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AADI,CAAf","sourcesContent":["import http from '@core/services/http'\nimport Browser from '@core/helpers/browser'\nexport default {\n  methods: {\n    async exportFile(result, file_name, bucket_type) {\n      if (!result.success) {\n        this.$toast.open({ type: 'error', message: result.message })\n        return\n      }\n\n      if (result.queue) {\n        this.$toast.open(\n          \"We're currently exporting file. This should take less than five minutes. An notify will be sent to you once the export is complete.\"\n        )\n        return\n      }\n\n      try {\n        const data = await http.get(\n          `/uploads/file-export/download?type=${bucket_type}&url=${result.url}`,\n          {\n            type: 'blob',\n          }\n        )\n        Browser.downloadBlob(data, `${file_name}`)\n      } catch (error) {\n        this.$toast.open({ type: 'error', message: 'File error !!!' })\n      }\n    },\n  },\n}\n"]}]}