{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/kit/Upload/Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/kit/Upload/Upload.vue","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["import _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport ajax from './ajax';\nimport UploadDragger from './UploadDragger';\nexport default {\n  inject: ['uploader'],\n  components: {\n    UploadDragger: UploadDragger\n  },\n  props: {\n    type: String,\n    action: {\n      type: String,\n      required: true\n    },\n    name: {\n      type: String,\n      default: 'file'\n    },\n    data: Object,\n    headers: Object,\n    withCredentials: Boolean,\n    multiple: Boolean,\n    accept: String,\n    onStart: Function,\n    onProgress: Function,\n    onSuccess: Function,\n    onError: Function,\n    beforeUpload: Function,\n    drag: Boolean,\n    onPreview: {\n      type: Function,\n      default: function _default() {}\n    },\n    onRemove: {\n      type: Function,\n      default: function _default() {}\n    },\n    fileList: Array,\n    autoUpload: Boolean,\n    listType: String,\n    httpRequest: {\n      type: Function,\n      default: ajax\n    },\n    disabled: Boolean,\n    limit: Number,\n    onExceed: Function,\n    maxFileSize: {\n      type: Number,\n      default: 500000\n    }\n  },\n  data: function data() {\n    return {\n      mouseover: false,\n      reqs: {}\n    };\n  },\n  methods: {\n    isImage: function isImage(str) {\n      return str.indexOf('image') !== -1;\n    },\n    handleChange: function handleChange(ev) {\n      var files = ev.target.files;\n      if (!files) return;\n      this.uploadFiles(files);\n    },\n    uploadFiles: function uploadFiles(files) {\n      var _this = this;\n\n      if (this.limit && this.fileList.length + files.length > this.limit) {\n        this.onExceed && this.onExceed(files, this.fileList);\n        return;\n      }\n\n      var postFiles = Array.prototype.slice.call(files);\n      postFiles = postFiles.filter(function (_ref) {\n        var size = _ref.size;\n        return size <= _this.maxFileSize;\n      });\n\n      if (!this.multiple) {\n        postFiles = postFiles.slice(0, 1);\n      }\n\n      if (postFiles.length === 0) {\n        return;\n      }\n\n      postFiles.forEach(function (rawFile) {\n        _this.onStart(rawFile);\n\n        if (_this.autoUpload) _this.upload(rawFile);\n      });\n    },\n    upload: function upload(rawFile) {\n      var _this2 = this;\n\n      this.$refs.input.value = null;\n\n      if (!this.beforeUpload) {\n        return this.post(rawFile);\n      }\n\n      var before = this.beforeUpload(rawFile);\n\n      if (before && before.then) {\n        before.then(function (processedFile) {\n          var fileType = Object.prototype.toString.call(processedFile);\n\n          if (fileType === '[object File]' || fileType === '[object Blob]') {\n            if (fileType === '[object Blob]') {\n              processedFile = new File([processedFile], rawFile.name, {\n                type: rawFile.type\n              });\n            }\n\n            for (var p in rawFile) {\n              if (rawFile.hasOwnProperty(p)) {\n                processedFile[p] = rawFile[p];\n              }\n            }\n\n            _this2.post(processedFile);\n          } else {\n            _this2.post(rawFile);\n          }\n        }, function () {\n          _this2.onRemove(null, rawFile);\n        });\n      } else if (before !== false) {\n        this.post(rawFile);\n      } else {\n        this.onRemove(null, rawFile);\n      }\n    },\n    abort: function abort(file) {\n      var reqs = this.reqs;\n\n      if (file) {\n        var uid = file;\n        if (file.uid) uid = file.uid;\n\n        if (reqs[uid]) {\n          reqs[uid].abort();\n        }\n      } else {\n        Object.keys(reqs).forEach(function (uid) {\n          if (reqs[uid]) reqs[uid].abort();\n          delete reqs[uid];\n        });\n      }\n    },\n    post: function post(rawFile) {\n      var _this3 = this;\n\n      var uid = rawFile.uid;\n      var options = {\n        headers: this.headers,\n        withCredentials: this.withCredentials,\n        file: rawFile,\n        data: this.data,\n        filename: this.name,\n        action: this.action,\n        onProgress: function onProgress(e) {\n          _this3.onProgress(e, rawFile);\n        },\n        onSuccess: function onSuccess(res) {\n          _this3.onSuccess(res, rawFile);\n\n          delete _this3.reqs[uid];\n        },\n        onError: function onError(err) {\n          _this3.onError(err, rawFile);\n\n          delete _this3.reqs[uid];\n        }\n      };\n      var req = this.httpRequest(options);\n      this.reqs[uid] = req;\n\n      if (req && req.then) {\n        req.then(options.onSuccess, options.onError);\n      }\n    },\n    handleClick: function handleClick() {\n      if (!this.disabled) {\n        this.$refs.input.value = null;\n        this.$refs.input.click();\n      }\n    },\n    handleKeydown: function handleKeydown(e) {\n      if (e.target !== e.currentTarget) return;\n\n      if (e.keyCode === 13 || e.keyCode === 32) {\n        this.handleClick();\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var handleClick = this.handleClick,\n        drag = this.drag,\n        name = this.name,\n        handleChange = this.handleChange,\n        multiple = this.multiple,\n        accept = this.accept,\n        listType = this.listType,\n        uploadFiles = this.uploadFiles,\n        disabled = this.disabled,\n        handleKeydown = this.handleKeydown;\n    var data = {\n      class: {\n        'el-upload': true\n      },\n      on: {\n        click: handleClick,\n        keydown: handleKeydown\n      }\n    };\n    data.class[\"el-upload--\".concat(listType)] = true;\n    return h(\"div\", _mergeJSXProps([{}, data, {\n      \"attrs\": {\n        \"tabindex\": \"0\"\n      }\n    }]), [drag ? h(\"upload-dragger\", {\n      \"attrs\": {\n        \"disabled\": disabled\n      },\n      \"on\": {\n        \"file\": uploadFiles\n      }\n    }, [this.$slots.default]) : this.$slots.default, h(\"input\", {\n      \"class\": \"el-upload__input\",\n      \"attrs\": {\n        \"type\": \"file\",\n        \"name\": name,\n        \"multiple\": multiple,\n        \"accept\": accept\n      },\n      \"ref\": \"input\",\n      \"on\": {\n        \"change\": handleChange\n      }\n    })]);\n  }\n};",{"version":3,"sources":["Upload.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\nimport ajax from './ajax'\nimport UploadDragger from './UploadDragger'\n\nexport default {\n  inject: ['uploader'],\n  components: {\n    UploadDragger,\n  },\n  props: {\n    type: String,\n    action: {\n      type: String,\n      required: true,\n    },\n    name: {\n      type: String,\n      default: 'file',\n    },\n    data: Object,\n    headers: Object,\n    withCredentials: Boolean,\n    multiple: Boolean,\n    accept: String,\n    onStart: Function,\n    onProgress: Function,\n    onSuccess: Function,\n    onError: Function,\n    beforeUpload: Function,\n    drag: Boolean,\n    onPreview: {\n      type: Function,\n      default: function() {},\n    },\n    onRemove: {\n      type: Function,\n      default: function() {},\n    },\n    fileList: Array,\n    autoUpload: Boolean,\n    listType: String,\n    httpRequest: {\n      type: Function,\n      default: ajax,\n    },\n    disabled: Boolean,\n    limit: Number,\n    onExceed: Function,\n    maxFileSize: {\n      type: Number,\n      default: 500000,\n    },\n  },\n\n  data() {\n    return {\n      mouseover: false,\n      reqs: {},\n    }\n  },\n\n  methods: {\n    isImage(str) {\n      return str.indexOf('image') !== -1\n    },\n    handleChange(ev) {\n      const files = ev.target.files\n\n      if (!files) return\n      this.uploadFiles(files)\n    },\n    uploadFiles(files) {\n      if (this.limit && this.fileList.length + files.length > this.limit) {\n        this.onExceed && this.onExceed(files, this.fileList)\n        return\n      }\n\n      let postFiles = Array.prototype.slice.call(files)\n\n      postFiles = postFiles.filter(({ size }) => {\n        return size <= this.maxFileSize\n      })\n\n      if (!this.multiple) {\n        postFiles = postFiles.slice(0, 1)\n      }\n\n      if (postFiles.length === 0) {\n        return\n      }\n\n      postFiles.forEach((rawFile) => {\n        this.onStart(rawFile)\n        if (this.autoUpload) this.upload(rawFile)\n      })\n    },\n    upload(rawFile) {\n      this.$refs.input.value = null\n\n      if (!this.beforeUpload) {\n        return this.post(rawFile)\n      }\n\n      const before = this.beforeUpload(rawFile)\n      if (before && before.then) {\n        before.then(\n          (processedFile) => {\n            const fileType = Object.prototype.toString.call(processedFile)\n\n            if (fileType === '[object File]' || fileType === '[object Blob]') {\n              if (fileType === '[object Blob]') {\n                processedFile = new File([processedFile], rawFile.name, {\n                  type: rawFile.type,\n                })\n              }\n              for (const p in rawFile) {\n                if (rawFile.hasOwnProperty(p)) {\n                  processedFile[p] = rawFile[p]\n                }\n              }\n              this.post(processedFile)\n            } else {\n              this.post(rawFile)\n            }\n          },\n          () => {\n            this.onRemove(null, rawFile)\n          }\n        )\n      } else if (before !== false) {\n        this.post(rawFile)\n      } else {\n        this.onRemove(null, rawFile)\n      }\n    },\n    abort(file) {\n      const { reqs } = this\n      if (file) {\n        let uid = file\n        if (file.uid) uid = file.uid\n        if (reqs[uid]) {\n          reqs[uid].abort()\n        }\n      } else {\n        Object.keys(reqs).forEach((uid) => {\n          if (reqs[uid]) reqs[uid].abort()\n          delete reqs[uid]\n        })\n      }\n    },\n    post(rawFile) {\n      const { uid } = rawFile\n      const options = {\n        headers: this.headers,\n        withCredentials: this.withCredentials,\n        file: rawFile,\n        data: this.data,\n        filename: this.name,\n        action: this.action,\n        onProgress: (e) => {\n          this.onProgress(e, rawFile)\n        },\n        onSuccess: (res) => {\n          this.onSuccess(res, rawFile)\n          delete this.reqs[uid]\n        },\n        onError: (err) => {\n          this.onError(err, rawFile)\n          delete this.reqs[uid]\n        },\n      }\n      const req = this.httpRequest(options)\n      this.reqs[uid] = req\n      if (req && req.then) {\n        req.then(options.onSuccess, options.onError)\n      }\n    },\n    handleClick() {\n      if (!this.disabled) {\n        this.$refs.input.value = null\n        this.$refs.input.click()\n      }\n    },\n    handleKeydown(e) {\n      if (e.target !== e.currentTarget) return\n      if (e.keyCode === 13 || e.keyCode === 32) {\n        this.handleClick()\n      }\n    },\n  },\n\n  render() {\n    let {\n      handleClick,\n      drag,\n      name,\n      handleChange,\n      multiple,\n      accept,\n      listType,\n      uploadFiles,\n      disabled,\n      handleKeydown,\n    } = this\n    const data = {\n      class: {\n        'el-upload': true,\n      },\n      on: {\n        click: handleClick,\n        keydown: handleKeydown,\n      },\n    }\n    data.class[`el-upload--${listType}`] = true\n    return (\n      <div {...data} tabindex=\"0\">\n        {drag ? (\n          <upload-dragger disabled={disabled} on-file={uploadFiles}>\n            {this.$slots.default}\n          </upload-dragger>\n        ) : (\n          this.$slots.default\n        )}\n        <input\n          class=\"el-upload__input\"\n          type=\"file\"\n          ref=\"input\"\n          name={name}\n          on-change={handleChange}\n          multiple={multiple}\n          accept={accept}\n        />\n      </div>\n    )\n  },\n}\n</script>\n"],"sourceRoot":"src/kit/Upload"}]}