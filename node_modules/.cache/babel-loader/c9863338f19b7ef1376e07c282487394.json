{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/kit/Upload/UploadDragger.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/kit/Upload/UploadDragger.vue","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'ElUploadDrag',\n  props: {\n    disabled: Boolean\n  },\n  inject: {\n    uploader: {\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      dragover: false\n    };\n  },\n  methods: {\n    onDragover: function onDragover() {\n      if (!this.disabled) {\n        this.dragover = true;\n      }\n    },\n    onDrop: function onDrop(e) {\n      if (this.disabled || !this.uploader) return;\n      var accept = this.uploader.accept;\n      this.dragover = false;\n\n      if (!accept) {\n        this.$emit('file', e.dataTransfer.files);\n        return;\n      }\n\n      this.$emit('file', [].slice.call(e.dataTransfer.files).filter(function (file) {\n        var type = file.type,\n            name = file.name;\n        var extension = name.indexOf('.') > -1 ? \".\".concat(name.split('.').pop()) : '';\n        var baseType = type.replace(/\\/.*$/, '');\n        return accept.split(',').map(function (type) {\n          return type.trim();\n        }).filter(function (type) {\n          return type;\n        }).some(function (acceptedType) {\n          if (/\\..+$/.test(acceptedType)) {\n            return extension === acceptedType;\n          }\n\n          if (/\\/\\*$/.test(acceptedType)) {\n            return baseType === acceptedType.replace(/\\/\\*$/, '');\n          }\n\n          if (/^[^/]+\\/[^/]+$/.test(acceptedType)) {\n            return type === acceptedType;\n          }\n\n          return false;\n        });\n      }));\n    }\n  }\n};",{"version":3,"sources":["UploadDragger.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAcA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GAFA;AAKA,EAAA,MAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,OAAA,EAAA;AADA;AADA,GALA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,UAAA,CAAA,KAAA,QAAA,EAAA;AACA,aAAA,QAAA,GAAA,IAAA;AACA;AACA,KALA;AAMA,IAAA,MANA,kBAMA,CANA,EAMA;AACA,UAAA,KAAA,QAAA,IAAA,CAAA,KAAA,QAAA,EAAA;AACA,UAAA,MAAA,GAAA,KAAA,QAAA,CAAA,MAAA;AACA,WAAA,QAAA,GAAA,KAAA;;AACA,UAAA,CAAA,MAAA,EAAA;AACA,aAAA,KAAA,CAAA,MAAA,EAAA,CAAA,CAAA,YAAA,CAAA,KAAA;AACA;AACA;;AACA,WAAA,KAAA,CACA,MADA,EAEA,GAAA,KAAA,CAAA,IAAA,CAAA,CAAA,CAAA,YAAA,CAAA,KAAA,EAAA,MAAA,CAAA,UAAA,IAAA,EAAA;AAAA,YACA,IADA,GACA,IADA,CACA,IADA;AAAA,YACA,IADA,GACA,IADA,CACA,IADA;AAEA,YAAA,SAAA,GACA,IAAA,CAAA,OAAA,CAAA,GAAA,IAAA,CAAA,CAAA,cAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EADA;AAEA,YAAA,QAAA,GAAA,IAAA,CAAA,OAAA,CAAA,OAAA,EAAA,EAAA,CAAA;AACA,eAAA,MAAA,CACA,KADA,CACA,GADA,EAEA,GAFA,CAEA,UAAA,IAAA;AAAA,iBAAA,IAAA,CAAA,IAAA,EAAA;AAAA,SAFA,EAGA,MAHA,CAGA,UAAA,IAAA;AAAA,iBAAA,IAAA;AAAA,SAHA,EAIA,IAJA,CAIA,UAAA,YAAA,EAAA;AACA,cAAA,QAAA,IAAA,CAAA,YAAA,CAAA,EAAA;AACA,mBAAA,SAAA,KAAA,YAAA;AACA;;AACA,cAAA,QAAA,IAAA,CAAA,YAAA,CAAA,EAAA;AACA,mBAAA,QAAA,KAAA,YAAA,CAAA,OAAA,CAAA,OAAA,EAAA,EAAA,CAAA;AACA;;AACA,cAAA,iBAAA,IAAA,CAAA,YAAA,CAAA,EAAA;AACA,mBAAA,IAAA,KAAA,YAAA;AACA;;AACA,iBAAA,KAAA;AACA,SAfA,CAAA;AAgBA,OArBA,CAFA;AAyBA;AAvCA;AAfA,CAAA","sourcesContent":["<template>\n  <div\n    class=\"el-upload-dragger\"\n    :class=\"{\n      'is-dragover': dragover,\n    }\"\n    @drop.prevent=\"onDrop\"\n    @dragover.prevent=\"onDragover\"\n    @dragleave.prevent=\"dragover = false\"\n  >\n    <slot></slot>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'ElUploadDrag',\n  props: {\n    disabled: Boolean,\n  },\n  inject: {\n    uploader: {\n      default: '',\n    },\n  },\n  data() {\n    return {\n      dragover: false,\n    }\n  },\n  methods: {\n    onDragover() {\n      if (!this.disabled) {\n        this.dragover = true\n      }\n    },\n    onDrop(e) {\n      if (this.disabled || !this.uploader) return\n      const accept = this.uploader.accept\n      this.dragover = false\n      if (!accept) {\n        this.$emit('file', e.dataTransfer.files)\n        return\n      }\n      this.$emit(\n        'file',\n        [].slice.call(e.dataTransfer.files).filter((file) => {\n          const { type, name } = file\n          const extension =\n            name.indexOf('.') > -1 ? `.${name.split('.').pop()}` : ''\n          const baseType = type.replace(/\\/.*$/, '')\n          return accept\n            .split(',')\n            .map((type) => type.trim())\n            .filter((type) => type)\n            .some((acceptedType) => {\n              if (/\\..+$/.test(acceptedType)) {\n                return extension === acceptedType\n              }\n              if (/\\/\\*$/.test(acceptedType)) {\n                return baseType === acceptedType.replace(/\\/\\*$/, '')\n              }\n              if (/^[^/]+\\/[^/]+$/.test(acceptedType)) {\n                return type === acceptedType\n              }\n              return false\n            })\n        })\n      )\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/kit/Upload"}]}