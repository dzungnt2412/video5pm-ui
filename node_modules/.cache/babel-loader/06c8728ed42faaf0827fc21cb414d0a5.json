{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/core/helpers/localstorage.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/core/helpers/localstorage.js","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport addDays from 'date-fns/addDays';\nimport getTime from 'date-fns/getTime';\nimport { isEmpty } from '@core/utils/object';\nimport { DEFAULT_STORAGE_LIFE_TIME } from '@core/constants/storage';\n/**\n * Append subfix expire\n * @param key\n * @returns {string}\n */\n\nvar getExpireKey = function getExpireKey(key) {\n  return \"\".concat(key, \"_expire\");\n};\n/**\n * Verify localstorage not expired\n * @param key\n * @returns {boolean}\n */\n\n\nvar isNotExpired = function isNotExpired(key) {\n  var expire = parseInt(window.localStorage.getItem(getExpireKey(key)), 10);\n  return expire && expire >= getTime(getTime(new Date()));\n};\n\nvar LocalStorage = {\n  /**\n   * Set\n   * @param key\n   * @param val\n   * @param expires\n   */\n  set: function set(key, val) {\n    var expires = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var duration;\n\n    if (expires) {\n      duration = new Date(expires);\n    } else {\n      duration = addDays(new Date(), DEFAULT_STORAGE_LIFE_TIME);\n    }\n\n    window.localStorage.setItem(key, val);\n    window.localStorage.setItem(getExpireKey(key), duration.getTime().toString());\n  },\n\n  /**\n   * Get\n   * @param key\n   * @return {*}\n   */\n  get: function get(key) {\n    if (isNotExpired(key)) {\n      return window.localStorage.getItem(key);\n    } else {\n      LocalStorage.remove(key);\n    }\n\n    return null;\n  },\n\n  /**\n   * Get all\n   * @param callback\n   * @return {Array}\n   */\n  each: function each(callback) {\n    var values = window.localStorage;\n\n    if (values && !isEmpty(values)) {\n      Object.entries(values).forEach(function (item) {\n        var _item = _slicedToArray(item, 2),\n            key = _item[0],\n            value = _item[1];\n\n        callback(key, value);\n      });\n    }\n  },\n\n  /**\n   * Remove\n   * @param key\n   */\n  remove: function remove(key) {\n    window.localStorage.removeItem(key);\n    window.localStorage.removeItem(getExpireKey(key));\n  },\n\n  /**\n   * Has\n   * @param key\n   * @return {boolean}\n   */\n  has: function has(key) {\n    return LocalStorage.get(key) !== null;\n  },\n\n  /**\n   * Clear all\n   */\n  clearAll: function clearAll() {\n    LocalStorage.each(function (key) {\n      LocalStorage.remove(key);\n    });\n  }\n};\nexport default LocalStorage;",null]}