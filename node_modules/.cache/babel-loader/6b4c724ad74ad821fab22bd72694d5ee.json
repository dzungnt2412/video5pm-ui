{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/design/store/index.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/design/store/index.js","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nvar _mutations;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport api from '../api';\nexport var FETCH_DESIGNS = 'fetchDesigns';\nexport var FETCH_DESIGN_COUNT = 'fetchDesignCount';\nexport var FETCH_DESIGN = 'fetchDesign';\nexport var CREATE_DESIGN = 'createDesign';\nexport var UPDATE_DESIGN = 'updateDesign';\nexport var UPDATE_DESIGN_SKU = 'updateDesignSku';\nexport var DELETE_DESIGN = 'deleteDesign';\nexport var FETCH_DESIGN_FILES = 'fetchDesignFiles';\nexport var DELETE_DESIGN_FILES = 'deleteDesignFile';\nexport var DOWNLOAD_DESIGN = 'downloadDesign';\nexport var PUSH_DESIGN_FILE = 'pushDesignFile';\nexport var REMOVE_DESIGN_FILE = 'removeDesignFile';\nexport var state = {\n  designs: [],\n  count: 0,\n  design: {\n    design_files: []\n  },\n  designFiles: [],\n  productTypes: []\n};\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, FETCH_DESIGNS, function (state, payload) {\n  state.designs = payload;\n}), _defineProperty(_mutations, FETCH_DESIGN, function (state, payload) {\n  state.design = payload;\n}), _defineProperty(_mutations, FETCH_DESIGN_COUNT, function (state, payload) {\n  state.count = payload;\n}), _defineProperty(_mutations, FETCH_DESIGN_FILES, function (state, payload) {\n  state.designFiles = payload;\n}), _defineProperty(_mutations, PUSH_DESIGN_FILE, function (state, payload) {\n  state.design.design_files.push(payload);\n}), _defineProperty(_mutations, REMOVE_DESIGN_FILE, function (state, payload) {\n  state.design.design_files = state.design.design_files.filter(function (item) {\n    return item.id != payload.id;\n  });\n}), _mutations);\nexport var actions = {\n  /**\n   * Fetch design list\n   * @param commit\n   * @param payload\n   * @return {Promise<{success: boolean, message: string, items: (Array)}>}\n   */\n  fetchDesigns: function () {\n    var _fetchDesigns = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, payload) {\n      var commit, success, message, _yield$Promise$all, _yield$Promise$all2, list, count;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              success = true;\n              message = '';\n              _context.next = 5;\n              return Promise.all([api.fetchDesigns(payload), api.fetchDesignCount(payload)]);\n\n            case 5:\n              _yield$Promise$all = _context.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              list = _yield$Promise$all2[0];\n              count = _yield$Promise$all2[1];\n\n              if (!list || list.error || !count) {\n                list = {\n                  designs: []\n                };\n                count = {\n                  count: 0\n                };\n                success = false;\n                message = list.errorMessage || '';\n              }\n\n              commit(FETCH_DESIGNS, list.designs);\n              commit(FETCH_DESIGN_COUNT, count.count);\n              return _context.abrupt(\"return\", {\n                success: success,\n                message: message,\n                items: list.designs\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function fetchDesigns(_x, _x2) {\n      return _fetchDesigns.apply(this, arguments);\n    }\n\n    return fetchDesigns;\n  }(),\n\n  /**\n   * Fetch design item\n   * @param commit\n   * @param payload\n   * @return {Promise<{success: boolean}>}\n   */\n  fetchDesign: function () {\n    var _fetchDesign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              result = {\n                success: true\n              };\n              _context2.next = 4;\n              return api.fetchDesign(payload);\n\n            case 4:\n              response = _context2.sent;\n\n              if (!response || response.error) {\n                result = {\n                  success: false,\n                  message: response.errorMessage || ''\n                };\n                response = {\n                  design: {}\n                };\n              }\n\n              if (!response.design.design_files) {\n                response.design.design_files = [];\n              }\n\n              commit(FETCH_DESIGN, response.design);\n              return _context2.abrupt(\"return\", result);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function fetchDesign(_x3, _x4) {\n      return _fetchDesign.apply(this, arguments);\n    }\n\n    return fetchDesign;\n  }(),\n\n  /**\n   * Create design\n   * @param commit\n   * @param payload\n   * @return {Promise<boolean|*>}\n   */\n  // eslint-disable-next-line\n  createDesign: function () {\n    var _createDesign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref3, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return api.create(payload);\n\n            case 3:\n              response = _context3.sent;\n\n              if (!(response && response.design && response.design.id)) {\n                _context3.next = 6;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", {\n                success: true,\n                id: response.design.id\n              });\n\n            case 6:\n              return _context3.abrupt(\"return\", {\n                success: false,\n                message: response.errorMessage || ''\n              });\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function createDesign(_x5, _x6) {\n      return _createDesign.apply(this, arguments);\n    }\n\n    return createDesign;\n  }(),\n\n  /**\n   * Update design\n   * @param commit\n   * @param payload\n   * @return {Promise<object>}\n   */\n  // eslint-disable-next-line no-unused-vars\n  updateDesign: function () {\n    var _updateDesign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref4, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return api.update(payload);\n\n            case 3:\n              response = _context4.sent;\n\n              if (!(response && response.success)) {\n                _context4.next = 6;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", {\n                success: true\n              });\n\n            case 6:\n              return _context4.abrupt(\"return\", {\n                success: false,\n                message: response.errorMessage || ''\n              });\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function updateDesign(_x7, _x8) {\n      return _updateDesign.apply(this, arguments);\n    }\n\n    return updateDesign;\n  }(),\n  updateDesignSku: function () {\n    var _updateDesignSku = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref5, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return api.updateSku(payload);\n\n            case 3:\n              response = _context5.sent;\n\n              if (!(response && response.design && response.design.id)) {\n                _context5.next = 7;\n                break;\n              }\n\n              commit(FETCH_DESIGN, response.design);\n              return _context5.abrupt(\"return\", {\n                success: true\n              });\n\n            case 7:\n              return _context5.abrupt(\"return\", {\n                success: false,\n                message: response.errorMessage || ''\n              });\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function updateDesignSku(_x9, _x10) {\n      return _updateDesignSku.apply(this, arguments);\n    }\n\n    return updateDesignSku;\n  }(),\n  deleteDesign: function () {\n    var _deleteDesign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(_ref6, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref6.commit;\n              _context6.next = 3;\n              return api.delete(payload);\n\n            case 3:\n              response = _context6.sent;\n\n              if (!(response && response.success)) {\n                _context6.next = 7;\n                break;\n              }\n\n              commit(FETCH_DESIGN, response.design);\n              return _context6.abrupt(\"return\", {\n                success: true\n              });\n\n            case 7:\n              return _context6.abrupt(\"return\", {\n                success: false,\n                message: response.errorMessage || ''\n              });\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function deleteDesign(_x11, _x12) {\n      return _deleteDesign.apply(this, arguments);\n    }\n\n    return deleteDesign;\n  }(),\n\n  /**\n   * Fetch design files\n   * @param commit\n   * @param payload\n   * @return {Promise<object>}\n   */\n  fetchDesignFiles: function () {\n    var _fetchDesignFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_ref7, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              commit = _ref7.commit;\n              result = {\n                success: true\n              };\n              _context7.next = 4;\n              return api.fetchDesignFiles(payload);\n\n            case 4:\n              response = _context7.sent;\n\n              if (!response || response.error) {\n                result = {\n                  success: false,\n                  message: response.errorMessage || ''\n                };\n                response = {\n                  design_files: {}\n                };\n              }\n\n              commit(FETCH_DESIGN_FILES, response.design_files);\n              return _context7.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    function fetchDesignFiles(_x13, _x14) {\n      return _fetchDesignFiles.apply(this, arguments);\n    }\n\n    return fetchDesignFiles;\n  }(),\n  // eslint-disable-next-line no-unused-vars\n  downloadDesign: function () {\n    var _downloadDesign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(_ref8, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              commit = _ref8.commit;\n              result = {\n                success: true\n              };\n              _context8.next = 4;\n              return api.downloadFile(payload);\n\n            case 4:\n              response = _context8.sent;\n\n              if (!(!response || response.error)) {\n                _context8.next = 7;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", result = {\n                success: false,\n                message: response.errorMessage || ''\n              });\n\n            case 7:\n              result.blob = response;\n              return _context8.abrupt(\"return\", result);\n\n            case 9:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function downloadDesign(_x15, _x16) {\n      return _downloadDesign.apply(this, arguments);\n    }\n\n    return downloadDesign;\n  }(),\n  deleteDesignFile: function () {\n    var _deleteDesignFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(_ref9, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              commit = _ref9.commit;\n              _context9.next = 3;\n              return api.deleteDesignFile(payload);\n\n            case 3:\n              response = _context9.sent;\n\n              if (!(response && response.success)) {\n                _context9.next = 7;\n                break;\n              }\n\n              commit(REMOVE_DESIGN_FILE, payload);\n              return _context9.abrupt(\"return\", {\n                success: true\n              });\n\n            case 7:\n              return _context9.abrupt(\"return\", {\n                success: false,\n                message: response.errorMessage || ''\n              });\n\n            case 8:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    function deleteDesignFile(_x17, _x18) {\n      return _deleteDesignFile.apply(this, arguments);\n    }\n\n    return deleteDesignFile;\n  }()\n};",null]}