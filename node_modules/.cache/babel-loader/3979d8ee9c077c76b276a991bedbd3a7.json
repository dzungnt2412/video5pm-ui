{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/ticket/store/index.js","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/ticket/store/index.js","mtime":1603898990384},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1597736267502}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@babel/runtime/regenerator\";\n\nvar _mutations;\n\nfunction _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError(\"Cannot destructure undefined\"); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport api from '../api'; // Constant types\n\nvar FETCH_TICKET = 'fetchTicket';\nvar FETCH_TICKETS = 'fetchTickets';\nvar COUNT_TICKETS = 'countTickets';\nvar FETCH_TICKET_MESSAGES = 'fetchTicketMessages';\nvar COUNT_TICKET_MESSAGES = 'countTicketMessages';\nvar PUSH_TICKET_MESSAGE = 'pushTicketMessage';\nvar UPDATE_MESSAGE_TICKET = 'updateTicketMessage';\nvar FETCH_CATEGORIES = 'fetchCategories';\nvar FETCH_TICKET_STATICTIS = 'fetchTicketStatictis';\nexport var state = {\n  tickets: [],\n  count: 0,\n  messages: [],\n  ticket: {},\n  categories: [],\n  statisticTickets: {}\n};\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, FETCH_TICKETS, function (state, payload) {\n  state.tickets = payload;\n}), _defineProperty(_mutations, FETCH_TICKET, function (state, payload) {\n  state.ticket = payload;\n}), _defineProperty(_mutations, COUNT_TICKETS, function (state, payload) {\n  state.count = payload;\n}), _defineProperty(_mutations, FETCH_TICKET_MESSAGES, function (state, payload) {\n  state.messages = payload;\n}), _defineProperty(_mutations, COUNT_TICKET_MESSAGES, function (state, payload) {\n  state.count = payload;\n}), _defineProperty(_mutations, PUSH_TICKET_MESSAGE, function (state, payload) {\n  state.messages = [payload].concat(_toConsumableArray(state.messages));\n}), _defineProperty(_mutations, FETCH_CATEGORIES, function (state, payload) {\n  state.categories = payload;\n}), _defineProperty(_mutations, FETCH_TICKET_STATICTIS, function (state, payload) {\n  state.statisticTickets = payload;\n}), _defineProperty(_mutations, UPDATE_MESSAGE_TICKET, function (state, payload) {\n  state.messages = payload;\n}), _mutations);\nexport var actions = {\n  // eslint-disable-next-line\n  createTicket: function () {\n    var _createTicket = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return api.createTicket(payload);\n\n            case 3:\n              response = _context.sent;\n\n              if (!(response && response.ticket && response.ticket.id)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", {\n                success: true,\n                id: response.ticket.id\n              });\n\n            case 6:\n              return _context.abrupt(\"return\", {\n                success: false,\n                message: response.errorMessage || ''\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function createTicket(_x, _x2) {\n      return _createTicket.apply(this, arguments);\n    }\n\n    return createTicket;\n  }(),\n  fetchTickets: function () {\n    var _fetchTickets = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2, payload) {\n      var commit, success, message, _yield$Promise$all, _yield$Promise$all2, list, count;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              success = true;\n              message = '';\n              _context2.next = 5;\n              return Promise.all([api.fetchTickets(payload), api.countTickets(payload)]);\n\n            case 5:\n              _yield$Promise$all = _context2.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              list = _yield$Promise$all2[0];\n              count = _yield$Promise$all2[1];\n\n              if (!list || list.error || !count) {\n                list = {\n                  tickets: []\n                };\n                count = {\n                  count: 0\n                };\n                success = false;\n                message = list.errorMessage || '';\n              }\n\n              commit(FETCH_TICKETS, list.tickets);\n              commit(COUNT_TICKETS, count.count);\n              return _context2.abrupt(\"return\", {\n                success: success,\n                message: message,\n                items: list.tickets\n              });\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function fetchTickets(_x3, _x4) {\n      return _fetchTickets.apply(this, arguments);\n    }\n\n    return fetchTickets;\n  }(),\n  fetchTicket: function () {\n    var _fetchTicket = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref3, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              result = {\n                success: true\n              };\n              _context3.next = 4;\n              return api.fetchTicket(payload);\n\n            case 4:\n              response = _context3.sent;\n\n              if (!response || response.error) {\n                result = {\n                  success: false,\n                  message: response.errorMessage || ''\n                };\n                response = {\n                  ticket: {}\n                };\n              }\n\n              commit(FETCH_TICKET, response.ticket);\n              return _context3.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function fetchTicket(_x5, _x6) {\n      return _fetchTicket.apply(this, arguments);\n    }\n\n    return fetchTicket;\n  }(),\n  // eslint-disable-next-line no-empty-pattern\n  fetchTicketFile: function () {\n    var _fetchTicketFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref4, payload) {\n      var result, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _objectDestructuringEmpty(_ref4);\n\n              result = {\n                success: true\n              };\n              _context4.next = 4;\n              return api.fetchTicketFile(payload);\n\n            case 4:\n              response = _context4.sent;\n\n              if (!response || response.error) {\n                result = {\n                  success: false,\n                  message: response.errorMessage || ''\n                };\n              }\n\n              result.blob = response;\n              return _context4.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function fetchTicketFile(_x7, _x8) {\n      return _fetchTicketFile.apply(this, arguments);\n    }\n\n    return fetchTicketFile;\n  }(),\n  // eslint-disable-next-line\n  closeTicket: function () {\n    var _closeTicket = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref5, payload) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              result = {\n                success: true\n              };\n              _context5.next = 4;\n              return api.closeTicket(payload);\n\n            case 4:\n              response = _context5.sent;\n\n              if (!response || response.error) {\n                result = {\n                  success: false,\n                  message: response.errorMessage || ''\n                };\n              }\n\n              return _context5.abrupt(\"return\", result);\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function closeTicket(_x9, _x10) {\n      return _closeTicket.apply(this, arguments);\n    }\n\n    return closeTicket;\n  }(),\n  fetchTicketMessages: function () {\n    var _fetchTicketMessages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(_ref6, ticket_id, payload) {\n      var commit, success, message, _yield$Promise$all3, _yield$Promise$all4, list, count;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref6.commit;\n              success = true;\n              message = '';\n              _context6.next = 5;\n              return Promise.all([api.fetchTicketMessages(ticket_id, payload), api.countTicketMessages(ticket_id, payload)]);\n\n            case 5:\n              _yield$Promise$all3 = _context6.sent;\n              _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 2);\n              list = _yield$Promise$all4[0];\n              count = _yield$Promise$all4[1];\n\n              if (!list || list.error || !count) {\n                list = {\n                  messages: []\n                };\n                count = {\n                  count: 0\n                };\n                success = false;\n                message = list.errorMessage || '';\n              }\n\n              commit(FETCH_TICKET_MESSAGES, list.messages);\n              commit(COUNT_TICKET_MESSAGES, count.count);\n              return _context6.abrupt(\"return\", {\n                success: success,\n                message: message,\n                items: list.messages\n              });\n\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function fetchTicketMessages(_x11, _x12, _x13) {\n      return _fetchTicketMessages.apply(this, arguments);\n    }\n\n    return fetchTicketMessages;\n  }(),\n  // eslint-disable-next-line\n  pushMessage: function () {\n    var _pushMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_ref7, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              commit = _ref7.commit;\n              _context7.next = 3;\n              return api.pushMessage(payload);\n\n            case 3:\n              response = _context7.sent;\n\n              if (!(response && response.message && response.message.id)) {\n                _context7.next = 6;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", {\n                success: true,\n                id: response.message.id\n              });\n\n            case 6:\n              return _context7.abrupt(\"return\", {\n                success: false,\n                message: response.errorMessage || ''\n              });\n\n            case 7:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    function pushMessage(_x14, _x15) {\n      return _pushMessage.apply(this, arguments);\n    }\n\n    return pushMessage;\n  }(),\n  fetchCategories: function fetchCategories(_ref8) {\n    var commit = _ref8.commit;\n    var categories = ['Thay đổi thông tin đặt hàng', 'Hủy đơn', 'Vấn đề về thời gian sản xuất & tracking', 'Label', 'Vấn đề sau khi phát hàng (thiếu, sai sản phẩm, chất lượng kém,…)', 'Trường hợp khác'];\n    commit(FETCH_CATEGORIES, categories);\n  },\n  // eslint-disable-next-line\n  fetchTicketStatictis: function () {\n    var _fetchTicketStatictis = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(_ref9) {\n      var commit, result, response;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              commit = _ref9.commit;\n              result = {\n                success: true\n              };\n              _context8.next = 4;\n              return api.fetchStatisticTicketStatus();\n\n            case 4:\n              response = _context8.sent;\n\n              if (response && response.errorMessage) {\n                result = {\n                  success: false,\n                  message: response.errorMessage\n                };\n                response = {\n                  totals: {}\n                };\n              }\n\n              commit(FETCH_TICKET_STATICTIS, response.totals);\n              return _context8.abrupt(\"return\", result);\n\n            case 8:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function fetchTicketStatictis(_x16) {\n      return _fetchTicketStatictis.apply(this, arguments);\n    }\n\n    return fetchTicketStatictis;\n  }()\n};",{"version":3,"sources":["/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/ticket/store/index.js"],"names":["api","FETCH_TICKET","FETCH_TICKETS","COUNT_TICKETS","FETCH_TICKET_MESSAGES","COUNT_TICKET_MESSAGES","PUSH_TICKET_MESSAGE","UPDATE_MESSAGE_TICKET","FETCH_CATEGORIES","FETCH_TICKET_STATICTIS","state","tickets","count","messages","ticket","categories","statisticTickets","mutations","payload","actions","createTicket","commit","response","id","success","message","errorMessage","fetchTickets","Promise","all","countTickets","list","error","items","fetchTicket","result","fetchTicketFile","blob","closeTicket","fetchTicketMessages","ticket_id","countTicketMessages","pushMessage","fetchCategories","fetchTicketStatictis","fetchStatisticTicketStatus","totals"],"mappings":"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","sourcesContent":["import api from '../api'\n\n// Constant types\nconst FETCH_TICKET = 'fetchTicket'\nconst FETCH_TICKETS = 'fetchTickets'\nconst COUNT_TICKETS = 'countTickets'\nconst FETCH_TICKET_MESSAGES = 'fetchTicketMessages'\nconst COUNT_TICKET_MESSAGES = 'countTicketMessages'\nconst PUSH_TICKET_MESSAGE = 'pushTicketMessage'\nconst UPDATE_MESSAGE_TICKET = 'updateTicketMessage'\nconst FETCH_CATEGORIES = 'fetchCategories'\nconst FETCH_TICKET_STATICTIS = 'fetchTicketStatictis'\n\nexport const state = {\n  tickets: [],\n  count: 0,\n  messages: [],\n  ticket: {},\n  categories: [],\n  statisticTickets: {},\n}\n\nexport const mutations = {\n  [FETCH_TICKETS](state, payload) {\n    state.tickets = payload\n  },\n  [FETCH_TICKET](state, payload) {\n    state.ticket = payload\n  },\n  [COUNT_TICKETS](state, payload) {\n    state.count = payload\n  },\n  [FETCH_TICKET_MESSAGES](state, payload) {\n    state.messages = payload\n  },\n  [COUNT_TICKET_MESSAGES](state, payload) {\n    state.count = payload\n  },\n  [PUSH_TICKET_MESSAGE](state, payload) {\n    state.messages = [payload, ...state.messages]\n  },\n  [FETCH_CATEGORIES](state, payload) {\n    state.categories = payload\n  },\n  [FETCH_TICKET_STATICTIS](state, payload) {\n    state.statisticTickets = payload\n  },\n  [UPDATE_MESSAGE_TICKET](state, payload) {\n    state.messages = payload\n  },\n}\n\nexport const actions = {\n  // eslint-disable-next-line\n  async createTicket({ commit }, payload) {\n    const response = await api.createTicket(payload)\n    if (response && response.ticket && response.ticket.id) {\n      return { success: true, id: response.ticket.id }\n    }\n\n    return {\n      success: false,\n      message: response.errorMessage || '',\n    }\n  },\n\n  async fetchTickets({ commit }, payload) {\n    let success = true\n    let message = ''\n    let [list, count] = await Promise.all([\n      api.fetchTickets(payload),\n      api.countTickets(payload),\n    ])\n\n    if (!list || list.error || !count) {\n      list = {\n        tickets: [],\n      }\n      count = { count: 0 }\n      success = false\n      message = list.errorMessage || ''\n    }\n\n    commit(FETCH_TICKETS, list.tickets)\n    commit(COUNT_TICKETS, count.count)\n\n    return { success, message, items: list.tickets }\n  },\n\n  async fetchTicket({ commit }, payload) {\n    let result = { success: true }\n    let response = await api.fetchTicket(payload)\n\n    if (!response || response.error) {\n      result = {\n        success: false,\n        message: response.errorMessage || '',\n      }\n\n      response = {\n        ticket: {},\n      }\n    }\n\n    commit(FETCH_TICKET, response.ticket)\n    return result\n  },\n  // eslint-disable-next-line no-empty-pattern\n  async fetchTicketFile({}, payload) {\n    let result = { success: true }\n    let response = await api.fetchTicketFile(payload)\n\n    if (!response || response.error) {\n      result = {\n        success: false,\n        message: response.errorMessage || '',\n      }\n    }\n    result.blob = response\n    return result\n  },\n\n  // eslint-disable-next-line\n  async closeTicket({ commit }, payload) {\n    let result = { success: true }\n    let response = await api.closeTicket(payload)\n\n    if (!response || response.error) {\n      result = {\n        success: false,\n        message: response.errorMessage || '',\n      }\n    }\n\n    return result\n  },\n\n  async fetchTicketMessages({ commit }, ticket_id, payload) {\n    let success = true\n    let message = ''\n    let [list, count] = await Promise.all([\n      api.fetchTicketMessages(ticket_id, payload),\n      api.countTicketMessages(ticket_id, payload),\n    ])\n\n    if (!list || list.error || !count) {\n      list = {\n        messages: [],\n      }\n      count = { count: 0 }\n      success = false\n      message = list.errorMessage || ''\n    }\n\n    commit(FETCH_TICKET_MESSAGES, list.messages)\n    commit(COUNT_TICKET_MESSAGES, count.count)\n\n    return { success, message, items: list.messages }\n  },\n\n  // eslint-disable-next-line\n  async pushMessage({ commit }, payload) {\n    const response = await api.pushMessage(payload)\n    if (response && response.message && response.message.id) {\n      return { success: true, id: response.message.id }\n    }\n\n    return {\n      success: false,\n      message: response.errorMessage || '',\n    }\n  },\n\n  fetchCategories({ commit }) {\n    const categories = [\n      'Thay đổi thông tin đặt hàng',\n      'Hủy đơn',\n      'Vấn đề về thời gian sản xuất & tracking',\n      'Label',\n      'Vấn đề sau khi phát hàng (thiếu, sai sản phẩm, chất lượng kém,…)',\n      'Trường hợp khác',\n    ]\n    commit(FETCH_CATEGORIES, categories)\n  },\n\n  // eslint-disable-next-line\n  async fetchTicketStatictis({ commit }) {\n    let result = { success: true }\n    let response = await api.fetchStatisticTicketStatus()\n\n    if (response && response.errorMessage) {\n      result = { success: false, message: response.errorMessage }\n      response = { totals: {} }\n    }\n\n    commit(FETCH_TICKET_STATICTIS, response.totals)\n    return result\n  },\n}\n"]}]}