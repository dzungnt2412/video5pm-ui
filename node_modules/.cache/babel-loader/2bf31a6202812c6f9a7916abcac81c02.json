{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/views/VerifyEmail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/views/VerifyEmail.vue","mtime":1605110441124},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapState } from 'vuex';\nimport mixinRoute from '@core/mixins/route';\nimport Storage from '@core/helpers/storage';\nexport default {\n  name: 'VerifyEmail',\n  mixins: [mixinRoute],\n  filters: {},\n  computed: _objectSpread(_objectSpread({}, mapState('auth', {\n    currentUser: function currentUser(state) {\n      return state.user;\n    }\n  })), {}, {\n    code: function code() {\n      return this.$route.params.code;\n    }\n  }),\n  data: function data() {\n    return {\n      isLoading: false,\n      result: {},\n      counting: false,\n      count: '2m'\n    };\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions('auth', ['verifyEmail', 'resendEmail'])), {}, {\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var now, expried, url, code, params, result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                now = new Date().getTime();\n\n                if (Storage.get('expried') < now || Storage.get('expried') == null) {\n                  expried = new Date().getTime() + 2 * 3000;\n                  Storage.set('expried', expried);\n                  this.countDownTimer();\n                } else {\n                  this.count = Storage.get('count');\n                  this.counting = Storage.get('counting');\n                  this.countDownTimer();\n                }\n\n                url = new URL(window.location.href);\n                code = url.searchParams.get('code');\n                params = {\n                  code: code\n                };\n\n                if (!code) {\n                  _context.next = 17;\n                  break;\n                }\n\n                _context.next = 8;\n                return this.verifyEmail(params);\n\n              case 8:\n                result = _context.sent;\n\n                if (!result.success) {\n                  _context.next = 15;\n                  break;\n                }\n\n                if (!result.permission) {\n                  _context.next = 12;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$router.push('/'));\n\n              case 12:\n                return _context.abrupt(\"return\", this.$toast.open({\n                  type: 'error',\n                  message: 'You are not allowed to do this action !'\n                }));\n\n              case 15:\n                this.$toast.open({\n                  type: 'error',\n                  message: result.message\n                });\n                return _context.abrupt(\"return\", this.$router.push('/sign-in'));\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    handleResendEmail: function () {\n      var _handleResendEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        var params, response, now, expried;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(Storage.get('userEmail'));\n\n                if (Storage.get('userEmail')) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                this.isLoading = true;\n                params = {\n                  email: Storage.get('userEmail')\n                };\n                _context2.next = 7;\n                return this.resendEmail(params);\n\n              case 7:\n                response = _context2.sent;\n\n                if (!response.success) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                this.$toast.open({\n                  type: 'success',\n                  message: 'Successfully! Please check your email to activate the account.'\n                });\n                setTimeout(function () {\n                  _this.isLoading = false;\n                }, 2000);\n                this.counting = true;\n                now = new Date().getTime();\n\n                if (Storage.get('expried') < now || Storage.get('expried') == null) {\n                  expried = new Date().getTime() + 2 * 3000;\n                  Storage.set('expried', expried);\n                  this.countDownTimer();\n                } else {\n                  this.countDownTimer();\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 15:\n                this.$toast.open({\n                  type: 'error',\n                  message: response.message\n                });\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleResendEmail() {\n        return _handleResendEmail.apply(this, arguments);\n      }\n\n      return handleResendEmail;\n    }(),\n    countDownTimer: function countDownTimer() {\n      var countDownDate = Storage.get('expried');\n      var x = setInterval(function () {\n        var now = new Date().getTime(); // Find the distance between now and the count down date\n\n        var distance = countDownDate - now; // Time calculations for minutes and seconds\n\n        var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        var seconds = Math.floor(distance % (1000 * 60) / 1000); // Display the result in the element with id=\"demo\"\n\n        this.count = minutes + 'm ' + seconds + 's '; // If the count down is finished, write some text\n\n        if (distance < 0) {\n          this.counting = false;\n          clearInterval(x);\n        }\n      }.bind(this), 1000);\n      Storage.set('count', this.count);\n      Storage.set('counting', this.counting);\n    }\n  }),\n  watch: {\n    filter: {\n      handler: function handler() {\n        this.init();\n      },\n      deep: true\n    }\n  }\n};",null]}