{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/auth/store/index.js","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/auth/store/index.js","mtime":1603898990380},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1597736267502}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/@babel/runtime/regenerator\";\n\nvar _getters;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { ROLE_SELLER } from '@core/constants';\nimport api from '../api';\nimport AuthService from '@core/services/auth';\nimport Affiliate from '@core/helpers/affiliate';\n/**\n * Type\n */\n\nexport var AUTHENTICATE = 'authenticate';\nexport var GET_USER = 'getUser';\n/**\n * State\n */\n\nexport var state = {\n  user: {}\n};\n/**\n * Actions\n */\n\nexport var actions = {\n  /**\n   * Init\n   * @param commit\n   */\n  init: function init(_ref) {\n    var commit = _ref.commit;\n    AuthService.init();\n\n    if (AuthService.isAuthenticated()) {\n      handleAuthenticated(commit, Object.assign({}, AuthService.user));\n    }\n  },\n\n  /**\n   * Sign in\n   * @param commit\n   * @param payload\n   * @returns {Promise<{success: boolean}>}\n   */\n  signIn: function () {\n    var _signIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2, payload) {\n      var commit, response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context.next = 3;\n              return api.signIn(payload);\n\n            case 3:\n              response = _context.sent;\n\n              if (!(response && response.access_token)) {\n                _context.next = 8;\n                break;\n              }\n\n              data = Object.assign({}, response.user, {\n                access_token: response.access_token\n              });\n              handleAuthenticated(commit, transformerAuthenticate(data));\n              return _context.abrupt(\"return\", {\n                success: true,\n                permission: data.role === ROLE_SELLER\n              });\n\n            case 8:\n              return _context.abrupt(\"return\", {\n                success: false,\n                message: response.errorMessage || ''\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function signIn(_x, _x2) {\n      return _signIn.apply(this, arguments);\n    }\n\n    return signIn;\n  }(),\n\n  /**\n   * Sign up\n   * @param commit\n   * @param payload\n   * @returns {Promise<{success: boolean}>}\n   */\n  // eslint-disable-next-line\n  signUp: function () {\n    var _signUp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3, payload) {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref3.commit;\n\n              if (Affiliate.hasRef()) {\n                payload.user_referring_code = Affiliate.getRef();\n              }\n\n              payload.username = payload.username.toLowerCase();\n              _context2.next = 5;\n              return api.signUp(payload);\n\n            case 5:\n              response = _context2.sent;\n\n              if (!(response && response.user && response.user.id)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", {\n                success: true\n              });\n\n            case 8:\n              return _context2.abrupt(\"return\", response);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function signUp(_x3, _x4) {\n      return _signUp.apply(this, arguments);\n    }\n\n    return signUp;\n  }(),\n\n  /**\n   * Sign out\n   * @param commit\n   */\n  signOut: function signOut(_ref4) {\n    var commit = _ref4.commit;\n    AuthService.set({});\n    commit(AUTHENTICATE, {});\n    AuthService.clear();\n  }\n};\n/**\n * Mutations\n */\n\nexport var mutations = _defineProperty({}, AUTHENTICATE, function (state, payload) {\n  state.user = payload;\n});\n/**\n * Getters\n */\n\nexport var getters = (_getters = {}, _defineProperty(_getters, GET_USER, function (state) {\n  if (state.user && state.user.id) {\n    return Object.assign({}, state.user);\n  }\n\n  return {\n    id: 0\n  };\n}), _defineProperty(_getters, \"currentRole\", function currentRole(state) {\n  return state.user.role;\n}), _defineProperty(_getters, \"isSeller\", function isSeller(state) {\n  return state.user.role === ROLE_SELLER;\n}), _getters);\n/**\n * Handle after authenticated\n * @param commit\n * @param payload\n */\n\nvar handleAuthenticated = function handleAuthenticated(commit, payload) {\n  if (payload.role !== ROLE_SELLER) {\n    return;\n  }\n\n  AuthService.set(payload);\n  commit(AUTHENTICATE, payload);\n};\n/**\n * transformer authenticate data to storage\n * @param response\n * @return {{name: *, id: *, avatar: *, accessToken: *, email: *}}\n */\n\n\nvar transformerAuthenticate = function transformerAuthenticate(response) {\n  return {\n    id: response.id,\n    accessToken: response.access_token,\n    email: response.email,\n    username: response.username,\n    role: response.role,\n    canReferent: response.can_refer,\n    refCode: response.ref_code || ''\n  };\n};",{"version":3,"sources":["/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/auth/store/index.js"],"names":["ROLE_SELLER","api","AuthService","Affiliate","AUTHENTICATE","GET_USER","state","user","actions","init","commit","isAuthenticated","handleAuthenticated","Object","assign","signIn","payload","response","access_token","data","transformerAuthenticate","success","permission","role","message","errorMessage","signUp","hasRef","user_referring_code","getRef","username","toLowerCase","id","signOut","set","clear","mutations","getters","accessToken","email","canReferent","can_refer","refCode","ref_code"],"mappings":"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","sourcesContent":["import { ROLE_SELLER } from '@core/constants'\nimport api from '../api'\nimport AuthService from '@core/services/auth'\nimport Affiliate from '@core/helpers/affiliate'\n\n/**\n * Type\n */\nexport const AUTHENTICATE = 'authenticate'\nexport const GET_USER = 'getUser'\n\n/**\n * State\n */\nexport const state = {\n  user: {},\n}\n\n/**\n * Actions\n */\nexport const actions = {\n  /**\n   * Init\n   * @param commit\n   */\n  init({ commit }) {\n    AuthService.init()\n\n    if (AuthService.isAuthenticated()) {\n      handleAuthenticated(commit, Object.assign({}, AuthService.user))\n    }\n  },\n\n  /**\n   * Sign in\n   * @param commit\n   * @param payload\n   * @returns {Promise<{success: boolean}>}\n   */\n  async signIn({ commit }, payload) {\n    let response\n\n    response = await api.signIn(payload)\n\n    if (response && response.access_token) {\n      const data = Object.assign({}, response.user, {\n        access_token: response.access_token,\n      })\n      handleAuthenticated(commit, transformerAuthenticate(data))\n\n      return {\n        success: true,\n        permission: data.role === ROLE_SELLER,\n      }\n    }\n\n    return {\n      success: false,\n      message: response.errorMessage || '',\n    }\n  },\n\n  /**\n   * Sign up\n   * @param commit\n   * @param payload\n   * @returns {Promise<{success: boolean}>}\n   */\n  // eslint-disable-next-line\n  async signUp({ commit }, payload) {\n    if (Affiliate.hasRef()) {\n      payload.user_referring_code = Affiliate.getRef()\n    }\n\n    payload.username = payload.username.toLowerCase()\n    const response = await api.signUp(payload)\n\n    if (response && response.user && response.user.id) {\n      return {\n        success: true,\n      }\n    }\n\n    return response\n  },\n\n  /**\n   * Sign out\n   * @param commit\n   */\n  signOut({ commit }) {\n    AuthService.set({})\n    commit(AUTHENTICATE, {})\n    AuthService.clear()\n  },\n}\n\n/**\n * Mutations\n */\nexport const mutations = {\n  [AUTHENTICATE](state, payload) {\n    state.user = payload\n  },\n}\n\n/**\n * Getters\n */\nexport const getters = {\n  [GET_USER](state) {\n    if (state.user && state.user.id) {\n      return Object.assign({}, state.user)\n    }\n\n    return { id: 0 }\n  },\n  currentRole(state) {\n    return state.user.role\n  },\n  isSeller(state) {\n    return state.user.role === ROLE_SELLER\n  },\n}\n\n/**\n * Handle after authenticated\n * @param commit\n * @param payload\n */\nconst handleAuthenticated = (commit, payload) => {\n  if (payload.role !== ROLE_SELLER) {\n    return\n  }\n\n  AuthService.set(payload)\n  commit(AUTHENTICATE, payload)\n}\n\n/**\n * transformer authenticate data to storage\n * @param response\n * @return {{name: *, id: *, avatar: *, accessToken: *, email: *}}\n */\nconst transformerAuthenticate = (response) => {\n  return {\n    id: response.id,\n    accessToken: response.access_token,\n    email: response.email,\n    username: response.username,\n    role: response.role,\n    canReferent: response.can_refer,\n    refCode: response.ref_code || '',\n  }\n}\n"]}]}