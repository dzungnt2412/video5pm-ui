{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/components/ConditionItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/components/ConditionItem.vue","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { cloneDeep } from '@core/utils';\nimport { conditionColumns as _conditionColumns, productConditionRelations, quantityConditionRelations, types } from '../../constant';\nexport default {\n  name: 'ConditionItem',\n  props: {\n    type: {\n      type: String,\n      default: types.product_type\n    },\n    condition: {\n      type: Object,\n      default: function _default() {\n        return {\n          column: 'tag',\n          relation: 'equals',\n          condition: ''\n        };\n      }\n    },\n    disableRemove: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    conditionColumns: function conditionColumns() {\n      return _conditionColumns;\n    },\n    relations: function relations() {\n      return this.type === types.quantity ? quantityConditionRelations : productConditionRelations;\n    },\n    selectedProperty: function selectedProperty() {\n      var _this = this;\n\n      return this.conditionColumns.find(function (_ref) {\n        var value = _ref.value;\n        return value === _this.internalValue.column;\n      });\n    }\n  },\n  data: function data() {\n    return {\n      internalValue: {}\n    };\n  },\n  created: function created() {\n    this.internalValue = cloneDeep(this.condition);\n  },\n  methods: {\n    handleRemove: function handleRemove() {\n      this.$emit('remove', this.value);\n    }\n  },\n  watch: {\n    condition: {\n      handler: function handler(val) {\n        this.internalValue = cloneDeep(val);\n      },\n      deep: true\n    },\n    internalValue: {\n      handler: function handler(val) {\n        if (JSON.stringify(this.internalValue) != JSON.stringify(this.condition)) {\n          this.$emit('input', val);\n        }\n      },\n      deep: true\n    }\n  }\n};",null]}