{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/components/ModalUpdateAndRetryMapping.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/components/ModalUpdateAndRetryMapping.vue","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapActions } from 'vuex';\nimport { cloneDeep } from '@core/utils';\nimport { FETCH_ORDER, UPDATE_ORDER } from '@/packages/container/store/types';\nimport OrderItems from '@/packages/container/views/components/OrderItems';\nexport default {\n  name: 'ModalUpdateAndRetryMapping',\n  components: {\n    OrderItems: OrderItems\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    orderId: {\n      type: Number,\n      default: 0\n    }\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapState('container', {\n    order: function order(state) {\n      return state.order;\n    }\n  })), mapState('shared', {\n    productTypes: function productTypes(state) {\n      return state.productTypes;\n    }\n  })), mapState('design', {\n    designs: function designs(state) {\n      return state.designs;\n    }\n  })),\n  data: function data() {\n    return {\n      isFetching: false,\n      isSaving: false,\n      isShow: this.visible,\n      orderItems: []\n    };\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, mapActions('container', [FETCH_ORDER, UPDATE_ORDER])), mapActions('design', ['fetchDesigns'])), mapActions('orderMapping', {\n    retryOrderMappingFails: 'retryOrderMappingFails'\n  })), {}, {\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isFetching = true;\n                _context.next = 3;\n                return this.fetchOrder(this.orderId);\n\n              case 3:\n                this.isFetching = false;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    handleSelectedDesign: function handleSelectedDesign(_ref) {\n      var url = _ref.url,\n          item = _ref.item,\n          design = _ref.design;\n      this.handleUpdateOrderItem(item, {\n        design: design,\n        design_id: design.id,\n        image: url\n      });\n    },\n    handleSelectedProductType: function handleSelectedProductType(_ref2) {\n      var item = _ref2.item,\n          product = _ref2.product;\n      this.handleUpdateOrderItem(item, {\n        product_type_id: product.id,\n        product_type: product\n      });\n    },\n    handleUpdateOrderItem: function handleUpdateOrderItem(item, newVal) {\n      var index = this.orderItems.findIndex(function (_ref3) {\n        var id = _ref3.id;\n        return id === item.id;\n      });\n\n      if (index !== -1) {\n        this.editing = true;\n        this.$set(this.orderItems, index, Object.assign({}, item, newVal));\n      }\n    },\n    close: function close() {\n      this.$emit('update:visible', false);\n    },\n    save: function () {\n      var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var response, responseRetry;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.isSaving = true;\n                _context2.next = 3;\n                return this.updateOrder(Object.assign({}, this.order, {\n                  order_items: this.orderItems\n                }));\n\n              case 3:\n                response = _context2.sent;\n\n                if (!(!response || !response.success)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.$toast.open({\n                  type: 'error',\n                  message: response.message\n                });\n                this.isSaving = false;\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                this.$set(this, 'orderItems', cloneDeep(this.order.order_items));\n                _context2.next = 11;\n                return this.retryOrderMappingFails({\n                  ids: [this.orderId]\n                });\n\n              case 11:\n                responseRetry = _context2.sent;\n\n                if (!(!responseRetry || !responseRetry.success)) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                this.$toast.open({\n                  type: 'error',\n                  message: responseRetry.message\n                });\n                this.isSaving = false;\n                return _context2.abrupt(\"return\");\n\n              case 16:\n                this.$toast.open({\n                  type: 'success',\n                  message: 'Updated successfully'\n                });\n                this.$emit('save');\n                this.close();\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function save() {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }()\n  }),\n  watch: {\n    visible: function visible(value) {\n      this.isShow = value;\n    },\n    'order.order_items': function orderOrder_items(val) {\n      this.$set(this, 'orderItems', cloneDeep(val));\n    }\n  }\n};",null]}