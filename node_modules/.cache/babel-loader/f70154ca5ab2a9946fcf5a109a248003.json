{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/uikit/mixins/FormElement.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/uikit/mixins/FormElement.js","mtime":1604479002001},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["import config from '../config';\nimport Emitter from './Emitter';\nexport default {\n  mixins: [Emitter],\n  props: {\n    size: String,\n    expanded: true,\n    loading: Boolean,\n    autocomplete: String,\n    rounded: Boolean,\n    maxlength: [Number, String],\n    minlength: [Number, String],\n    validateEvent: {\n      type: Boolean,\n      default: true\n    },\n    useHtml5Validation: {\n      type: Boolean,\n      default: config.useHtml5Validation\n    }\n  },\n  computed: {\n    parentField: function parentField() {\n      var parent = this.$parent;\n\n      for (var i = 0; i < 3; i++) {\n        if (parent && !parent.$data._isField) {\n          parent = parent.$parent;\n        }\n      }\n\n      return parent;\n    },\n    statusType: function statusType() {\n      if (!this.parentField) {\n        return;\n      }\n\n      if (!this.parentField.newType) {\n        return;\n      }\n\n      if (typeof this.parentField.newType === 'string') {\n        return this.parentField.newType;\n      } else {\n        for (var key in this.parentField.newType) {\n          if (this.parentField.newType[key]) {\n            return key;\n          }\n        }\n      }\n    },\n    statusMessage: function statusMessage() {\n      if (!this.parentField) {\n        return;\n      }\n\n      return this.parentField.newMessage;\n    }\n  },\n  data: function data() {\n    return {\n      isValid: true,\n      isFocused: false\n    };\n  },\n  methods: {\n    focus: function focus() {\n      var _this = this;\n\n      if (this.$data.elementRef === undefined) {\n        return;\n      }\n\n      this.$nextTick(function () {\n        return _this.$el.querySelector(_this.$data.elementRef).focus();\n      });\n    },\n    onBlur: function onBlur($event) {\n      this.isFocused = false;\n      this.$emit('blur', $event);\n      this.checkHtml5Validity();\n\n      if (this.validateEvent) {\n        this.dispatch('SFormItem', 's.form.blur', [this.value]);\n      }\n    },\n    onFocus: function onFocus($event) {\n      this.isFocused = true;\n      this.$emit('focus', $event);\n    },\n    checkHtml5Validity: function checkHtml5Validity() {\n      var _this2 = this;\n\n      if (!this.useHtml5Validation) {\n        return;\n      }\n\n      if (this.$refs[this.$data.elementRef] === undefined) {\n        return;\n      }\n\n      var el = this.$el.querySelector(this.$data.elementRef);\n      var type = null;\n      var message = null;\n      var isValid = true;\n\n      if (!el.checkValidity()) {\n        type = 'danger';\n        message = el.validationMessage;\n        isValid = false;\n      }\n\n      this.isValid = isValid;\n      this.$nextTick(function () {\n        if (_this2.parentField) {\n          if (!_this2.parentField.type) {\n            _this2.parentField.newType = type;\n          }\n\n          if (!_this2.parentField.message) {\n            _this2.parentField.newMessage = message;\n          }\n        }\n      });\n      return this.isValid;\n    }\n  }\n};",null]}