{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/kit/mixins/migrating.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/kit/mixins/migrating.js","mtime":1603898990380},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1597736267502}],"contextDependencies":[],"result":["export default {\n  mounted: function mounted() {\n    if (process.env.NODE_ENV === 'production') return;\n    if (!this.$vnode) return;\n\n    var _this$getMigratingCon = this.getMigratingConfig(),\n        _this$getMigratingCon2 = _this$getMigratingCon.props,\n        props = _this$getMigratingCon2 === void 0 ? {} : _this$getMigratingCon2,\n        _this$getMigratingCon3 = _this$getMigratingCon.events,\n        events = _this$getMigratingCon3 === void 0 ? {} : _this$getMigratingCon3;\n\n    var _this$$vnode = this.$vnode,\n        data = _this$$vnode.data,\n        componentOptions = _this$$vnode.componentOptions;\n    var definedProps = data.attrs || {};\n    var definedEvents = componentOptions.listeners || {};\n\n    for (var propName in definedProps) {\n      if (definedProps.hasOwnProperty(propName) && props[propName]) {\n        console.warn(\"[Element Migrating][\".concat(this.$options.name, \"][Attribute]: \").concat(props[propName]));\n      }\n    }\n\n    for (var eventName in definedEvents) {\n      if (definedEvents.hasOwnProperty(eventName) && events[eventName]) {\n        console.warn(\"[Element Migrating][\".concat(this.$options.name, \"][Event]: \").concat(events[eventName]));\n      }\n    }\n  },\n  methods: {\n    getMigratingConfig: function getMigratingConfig() {\n      return {\n        props: {},\n        events: {}\n      };\n    }\n  }\n};",{"version":3,"sources":["/home/tiendzung/workspace/video5pm/video5pm-ui/src/kit/mixins/migrating.js"],"names":["mounted","process","env","NODE_ENV","$vnode","getMigratingConfig","props","events","data","componentOptions","definedProps","attrs","definedEvents","listeners","propName","hasOwnProperty","console","warn","$options","name","eventName","methods"],"mappings":"AAAA,eAAe;AACbA,EAAAA,OADa,qBACH;AACR,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAC3C,QAAI,CAAC,KAAKC,MAAV,EAAkB;;AAFV,gCAG4B,KAAKC,kBAAL,EAH5B;AAAA,uDAGAC,KAHA;AAAA,QAGAA,KAHA,uCAGQ,EAHR;AAAA,uDAGYC,MAHZ;AAAA,QAGYA,MAHZ,uCAGqB,EAHrB;;AAAA,uBAI2B,KAAKH,MAJhC;AAAA,QAIAI,IAJA,gBAIAA,IAJA;AAAA,QAIMC,gBAJN,gBAIMA,gBAJN;AAKR,QAAMC,YAAY,GAAGF,IAAI,CAACG,KAAL,IAAc,EAAnC;AACA,QAAMC,aAAa,GAAGH,gBAAgB,CAACI,SAAjB,IAA8B,EAApD;;AAEA,SAAK,IAAIC,QAAT,IAAqBJ,YAArB,EAAmC;AACjC,UAAIA,YAAY,CAACK,cAAb,CAA4BD,QAA5B,KAAyCR,KAAK,CAACQ,QAAD,CAAlD,EAA8D;AAC5DE,QAAAA,OAAO,CAACC,IAAR,+BACyB,KAAKC,QAAL,CAAcC,IADvC,2BAC4Db,KAAK,CAACQ,QAAD,CADjE;AAGD;AACF;;AAED,SAAK,IAAIM,SAAT,IAAsBR,aAAtB,EAAqC;AACnC,UAAIA,aAAa,CAACG,cAAd,CAA6BK,SAA7B,KAA2Cb,MAAM,CAACa,SAAD,CAArD,EAAkE;AAChEJ,QAAAA,OAAO,CAACC,IAAR,+BACyB,KAAKC,QAAL,CAAcC,IADvC,uBACwDZ,MAAM,CAACa,SAAD,CAD9D;AAGD;AACF;AACF,GAxBY;AAyBbC,EAAAA,OAAO,EAAE;AACPhB,IAAAA,kBADO,gCACc;AACnB,aAAO;AACLC,QAAAA,KAAK,EAAE,EADF;AAELC,QAAAA,MAAM,EAAE;AAFH,OAAP;AAID;AANM;AAzBI,CAAf","sourcesContent":["export default {\n  mounted() {\n    if (process.env.NODE_ENV === 'production') return\n    if (!this.$vnode) return\n    const { props = {}, events = {} } = this.getMigratingConfig()\n    const { data, componentOptions } = this.$vnode\n    const definedProps = data.attrs || {}\n    const definedEvents = componentOptions.listeners || {}\n\n    for (let propName in definedProps) {\n      if (definedProps.hasOwnProperty(propName) && props[propName]) {\n        console.warn(\n          `[Element Migrating][${this.$options.name}][Attribute]: ${props[propName]}`\n        )\n      }\n    }\n\n    for (let eventName in definedEvents) {\n      if (definedEvents.hasOwnProperty(eventName) && events[eventName]) {\n        console.warn(\n          `[Element Migrating][${this.$options.name}][Event]: ${events[eventName]}`\n        )\n      }\n    }\n  },\n  methods: {\n    getMigratingConfig() {\n      return {\n        props: {},\n        events: {},\n      }\n    },\n  },\n}\n"]}]}