{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/tiendzung/workspace/video5pm/video5pm-ui/src/core/utils/type.js","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/core/utils/type.js","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1604478999957}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Value type of object\n * @param val\n * @returns {boolean}\n */\nexport var isObject = function isObject(val) {\n  switch (_typeof(val)) {\n    case 'null':\n      return false;\n\n    case 'object':\n      return true;\n\n    case 'function':\n      return true;\n\n    default:\n      {\n        return false;\n      }\n  }\n};\n/**\n * Value type of string\n * @param val\n * @returns {boolean}\n */\n\nexport var isString = function isString(val) {\n  return typeof val === 'string';\n};\n/**\n * Value type of number\n * @param val\n * @returns {boolean}\n */\n\nexport var isNumber = function isNumber(val) {\n  return typeof val === 'number';\n};\n/**\n * Value type of boolean\n * @param val\n * @returns {boolean}\n */\n\nexport var isBoolean = function isBoolean(val) {\n  return typeof val === 'boolean';\n};\nexport var isFunction = function isFunction(fn) {\n  return typeof fn === 'function' || fn instanceof Promise;\n};",null]}