{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/views/ResetPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/views/ResetPassword.vue","mtime":1605110441120},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      result: '',\n      password: null,\n      requiredPassword: false\n    };\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions('auth', ['resetPassword'])), {}, {\n    checkRequired: function checkRequired() {\n      var result = true;\n\n      if (!this.password) {\n        this.requiredPassword = true;\n        result = false;\n      } else {\n        this.requiredPassword = false;\n      }\n\n      return result;\n    },\n    onReset: function () {\n      var _onReset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var url, code, password, params;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.checkRequired()) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                url = new URL(window.location.href);\n                code = url.searchParams.get('code');\n                password = this.password;\n                params = {\n                  code: code,\n                  password: password\n                };\n                _context.next = 8;\n                return this.resetPassword(params);\n\n              case 8:\n                this.result = _context.sent;\n\n                if (this.result.user) {\n                  this.$toast.open({\n                    type: 'success',\n                    message: 'Password successfully updated.'\n                  });\n                  setTimeout(function () {\n                    return _this.$router.push('/sign-in');\n                  }, 2000);\n                } else {\n                  this.$toast.open({\n                    type: 'error',\n                    message: this.result.errorMessage\n                  });\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onReset() {\n        return _onReset.apply(this, arguments);\n      }\n\n      return onReset;\n    }()\n  })\n};",{"version":3,"sources":["ResetPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,gBAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,OAAA,kCACA,UAAA,CAAA,MAAA,EAAA,CAAA,eAAA,CAAA,CADA;AAEA,IAAA,aAFA,2BAEA;AACA,UAAA,MAAA,GAAA,IAAA;;AACA,UAAA,CAAA,KAAA,QAAA,EAAA;AACA,aAAA,gBAAA,GAAA,IAAA;AACA,QAAA,MAAA,GAAA,KAAA;AACA,OAHA,MAGA;AACA,aAAA,gBAAA,GAAA,KAAA;AACA;;AACA,aAAA,MAAA;AACA,KAXA;AAYA,IAAA,OAZA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAaA,KAAA,aAAA,EAbA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAgBA,gBAAA,GAhBA,GAgBA,IAAA,GAAA,CAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAhBA;AAiBA,gBAAA,IAjBA,GAiBA,GAAA,CAAA,YAAA,CAAA,GAAA,CAAA,MAAA,CAjBA;AAkBA,gBAAA,QAlBA,GAkBA,KAAA,QAlBA;AAmBA,gBAAA,MAnBA,GAmBA;AACA,kBAAA,IAAA,EAAA,IADA;AAEA,kBAAA,QAAA,EAAA;AAFA,iBAnBA;AAAA;AAAA,uBAuBA,KAAA,aAAA,CAAA,MAAA,CAvBA;;AAAA;AAuBA,qBAAA,MAvBA;;AAwBA,oBAAA,KAAA,MAAA,CAAA,IAAA,EAAA;AACA,uBAAA,MAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,EAAA,SADA;AAEA,oBAAA,OAAA,EAAA;AAFA,mBAAA;AAIA,kBAAA,UAAA,CAAA,YAAA;AACA,2BAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AACA,mBAFA,EAEA,IAFA,CAAA;AAGA,iBARA,MAQA;AACA,uBAAA,MAAA,CAAA,IAAA,CAAA;AAAA,oBAAA,IAAA,EAAA,OAAA;AAAA,oBAAA,OAAA,EAAA,KAAA,MAAA,CAAA;AAAA,mBAAA;AACA;;AAlCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AARA,CAAA","sourcesContent":["<template>\n  <div class=\"page vertical-align\">\n    <div class=\"vertical-align-middle\">\n      <div class=\"text-center mb-60\">\n        <h2 class=\"header-2 mb-24\">Reset your password</h2>\n      </div>\n      <form @submit.prevent=\"onReset\">\n        <label class=\" font-weight-bold mb-4  \">New password</label>\n        <p-input\n          type=\"password\"\n          validate=\"on\"\n          class=\"mb-20\"\n          name=\"password\"\n          v-model=\"password\"\n          hiddenPass=\"on\"\n          :required=\"requiredPassword\"\n          placeholder=\"New password\"\n        />\n        <button class=\"btn btn-special btn-primary mb-20 \"\n          >Reset Password</button\n        >\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapActions } from 'vuex'\n\nexport default {\n  data() {\n    return {\n      result: '',\n      password: null,\n      requiredPassword: false,\n    }\n  },\n  methods: {\n    ...mapActions('auth', ['resetPassword']),\n    checkRequired() {\n      let result = true\n      if (!this.password) {\n        this.requiredPassword = true\n        result = false\n      } else {\n        this.requiredPassword = false\n      }\n      return result\n    },\n    async onReset() {\n      if (!this.checkRequired()) {\n        return\n      }\n      const url = new URL(window.location.href)\n      const code = url.searchParams.get('code')\n      const password = this.password\n      const params = {\n        code: code,\n        password: password,\n      }\n      this.result = await this.resetPassword(params)\n      if (this.result.user) {\n        this.$toast.open({\n          type: 'success',\n          message: 'Password successfully updated.',\n        })\n        setTimeout(() => {\n          return this.$router.push('/sign-in')\n        }, 2000)\n      } else {\n        this.$toast.open({ type: 'error', message: this.result.errorMessage })\n      }\n    },\n  },\n}\n</script>\n<style></style>\n"],"sourceRoot":"src/packages/auth/views"}]}