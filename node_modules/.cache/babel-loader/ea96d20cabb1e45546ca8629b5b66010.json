{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/components/layouts/v2/Header.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/components/layouts/v2/Header.vue","mtime":1604479001981},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport http from '@core/services/http';\nimport Browser from '@core/helpers/browser';\nimport { mapState, mapMutations, mapActions } from 'vuex';\nimport SocketService from '@core/services/socket';\nimport { FULLFILL_EXPORT_BUCKET, ORDER_EXPORT_BUCKET } from '@core/constants/storage';\nimport { PUSH_NOTIFICATION, FETCH_NOTIFICATIONS, COUNT_NOTIFICATIONS, COUNT_NOTIFICATIONS_UNREAD, READ_NOTIFICATIONS } from '@/packages/shared/store';\nexport default {\n  name: 'Header',\n  props: {\n    shop: {\n      type: Object,\n      default: function _default() {}\n    },\n    shops: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    isSidebarOpen: {\n      type: Boolean,\n      default: true\n    }\n  },\n  created: function created() {\n    var vm = this;\n    SocketService.connect(function (e) {\n      var msg = JSON.parse(e.data);\n      vm.pushNotification(msg);\n    });\n    this.init();\n  },\n  data: function data() {\n    return {\n      isFetchNotity: false,\n      isShowNavbarOnMobile: false,\n      socket: null\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState('shared', {\n    notifications: function notifications(state) {\n      return state.notifications;\n    },\n    countNoti: function countNoti(state) {\n      return state.countNoti;\n    },\n    countNotiUnread: function countNotiUnread(state) {\n      return state.countNotiUnread;\n    }\n  })), {}, {\n    validShops: function validShops() {\n      var _this = this;\n\n      return this.shop && this.shops ? this.shops.filter(function (_ref) {\n        var id = _ref.id;\n        return id !== _this.shop.id;\n      }) : [];\n    }\n  }),\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions('shared', [FETCH_NOTIFICATIONS, COUNT_NOTIFICATIONS, COUNT_NOTIFICATIONS_UNREAD, READ_NOTIFICATIONS])), mapMutations('shared', [PUSH_NOTIFICATION])), {}, {\n    scrollHandler: function () {\n      var _scrollHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var element, length, last;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                element = e.target;\n                length = this.notifications.length;\n\n                if (!(this.countNoti <= length)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                if (!this.isFetchNotity) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 6:\n                this.isFetchNotity = true;\n\n                if (!(element.scrollHeight - element.scrollTop === element.clientHeight)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                last = this.notifications[length - 1];\n                _context.next = 11;\n                return this.fetchNotifications({\n                  limit: 10,\n                  last_id: last.id\n                });\n\n              case 11:\n                _context.next = 13;\n                return this.readNotifications();\n\n              case 13:\n                this.isFetchNotity = false;\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function scrollHandler(_x) {\n        return _scrollHandler.apply(this, arguments);\n      }\n\n      return scrollHandler;\n    }(),\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Promise.all([this.fetchNotifications({\n                  limit: 10\n                }), this.countNotifications(), this.countNotificationsUnread({\n                  status: 'unread'\n                })]);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    handleSelectShop: function handleSelectShop(shop) {\n      this.$emit('selectShop', shop);\n    },\n    toggleShowSidebar: function toggleShowSidebar() {\n      this.$emit('toggleShowSidebar');\n    },\n    toggleShowNavbar: function toggleShowNavbar() {\n      this.isShowNavbarOnMobile = !this.isShowNavbarOnMobile;\n    },\n    downloadFile: function () {\n      var _downloadFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url, item_type) {\n        var type, arr, fileName, data;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (item_type === 'export') {\n                  type = ORDER_EXPORT_BUCKET;\n                } else if (item_type === 'export_fullfill') {\n                  type = FULLFILL_EXPORT_BUCKET;\n                }\n\n                arr = url.split('/');\n                arr.shift();\n                fileName = arr.join('_');\n                _context3.next = 6;\n                return http.get(\"/uploads/file-export/download?type=\".concat(type, \"&url=\").concat(url), {\n                  type: 'blob'\n                });\n\n              case 6:\n                data = _context3.sent;\n\n                try {\n                  Browser.downloadBlob(data, \"\".concat(fileName, \".csv\"));\n                } catch (error) {\n                  this.$toast.open({\n                    type: 'error',\n                    message: 'File error !!!'\n                  });\n                }\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function downloadFile(_x2, _x3) {\n        return _downloadFile.apply(this, arguments);\n      }\n\n      return downloadFile;\n    }(),\n    onOpenDropdownNotifi: function () {\n      var _onOpenDropdownNotifi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(v) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!v) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.readNotifications();\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function onOpenDropdownNotifi(_x4) {\n        return _onOpenDropdownNotifi.apply(this, arguments);\n      }\n\n      return onOpenDropdownNotifi;\n    }()\n  })\n};",null]}