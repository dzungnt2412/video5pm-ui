{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/components/layouts/v2/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/components/layouts/v2/Index.vue","mtime":1604028089983},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport isMobile from 'ismobilejs'\nimport { mapState, mapActions } from 'vuex'\nimport { SELECT_SHOP } from '@/packages/shop/store'\nimport '@assets/scss/bootstrap.scss'\nimport '@assets/scss/bootstrap-extend.scss'\nimport '@assets/scss/web-icons/web-icons.scss'\nimport '@assets/fonts/material-design/material-design.min.css'\nimport '@assets/scss/site.scss'\nimport PHeader from './Header'\nimport PSidebar from './Sidebar'\nimport PNoti from './Notibar'\n\nexport default {\n  name: 'Version2',\n  components: {\n    PHeader,\n    PSidebar,\n    PNoti,\n  },\n  computed: {\n    ...mapState('shop', {\n      shop: (state) => state.shop,\n      shops: (state) => state.shops,\n    }),\n    ...mapState('shared', {\n      notificationMessage: (state) => state.notificationMessage,\n      notificationLabel: (state) => state.notificationLabel,\n    }),\n  },\n  data() {\n    return {\n      isSidebarOpen: true,\n    }\n  },\n  mounted() {\n    if (isMobile.phone) {\n      this.isSidebarOpen = false\n    }\n  },\n  methods: {\n    ...mapActions('shop', [SELECT_SHOP]),\n\n    toggleShowSidebar() {\n      this.isSidebarOpen = !this.isSidebarOpen\n    },\n    async handleSelectShop(shop) {\n      const result = await this.selectShop({ id: shop.id })\n\n      if (!result.success) {\n        this.$toast.open({ type: 'error', message: result.message })\n        return\n      }\n\n      this.$toast.open(`Chọn shop ${shop.name} thành công`)\n\n      if (this.$route.name === 'dashboard') {\n        setTimeout(() => {\n          location.reload()\n        }, 500)\n      } else {\n        this.$router.push('/')\n      }\n    },\n  },\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/components/layouts/v2","sourcesContent":["<template>\n  <div\n    class=\"animsition dashboard\"\n    :class=\"{\n      'site-menubar-unfold': isSidebarOpen,\n      'site-menubar-hide': !isSidebarOpen,\n    }\"\n  >\n    <p-noti></p-noti>\n    <p-header\n      :shop=\"shop\"\n      :shops=\"shops\"\n      @selectShop=\"handleSelectShop\"\n      @toggleShowSidebar=\"toggleShowSidebar\"\n      :isSidebarOpen=\"isSidebarOpen\"\n    />\n    <p-sidebar :isSidebarOpen=\"isSidebarOpen\" />\n    <router-view :key=\"$route.name\"></router-view>\n  </div>\n</template>\n\n<script>\nimport isMobile from 'ismobilejs'\nimport { mapState, mapActions } from 'vuex'\nimport { SELECT_SHOP } from '@/packages/shop/store'\nimport '@assets/scss/bootstrap.scss'\nimport '@assets/scss/bootstrap-extend.scss'\nimport '@assets/scss/web-icons/web-icons.scss'\nimport '@assets/fonts/material-design/material-design.min.css'\nimport '@assets/scss/site.scss'\nimport PHeader from './Header'\nimport PSidebar from './Sidebar'\nimport PNoti from './Notibar'\n\nexport default {\n  name: 'Version2',\n  components: {\n    PHeader,\n    PSidebar,\n    PNoti,\n  },\n  computed: {\n    ...mapState('shop', {\n      shop: (state) => state.shop,\n      shops: (state) => state.shops,\n    }),\n    ...mapState('shared', {\n      notificationMessage: (state) => state.notificationMessage,\n      notificationLabel: (state) => state.notificationLabel,\n    }),\n  },\n  data() {\n    return {\n      isSidebarOpen: true,\n    }\n  },\n  mounted() {\n    if (isMobile.phone) {\n      this.isSidebarOpen = false\n    }\n  },\n  methods: {\n    ...mapActions('shop', [SELECT_SHOP]),\n\n    toggleShowSidebar() {\n      this.isSidebarOpen = !this.isSidebarOpen\n    },\n    async handleSelectShop(shop) {\n      const result = await this.selectShop({ id: shop.id })\n\n      if (!result.success) {\n        this.$toast.open({ type: 'error', message: result.message })\n        return\n      }\n\n      this.$toast.open(`Chọn shop ${shop.name} thành công`)\n\n      if (this.$route.name === 'dashboard') {\n        setTimeout(() => {\n          location.reload()\n        }, 500)\n      } else {\n        this.$router.push('/')\n      }\n    },\n  },\n}\n</script>\n"]}]}