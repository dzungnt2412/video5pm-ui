{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/ticket/views/components/Layout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/ticket/views/components/Layout.vue","mtime":1604479001993},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Sidebar from './Sidebar'\nimport mixinRoute from '@core/mixins/route'\nimport { mapActions } from 'vuex'\n\nexport default {\n  name: 'TicketLayout',\n  mixins: [mixinRoute],\n  components: { Sidebar },\n  data() {\n    return {\n      isLoading: false,\n    }\n  },\n  computed: {\n    ticketID() {\n      return parseInt(this.$route.params.id, 10)\n    },\n  },\n  methods: {\n    ...mapActions('ticket', [\n      'fetchTicketStatictis',\n      'fetchTickets',\n      'fetchTicket',\n    ]),\n\n    async refresh() {\n      this.isLoading = true\n      await this.fetchTicketStatictis()\n      if (this.ticketID) {\n        await this.fetchTicket(this.ticketID)\n      } else {\n        let filter = this.getRouteQuery()\n        await this.fetchTickets(filter)\n      }\n      setTimeout(() => {\n        this.isLoading = false\n      }, 1000)\n    },\n\n    handlerCreateTicket() {\n      this.$router.push({ name: 'ticket-form' })\n    },\n  },\n}\n",{"version":3,"sources":["Layout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Layout.vue","sourceRoot":"src/packages/ticket/views/components","sourcesContent":["<template>\n  <div class=\"ticket-page page\">\n    <div class=\"page-content container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-xl-3\">\n          <div class=\"d-flex mb-2 justify-content-between tal\">\n            <router-link\n              :to=\"{ name: 'ticket-form' }\"\n              class=\"col-6 btn btn-primary\"\n            >\n              <p-icon name=\"envelope\"></p-icon>\n              <span class=\"ml-5\">Má»Ÿ ticket</span>\n            </router-link>\n            <a\n              class=\"col-5 btn btn-default bg-white btn-outline\"\n              @click=\"refresh\"\n            >\n              <p-icon\n                :class=\"{ 'animation-rotate': isLoading }\"\n                icon-pack=\"md\"\n                name=\"refresh\"\n              ></p-icon>\n              <span class=\"ml-5\">Refresh</span>\n            </a>\n          </div>\n          <Sidebar />\n        </div>\n        <div class=\"col-xl-9\">\n          <router-view :key=\"$route.name\"></router-view>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport Sidebar from './Sidebar'\nimport mixinRoute from '@core/mixins/route'\nimport { mapActions } from 'vuex'\n\nexport default {\n  name: 'TicketLayout',\n  mixins: [mixinRoute],\n  components: { Sidebar },\n  data() {\n    return {\n      isLoading: false,\n    }\n  },\n  computed: {\n    ticketID() {\n      return parseInt(this.$route.params.id, 10)\n    },\n  },\n  methods: {\n    ...mapActions('ticket', [\n      'fetchTicketStatictis',\n      'fetchTickets',\n      'fetchTicket',\n    ]),\n\n    async refresh() {\n      this.isLoading = true\n      await this.fetchTicketStatictis()\n      if (this.ticketID) {\n        await this.fetchTicket(this.ticketID)\n      } else {\n        let filter = this.getRouteQuery()\n        await this.fetchTickets(filter)\n      }\n      setTimeout(() => {\n        this.isLoading = false\n      }, 1000)\n    },\n\n    handlerCreateTicket() {\n      this.$router.push({ name: 'ticket-form' })\n    },\n  },\n}\n</script>\n"]}]}