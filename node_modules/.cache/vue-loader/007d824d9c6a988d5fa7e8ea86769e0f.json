{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/views/ContainerList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/views/ContainerList.vue","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { VclTable } from 'vue-content-loading'\nimport { mapState, mapActions } from 'vuex'\nimport mixinRoute from '@core/mixins/route'\nimport mixinTable from '@core/mixins/table'\nimport { FETCH_CONTAINERS } from '../store/types'\nimport { CONTAINER_STATUS } from '../constants'\nimport EmptySearchResult from '@components/shared/EmptySearchResult'\nimport StatusTab from '@components/shared/StatusTab'\nimport mixinContainerExport from '@/packages/container/mixins/container-export'\n\nexport default {\n  name: 'ContainerList',\n  mixins: [mixinRoute, mixinTable, mixinContainerExport],\n  components: {\n    StatusTab,\n    VclTable,\n    EmptySearchResult,\n  },\n  computed: {\n    ...mapState('container', {\n      count: (state) => state.containerCount,\n      containers: (state) => state.containers,\n    }),\n    containerStatus() {\n      return CONTAINER_STATUS\n    },\n    notFoundImage() {\n      return require('@assets/img/notfound.svg')\n    },\n  },\n  data() {\n    return {\n      isFetching: true,\n      result: {},\n      actions: {},\n    }\n  },\n  created() {\n    this.filter = this.getRouteQuery()\n  },\n  methods: {\n    ...mapActions('container', [FETCH_CONTAINERS]),\n\n    async handleFetchContainers() {\n      this.isFetching = true\n      this.handleUpdateRouteQuery()\n      this.result = await this.fetchContainers(this.filter)\n      this.isFetching = false\n    },\n\n    handleActionItem() {},\n  },\n  watch: {\n    filter: {\n      handler: function() {\n        this.handleFetchContainers()\n      },\n      deep: true,\n    },\n  },\n}\n",null]}