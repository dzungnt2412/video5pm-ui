{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/shop/views/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/shop/views/List.vue","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { VclTable } from 'vue-content-loading'\nimport { mapActions, mapState } from 'vuex'\nimport mixinRoute from '@core/mixins/route'\nimport mixinTable from '@core/mixins/table'\nimport EmptySearchResult from '@components/shared/EmptySearchResult'\nimport { FETCH_SHOPS } from '../store'\n\nexport default {\n  name: 'ShopList',\n  mixins: [mixinRoute, mixinTable],\n  components: {\n    VclTable,\n    EmptySearchResult,\n  },\n  computed: {\n    ...mapState('shop', {\n      shops: (state) => state.shops,\n    }),\n    ...mapState('shared', {\n      shopList: (state) => state.shops,\n      count: (state) => state.countShop,\n    }),\n  },\n  data() {\n    return {\n      isFetching: false,\n      result: {},\n    }\n  },\n  created() {\n    this.filter = this.getRouteQuery()\n  },\n  methods: {\n    ...mapActions('shop', [FETCH_SHOPS]),\n    ...mapActions('shared', {\n      fetchShopList: FETCH_SHOPS,\n    }),\n\n    async init() {\n      this.isFetching = true\n      this.handleUpdateRouteQuery()\n      this.result = await this.fetchShops(this.filter)\n      this.isFetching = false\n    },\n\n    async handleCopyApiKey(key) {\n      try {\n        await this.$copyText(key)\n        this.$toast.open('Copied')\n      } catch (e) {\n        this.$toast.open({\n          type: 'error',\n          text: 'Có lỗi xảy ra. Vui lòng thử lại.',\n        })\n      }\n    },\n\n    handleActionItem() {},\n  },\n  watch: {\n    filter: {\n      handler: function() {\n        this.init()\n      },\n      deep: true,\n    },\n  },\n}\n",null]}