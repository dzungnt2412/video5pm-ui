{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/shop/views/Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/shop/views/Form.vue","mtime":1603898990384},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapActions } from 'vuex'\nimport { cloneDeep } from '@core/utils'\nimport { FETCH_SHOP, UPDATE_SHOP } from '../store'\n\nexport default {\n  name: 'ShopEdit',\n  computed: {\n    ...mapState('shop', {\n      current: (state) => state.shopUpdate,\n    }),\n    shopId() {\n      return parseInt(this.$route.params.id)\n    },\n  },\n  data() {\n    return {\n      isUpdating: false,\n      isFetching: false,\n      resultFetch: {},\n      shop: {},\n    }\n  },\n  mounted() {\n    this.handleFetchShop()\n  },\n  methods: {\n    ...mapActions('shop', [FETCH_SHOP, UPDATE_SHOP]),\n\n    async handleFetchShop() {\n      this.isFetching = true\n      this.resultFetch = await this.fetchShop(this.shopId)\n\n      if (this.resultFetch.success) {\n        this.$set(this, 'shop', cloneDeep(this.current))\n      }\n\n      this.isFetching = false\n    },\n\n    async handleUpdateShop() {\n      const validate = await this.$validator.validateAll()\n\n      if (!validate) {\n        return\n      }\n\n      this.isUpdating = true\n      const result = await this.updateShop(this.shop)\n\n      if (result.success) {\n        this.$set(this, 'shop', cloneDeep(this.current))\n        this.$toast.open({ type: 'success', message: 'Cập nhật thành công' })\n      } else {\n        this.$toast.open({ type: 'error', message: result.message })\n      }\n\n      this.isUpdating = false\n    },\n  },\n}\n",{"version":3,"sources":["Form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Form.vue","sourceRoot":"src/packages/shop/views","sourcesContent":["<template>\n  <div class=\"page\">\n    <div class=\"page-header\">\n      <p-button icon=\"chevron-left\" class=\"btn-pure pl-0 m-b-10\">\n        <router-link :to=\"{ name: 'shop-list' }\">Shop</router-link>\n      </p-button>\n      <h1 class=\"page-title\">Cập nhật</h1>\n    </div>\n    <div class=\"page-content\">\n      <div class=\"row annotated-section d-flex justify-content-between my-20\">\n        <div class=\"col-12 col-sm-3\"></div>\n\n        <div class=\"col-12 col-sm-8\">\n          <div class=\"panel\">\n            <div class=\"panel-body container-fluid\">\n              <div class=\"form-group\">\n                <label for=\"name\">Tên shop</label>\n                <input\n                  :class=\"[\n                    { 'is-valid': !errors.has('name') },\n                    { 'is-invalid': errors.has('name') },\n                  ]\"\n                  id=\"name\"\n                  class=\"form-control\"\n                  placeholder=\"Tên shop\"\n                  v-model=\"shop.name\"\n                  name=\"name\"\n                  v-validate=\"'required'\"\n                  :readonly=\"true\"\n                />\n                <div class=\"invalid-feedback\" v-if=\"errors.has('name')\">\n                  {{ errors.first('name') }}\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"domain\">Domain</label>\n                <input\n                  :class=\"[\n                    { 'is-valid': !errors.has('domain') },\n                    { 'is-invalid': errors.has('domain') },\n                  ]\"\n                  id=\"domain\"\n                  class=\"form-control\"\n                  placeholder=\"Domain\"\n                  v-model=\"shop.domain\"\n                  name=\"domain\"\n                  v-validate=\"'required|url'\"\n                />\n                <div class=\"invalid-feedback\" v-if=\"errors.has('domain')\">\n                  {{ errors.first('domain') }}\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"api-callback\">Callback url</label>\n                <input\n                  :class=\"[\n                    { 'is-valid': !errors.has('api_callback') },\n                    { 'is-invalid': errors.has('api_callback') },\n                  ]\"\n                  id=\"api-callback\"\n                  class=\"form-control\"\n                  placeholder=\"Callback url\"\n                  v-model=\"shop.api_callback\"\n                  name=\"api_callback\"\n                  v-validate=\"'url'\"\n                  data-vv-as=\"callback url\"\n                />\n                <div class=\"invalid-feedback\" v-if=\"errors.has('api_callback')\">\n                  {{ errors.first('api_callback') }}\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"api-key\">API key</label>\n                <input\n                  id=\"api-key\"\n                  class=\"form-control\"\n                  placeholder=\"API Key\"\n                  v-model=\"shop.api_key\"\n                  :readonly=\"true\"\n                />\n              </div>\n              <p-button\n                @click=\"handleUpdateShop\"\n                :disabled=\"isUpdating\"\n                :loading=\"isUpdating\"\n              >\n                Cập nhật\n              </p-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\nimport { cloneDeep } from '@core/utils'\nimport { FETCH_SHOP, UPDATE_SHOP } from '../store'\n\nexport default {\n  name: 'ShopEdit',\n  computed: {\n    ...mapState('shop', {\n      current: (state) => state.shopUpdate,\n    }),\n    shopId() {\n      return parseInt(this.$route.params.id)\n    },\n  },\n  data() {\n    return {\n      isUpdating: false,\n      isFetching: false,\n      resultFetch: {},\n      shop: {},\n    }\n  },\n  mounted() {\n    this.handleFetchShop()\n  },\n  methods: {\n    ...mapActions('shop', [FETCH_SHOP, UPDATE_SHOP]),\n\n    async handleFetchShop() {\n      this.isFetching = true\n      this.resultFetch = await this.fetchShop(this.shopId)\n\n      if (this.resultFetch.success) {\n        this.$set(this, 'shop', cloneDeep(this.current))\n      }\n\n      this.isFetching = false\n    },\n\n    async handleUpdateShop() {\n      const validate = await this.$validator.validateAll()\n\n      if (!validate) {\n        return\n      }\n\n      this.isUpdating = true\n      const result = await this.updateShop(this.shop)\n\n      if (result.success) {\n        this.$set(this, 'shop', cloneDeep(this.current))\n        this.$toast.open({ type: 'success', message: 'Cập nhật thành công' })\n      } else {\n        this.$toast.open({ type: 'error', message: result.message })\n      }\n\n      this.isUpdating = false\n    },\n  },\n}\n</script>\n"]}]}