{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/auth/views/SignUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/auth/views/SignUp.vue","mtime":1604203874773},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions } from 'vuex'\nimport VueRecaptcha from 'vue-recaptcha'\n\nexport default {\n  components: { VueRecaptcha },\n  data() {\n    return {\n      user: {\n        username: null,\n        email: null,\n        phone_number: null,\n        password: null,\n        user_referring_code: null,\n      },\n      isLoading: false,\n      isShowSnackbar: false,\n      result: { success: true, message: 'Some thing wrong' },\n      timeout: null,\n    }\n  },\n  created() {\n    if (typeof this.$route.query['ref_code'] !== 'undefined') {\n      this.user.user_referring_code = this.$route.query['ref_code']\n    }\n  },\n  methods: {\n    ...mapActions('auth', ['signUp']),\n\n    async onSignUp() {\n      const validate = await this.$validator.validateAll()\n\n      if (!validate) {\n        return\n      }\n\n      this.isLoading = true\n      this.isShowSnackbar = false\n\n      this.result = await this.signUp(this.user)\n\n      if (this.result.success) {\n        this.$toast.open({\n          type: 'success',\n          message:\n            'Tài khoản của bạn đã được tạo thành công, vui lòng liên hệ bộ phận hỗ trợ để kích hoạt tài khoản',\n          duration: 6000,\n        })\n        this.$router.push({ name: 'sign-in' })\n        return\n      }\n      this.$toast.open({\n        type: 'error',\n        message:\n          this.result.message + ' :</br>' + this.result.errors.join('</br>'),\n        duration: 3000000,\n      })\n\n      setTimeout(() => {\n        this.isLoading = false\n      }, 2000)\n    },\n  },\n}\n",{"version":3,"sources":["SignUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"SignUp.vue","sourceRoot":"src/packages/auth/views","sourcesContent":["<template>\n  <div class=\"page vertical-align\">\n    <div class=\"vertical-align-middle mt-80\">\n      <div class=\"header mb-40\">\n        <h3>\n          <b>Sign up to Lionnix</b>\n        </h3>\n        <p>Best quality. Lowest base cost. The most optimal system.</p>\n      </div>\n\n      <div class=\"body mb-40\">\n        <p>\n          <label class=\"font-weight-bold\">Email</label>\n          <p-input placeholder=\"you@example.com\" type=\"email\" />\n        </p>\n        <p>\n          <label class=\"font-weight-bold\">Username</label>\n          <p-input placeholder=\"Username\" type=\"username\" />\n        </p>\n        <p>\n          <label class=\"font-weight-bold\">Password</label>\n          <p-input\n            placeholder=\"Enter password\"\n            prefixIcon=\"search\"\n            type=\"password\"\n          />\n        </p>\n      </div>\n\n      <div class=\"captcha mb-20\">\n        <vue-recaptcha\n          sitekey=\"6Ld8Gt0ZAAAAAEjG7RBzGB-dmL5nQ8plAt1YvHpm\"\n          :loadRecaptchaScript=\"true\"\n        >\n        </vue-recaptcha>\n      </div>\n\n      <span class=\"font-size-12\"\n        >By creating an account, you agree to Lionnix's\n        <a href=\"\">Terms of Service</a>.</span\n      >\n      <button class=\"btn btn-special btn-primary mt-20 mb-20\">\n        Sign up\n      </button>\n\n      <p class=\"text-center\">\n        Already have an account?\n        <router-link\n          :to=\"{ name: 'sign-in' }\"\n          class=\"font-weight-600\"\n          style=\"color: #37393E;\"\n          >Sign in</router-link\n        >\n      </p>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapActions } from 'vuex'\nimport VueRecaptcha from 'vue-recaptcha'\n\nexport default {\n  components: { VueRecaptcha },\n  data() {\n    return {\n      user: {\n        username: null,\n        email: null,\n        phone_number: null,\n        password: null,\n        user_referring_code: null,\n      },\n      isLoading: false,\n      isShowSnackbar: false,\n      result: { success: true, message: 'Some thing wrong' },\n      timeout: null,\n    }\n  },\n  created() {\n    if (typeof this.$route.query['ref_code'] !== 'undefined') {\n      this.user.user_referring_code = this.$route.query['ref_code']\n    }\n  },\n  methods: {\n    ...mapActions('auth', ['signUp']),\n\n    async onSignUp() {\n      const validate = await this.$validator.validateAll()\n\n      if (!validate) {\n        return\n      }\n\n      this.isLoading = true\n      this.isShowSnackbar = false\n\n      this.result = await this.signUp(this.user)\n\n      if (this.result.success) {\n        this.$toast.open({\n          type: 'success',\n          message:\n            'Tài khoản của bạn đã được tạo thành công, vui lòng liên hệ bộ phận hỗ trợ để kích hoạt tài khoản',\n          duration: 6000,\n        })\n        this.$router.push({ name: 'sign-in' })\n        return\n      }\n      this.$toast.open({\n        type: 'error',\n        message:\n          this.result.message + ' :</br>' + this.result.errors.join('</br>'),\n        duration: 3000000,\n      })\n\n      setTimeout(() => {\n        this.isLoading = false\n      }, 2000)\n    },\n  },\n}\n</script>\n"]}]}