{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/settings/views/GeneralSetting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/settings/views/GeneralSetting.vue","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapActions } from 'vuex'\nimport { isValidDomain } from '@core/utils'\nimport { REMOVE_CONNECT_SHOP, FETCH_SHOP, SELECT_SHOP } from '../../shop/store'\n\nexport default {\n  mounted() {\n    this.init()\n  },\n  computed: {\n    ...mapState('shop', {\n      shop: (state) => state.shop,\n    }),\n  },\n  data() {\n    return {\n      isFetching: false,\n      platforms: [\n        {\n          logo: `${process.env.VUE_APP_ASSETS}/shopify-logo.jpg`,\n          type: 'shopify',\n          title: 'Shopify',\n          isChoose: false,\n          example: 'shop-lionnix.myshopify.com',\n        },\n        {\n          logo: `${process.env.VUE_APP_ASSETS}/woocommerce-logo.jpg`,\n          title: 'Woocommerce',\n          type: 'woocommerce',\n          isChoose: false,\n          example: 'http://wp.lionnix.net/',\n        },\n      ],\n      url: '',\n    }\n  },\n  methods: {\n    ...mapActions('shop', [REMOVE_CONNECT_SHOP, FETCH_SHOP, SELECT_SHOP]),\n\n    async init() {\n      this.isFetching = true\n      await this.fetchShop(this.shop.id)\n      await this.selectShop({ id: this.shop.id })\n\n      this.isFetching = false\n\n      const { message } = this.$route.query\n      if (message) {\n        return this.$toast.open({ type: 'error', message: message })\n      }\n    },\n    connectShop(type) {\n      const check = this.isValidURL(type)\n      if (!check) {\n        return this.$toast.open({ type: 'error', message: 'URL is invalid' })\n      }\n      let urlPath = this.url.trim()\n      urlPath = urlPath.replace(/\\/+$/, '')\n      const url = `${process.env.VUE_APP_BASE_API_ENDPOINT}/platforms/install/${type}?shop_id=${this.shop.id}&domain=${urlPath}`\n\n      window.open(url, '_self')\n    },\n    isValidURL(type) {\n      if (type === 'shopify') {\n        let regex = new RegExp(/^(https:?\\/?\\/?)/gi)\n        this.url = this.url.replace(regex, '')\n\n        regex = new RegExp(/.*(.myshopify.com\\/?)$/gm)\n        const check = regex.test(this.url)\n\n        return check\n      } else {\n        return isValidDomain(this.url)\n      }\n    },\n    chosePlatform(platform) {\n      if (this.shop.domain && this.shop.platform) {\n        return this.$toast.open({\n          type: 'error',\n          message: 'Shop is connecting with other platform',\n        })\n      }\n      this.url = ''\n\n      for (let i = 0; i < this.platforms.length; i++) {\n        this.platforms[i].isChoose = false\n      }\n\n      platform.isChoose = true\n    },\n    confirmRemoveConnectShop() {\n      this.$dialog.confirm({\n        message: 'Are you sure you want to do this?',\n        onConfirm: () => this.removeShop(this.shop),\n      })\n    },\n    async removeShop(shop) {\n      const response = await this.removeConnectShop(shop)\n\n      if (!response.success) {\n        return this.$toast.open({ type: 'error', message: response.message })\n      }\n    },\n  },\n}\n",null]}