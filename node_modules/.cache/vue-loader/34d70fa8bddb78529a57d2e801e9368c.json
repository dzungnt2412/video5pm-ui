{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/views/SignUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/views/SignUp.vue","mtime":1605110441124},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions } from 'vuex'\nimport VueRecaptcha from 'vue-recaptcha'\nimport SelectPhone from '@/components/shared/resource/SelectPhone'\n\nexport default {\n  components: { VueRecaptcha, SelectPhone },\n\n  computed: {\n    recapchaKey() {\n      return `${process.env.VUE_APP_RECAPCHA_KEY}`\n    },\n  },\n  props: {\n    listNumber: {\n      type: Array,\n      default: () => [{}],\n    },\n  },\n\n  data() {\n    return {\n      form: {\n        checkCaptcha: false,\n      },\n      check: true,\n      user: {\n        username: '',\n        email: '',\n        password: '',\n        user_referring_code: null,\n        phone_number: '',\n      },\n      shop_name: '',\n      country_code: '',\n      isLoading: false,\n      isShowSnackbar: false,\n      result: { success: true, message: 'Some thing wrong' },\n      timeout: null,\n      requiredEmail: false,\n      requiredPassword: false,\n      requiredUsername: false,\n      requiredShopname: false,\n      requiredPhonenumber: false,\n      correctEmail: false,\n      correctPassword: false,\n      correctUsername: false,\n      correctShopname: false,\n      correctPhonenumber: false,\n      numberC: {\n        type: Object,\n        default: () => {},\n      },\n    }\n  },\n  created() {\n    if (typeof this.$route.query['ref_code'] !== 'undefined') {\n      this.user.user_referring_code = this.$route.query['ref_code']\n    }\n  },\n\n  methods: {\n    ...mapActions('auth', ['signUp']),\n\n    checkEmail(e) {\n      if (e) {\n        return (this.correctEmail = true)\n      }\n      return (this.correctEmail = false)\n    },\n    checkUsername(e) {\n      if (e) {\n        return (this.correctUsername = true)\n      }\n      return (this.correctUsername = false)\n    },\n    checkPassword(e) {\n      if (e) {\n        return (this.correctPassword = true)\n      }\n      return (this.correctPassword = false)\n    },\n    checkShopname(e) {\n      if (e) {\n        return (this.correctShopname = true)\n      }\n      return (this.correctShopname = false)\n    },\n    checkPhonenumber(e) {\n      if (e) {\n        return (this.correctPhonenumber = true)\n      }\n      return (this.correctPhonenumber = false)\n    },\n\n    checkRequired() {\n      let result = true\n      if (this.user.username == '') {\n        this.requiredUsername = true\n        result = false\n      } else {\n        this.requiredUsername = false\n      }\n\n      if (this.user.password == '') {\n        this.requiredPassword = true\n        result = false\n      } else {\n        this.requiredPassword = false\n      }\n\n      if (this.user.email == '') {\n        this.requiredEmail = true\n        result = false\n      } else {\n        this.requiredEmail = false\n      }\n\n      if (this.shop_name == '') {\n        this.requiredShopname = true\n        result = false\n      } else {\n        this.requiredShopname = false\n      }\n\n      if (this.user.phone_number == '') {\n        this.requiredPhonenumber = true\n        result = false\n      } else {\n        this.requiredPhonenumber = false\n      }\n\n      return result\n    },\n\n    onVerify: function(response) {\n      if (response) this.form.checkCaptcha = true\n      this.check = true\n    },\n    onCaptchaExpired: function() {\n      this.form.checkCaptcha = false\n    },\n\n    async onSignUp() {\n      if (!this.checkRequired()) {\n        return\n      }\n      if (\n        this.correctEmail == false ||\n        this.correctUsername == false ||\n        this.correctPassword == false ||\n        this.correctShopname == false ||\n        this.correctPhonenumber == false\n      ) {\n        return\n      }\n\n      if (this.form.checkCaptcha == false) {\n        this.check = false\n        return\n      }\n      const data = {\n        username: this.user.username,\n        email: this.user.email,\n        password: this.user.password,\n        user_referring_code: this.user.user_referring_code,\n      }\n      if (this.country_code == '') {\n        data.phone_number = '+84' + this.user.phone_number\n      } else {\n        data.phone_number = this.country_code + this.user.phone_number\n      }\n      this.isLoading = true\n      this.isShowSnackbar = false\n      this.result = await this.signUp({ user: data, shop_name: this.shop_name })\n      setTimeout(() => {\n        this.isLoading = false\n      }, 2000)\n\n      if (this.result.success) {\n        setTimeout(() => {\n          this.$router.push({\n            name: 'verify-email',\n          })\n        }, 2000)\n        return\n      }\n      this.$refs.recapcha.reset()\n      this.form.checkCaptcha = false\n      this.$toast.open({\n        type: 'error',\n        message: this.result.errors.join('</br>'),\n        duration: 3000,\n      })\n    },\n  },\n}\n",null]}