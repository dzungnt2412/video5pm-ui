{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/ticket/views/Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/ticket/views/Form.vue","mtime":1603898990384},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapActions } from 'vuex'\nimport mixinRoute from '@core/mixins/route'\nimport debounce from 'lodash/debounce'\nimport mixinUpload from '@/core/mixins/upload'\nimport mixinTicket from '../mixins/ticket'\n\nexport default {\n  name: 'TicketForm',\n  mixins: [mixinRoute, mixinUpload, mixinTicket],\n  data() {\n    return {\n      isChange: false,\n      selected: '',\n      isSubmiting: false,\n      isLoading: false,\n      limit: 10,\n      shopId: 0,\n      result: {},\n      form: {\n        subject: '',\n        content: '',\n        category: '',\n        object_id: 0,\n        urls: [],\n      },\n    }\n  },\n  mounted() {\n    this.fetchCategories()\n    if (!this.orders || !this.orders.length) {\n      this.handleSearchOrders()\n    }\n  },\n  computed: {\n    ...mapState('container', {\n      orders: (state) => state.orders,\n    }),\n    ...mapState('ticket', {\n      categories: (state) => state.categories,\n    }),\n\n    ...mapState('shop', {\n      shops: (state) => state.shops,\n    }),\n\n    items() {\n      const items = this.orders.map((item) => {\n        return {\n          id: item.id,\n          text: item.ref_id,\n        }\n      })\n      return items\n    },\n    isClosed() {\n      return this.ticket.status === 'closed'\n    },\n  },\n  methods: {\n    ...mapActions('ticket', ['createTicket', 'fetchCategories']),\n    ...mapActions('container', ['fetchOrders']),\n\n    handleSearchOrders: debounce(async function(search = '') {\n      if (this.shopId < 1) {\n        return\n      }\n\n      this.isLoading = true\n      const result = await this.fetchOrders({\n        limit: this.limit,\n        search: search,\n        shop_id: this.shopId,\n      })\n      this.isLoading = false\n\n      if (result && result.success) {\n        return\n      }\n\n      this.$toast.open({ type: 'error', message: result.message })\n    }, 500),\n\n    async handlerCreateTicket() {\n      this.form.urls = this.files.map((item) => item.url)\n      const validate = await this.$validator.validateAll()\n      if (!validate) {\n        return\n      }\n\n      const result = await this.createTicket(this.form)\n\n      if (result.success) {\n        this.clearFrom()\n        this.$router.push({ name: 'ticket-view', params: { id: result.id } })\n      } else {\n        this.$toast.open({ type: 'error', message: result.message })\n      }\n    },\n\n    customLabel({ text }) {\n      return typeof text !== 'undefined' ? `${text}` : ''\n    },\n\n    handleSelect(item) {\n      this.form.object_id = item && item.id ? item.id : 0\n    },\n\n    handleRemove() {\n      this.form.object_id = 0\n    },\n\n    clearFrom() {\n      this.files = []\n      this.form = {\n        subject: '',\n        content: '',\n        category: '',\n        object_id: 0,\n        urls: null,\n      }\n    },\n\n    showDeleteConfirmation(item) {\n      this.$dialog.confirm({\n        title: `Xác nhận xóa file đính kèm?`,\n        message: `Bạn có chắc chắn muốn xóa file đính kèm này?`,\n        confirmText: 'Xóa',\n        onConfirm: () => this.handleDeleteImage(item),\n        type: 'danger',\n      })\n    },\n  },\n  watch: {\n    shopId: function() {\n      this.handleSearchOrders()\n    },\n  },\n}\n",{"version":3,"sources":["Form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Form.vue","sourceRoot":"src/packages/ticket/views","sourcesContent":["<template>\n  <div class=\"ticket-page page\">\n    <div class=\"page-header\">\n      <h4 class=\"page-title\">Tạo mới Ticket</h4>\n    </div>\n    <div class=\"page-content container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-xl-6\">\n          <div class=\"card\">\n            <div class=\"card-block\">\n              <div\n                class=\"form-group floating\"\n                :class=\"[\n                  { 'has-success': !errors.has('category') },\n                  { 'has-danger': errors.has('category') },\n                ]\"\n              >\n                <label for=\"\">Chọn danh mục:</label>\n                <p-select\n                  class=\"floating\"\n                  v-model=\"form.category\"\n                  v-validate=\"'required'\"\n                  name=\"category\"\n                  data-vv-as=\"Danh mục\"\n                >\n                  <option value>Chọn danh mục</option>\n                  <option\n                    v-for=\"(text, key) in categories\"\n                    :key=\"key\"\n                    :value=\"text\"\n                    >{{ text }}</option\n                  >\n                </p-select>\n                <span class=\"invalid-feedback\" v-if=\"errors.has('category')\">{{\n                  errors.first('category')\n                }}</span>\n              </div>\n              <div\n                class=\"form-group floating\"\n                :class=\"[\n                  { 'has-success': !errors.has('object_id') },\n                  { 'has-danger': errors.has('object_id') },\n                ]\"\n              >\n                <div class=\"row\">\n                  <div class=\"col-6\">\n                    <label for=\"\">Chọn shop:</label>\n                    <p-select\n                      class=\"floating\"\n                      v-model=\"shopId\"\n                      name=\"shop\"\n                      data-vv-as=\"Shop\"\n                    >\n                      <option value=\"0\">-- Chọn một shop --</option>\n                      <option\n                        v-for=\"item in shops\"\n                        :key=\"item.id\"\n                        :value=\"item.id\"\n                        >{{ item.name }} - {{ item.domain }}</option\n                      >\n                    </p-select>\n                  </div>\n                  <div class=\"col-6\">\n                    <label for=\"\">Chọn mã đơn hàng:</label>\n                    <multiselect\n                      class=\"multiselect-custom is-fullwidth\"\n                      v-model=\"selected\"\n                      data-vv-as=\"Đơn hàng\"\n                      v-validate=\"'required'\"\n                      name=\"object_id\"\n                      :options=\"items\"\n                      placeholder=\"Chọn đơn hàng\"\n                      :loading=\"isLoading\"\n                      :limit=\"limit\"\n                      :custom-label=\"customLabel\"\n                      @search-change=\"handleSearchOrders\"\n                      @select=\"handleSelect\"\n                      @remove=\"handleRemove\"\n                    ></multiselect>\n                  </div>\n                </div>\n                <span class=\"invalid-feedback\" v-if=\"errors.has('object_id')\">{{\n                  errors.first('object_id')\n                }}</span>\n              </div>\n\n              <div\n                class=\"form-group floating\"\n                :class=\"[\n                  { 'has-success': !errors.has('subject') },\n                  { 'has-danger': errors.has('subject') },\n                ]\"\n              >\n                <label for=\"\">Tiêu đề:</label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Tiêu đề  \"\n                  v-model=\"form.subject\"\n                  v-validate=\"'required'\"\n                  name=\"subject\"\n                  data-vv-as=\"Tiêu đề\"\n                />\n                <span class=\"invalid-feedback\" v-if=\"errors.has('subject')\">\n                  {{ errors.first('subject') }}\n                </span>\n              </div>\n\n              <div\n                class=\"form-group floating\"\n                :class=\"[\n                  { 'has-success': !errors.has('content') },\n                  { 'has-danger': errors.has('content') },\n                ]\"\n              >\n                <label for=\"\">Nội dung:</label>\n                <textarea\n                  class=\"form-control\"\n                  rows=\"5\"\n                  placeholder=\"Nội dung\"\n                  v-model=\"form.content\"\n                  v-validate=\"'required'\"\n                  name=\"content\"\n                  data-vv-as=\"Nội dung\"\n                ></textarea>\n                <span class=\"invalid-feedback\" v-if=\"errors.has('content')\">\n                  {{ errors.first('content') }}\n                </span>\n              </div>\n\n              <div\n                class=\"form-group floating\"\n                :class=\"[\n                  { 'has-success': !errors.has('file') },\n                  { 'has-danger': errors.has('file') },\n                ]\"\n              >\n                <ul\n                  class=\"list-group list-group-full ticket-attach-list\"\n                  v-if=\"files && files.length\"\n                >\n                  <li\n                    class=\"list-group-item\"\n                    v-for=\"(item, i) in files\"\n                    :key=\"i\"\n                  >\n                    <span\n                      class=\"float-right\"\n                      @click.prevent=\"showDeleteConfirmation(item.uid)\"\n                    >\n                      <i class=\"icon md-close\"></i>\n                    </span>\n                    {{ item.name }}\n                  </li>\n                </ul>\n                <upload\n                  class=\"ticket-uploader\"\n                  :action=\"uploadFileEndpoint\"\n                  :accept=\"'.png,.jpg,.csv,.xlsx,.xls'\"\n                  drag\n                  multiple\n                  list-type=\"picture\"\n                  :data=\"{ type: 'tickets' }\"\n                  :headers=\"uploadHeaders\"\n                  :on-error=\"handleErrorFile\"\n                  :on-success=\"handleSuccess\"\n                  :max-file-size=\"4000000\"\n                >\n                  <div class=\"el-upload__text\">\n                    <p-icon name=\"attachment-alt\" icon-pack=\"md\"></p-icon>\n                    Tải file đính kèm\n                  </div>\n                </upload>\n                <p\n                  >File đính kèm chỉ hỗ trợ định dạng PNG, JPEG, CSV, XLSX và\n                  không vượt quá 5MB</p\n                >\n              </div>\n\n              <p-button\n                type=\"primary\"\n                @click=\"handlerCreateTicket\"\n                :disable=\"isSubmiting\"\n              >\n                <span>Mở ticket</span>\n              </p-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\nimport mixinRoute from '@core/mixins/route'\nimport debounce from 'lodash/debounce'\nimport mixinUpload from '@/core/mixins/upload'\nimport mixinTicket from '../mixins/ticket'\n\nexport default {\n  name: 'TicketForm',\n  mixins: [mixinRoute, mixinUpload, mixinTicket],\n  data() {\n    return {\n      isChange: false,\n      selected: '',\n      isSubmiting: false,\n      isLoading: false,\n      limit: 10,\n      shopId: 0,\n      result: {},\n      form: {\n        subject: '',\n        content: '',\n        category: '',\n        object_id: 0,\n        urls: [],\n      },\n    }\n  },\n  mounted() {\n    this.fetchCategories()\n    if (!this.orders || !this.orders.length) {\n      this.handleSearchOrders()\n    }\n  },\n  computed: {\n    ...mapState('container', {\n      orders: (state) => state.orders,\n    }),\n    ...mapState('ticket', {\n      categories: (state) => state.categories,\n    }),\n\n    ...mapState('shop', {\n      shops: (state) => state.shops,\n    }),\n\n    items() {\n      const items = this.orders.map((item) => {\n        return {\n          id: item.id,\n          text: item.ref_id,\n        }\n      })\n      return items\n    },\n    isClosed() {\n      return this.ticket.status === 'closed'\n    },\n  },\n  methods: {\n    ...mapActions('ticket', ['createTicket', 'fetchCategories']),\n    ...mapActions('container', ['fetchOrders']),\n\n    handleSearchOrders: debounce(async function(search = '') {\n      if (this.shopId < 1) {\n        return\n      }\n\n      this.isLoading = true\n      const result = await this.fetchOrders({\n        limit: this.limit,\n        search: search,\n        shop_id: this.shopId,\n      })\n      this.isLoading = false\n\n      if (result && result.success) {\n        return\n      }\n\n      this.$toast.open({ type: 'error', message: result.message })\n    }, 500),\n\n    async handlerCreateTicket() {\n      this.form.urls = this.files.map((item) => item.url)\n      const validate = await this.$validator.validateAll()\n      if (!validate) {\n        return\n      }\n\n      const result = await this.createTicket(this.form)\n\n      if (result.success) {\n        this.clearFrom()\n        this.$router.push({ name: 'ticket-view', params: { id: result.id } })\n      } else {\n        this.$toast.open({ type: 'error', message: result.message })\n      }\n    },\n\n    customLabel({ text }) {\n      return typeof text !== 'undefined' ? `${text}` : ''\n    },\n\n    handleSelect(item) {\n      this.form.object_id = item && item.id ? item.id : 0\n    },\n\n    handleRemove() {\n      this.form.object_id = 0\n    },\n\n    clearFrom() {\n      this.files = []\n      this.form = {\n        subject: '',\n        content: '',\n        category: '',\n        object_id: 0,\n        urls: null,\n      }\n    },\n\n    showDeleteConfirmation(item) {\n      this.$dialog.confirm({\n        title: `Xác nhận xóa file đính kèm?`,\n        message: `Bạn có chắc chắn muốn xóa file đính kèm này?`,\n        confirmText: 'Xóa',\n        onConfirm: () => this.handleDeleteImage(item),\n        type: 'danger',\n      })\n    },\n  },\n  watch: {\n    shopId: function() {\n      this.handleSearchOrders()\n    },\n  },\n}\n</script>\n"]}]}