{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/settings/views/GeneralSetting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/settings/views/GeneralSetting.vue","mtime":1603898990384},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapActions } from 'vuex'\nimport { isValidDomain } from '@core/utils'\nimport { REMOVE_CONNECT_SHOP, FETCH_SHOP, SELECT_SHOP } from '../../shop/store'\n\nexport default {\n  mounted() {\n    this.init()\n  },\n  computed: {\n    ...mapState('shop', {\n      shop: (state) => state.shop,\n    }),\n  },\n  data() {\n    return {\n      isFetching: false,\n      platforms: [\n        {\n          logo: `${process.env.VUE_APP_ASSETS}/shopify-logo.jpg`,\n          type: 'shopify',\n          title: 'Shopify',\n          isChoose: false,\n          example: 'shop-lionnix.myshopify.com',\n        },\n        {\n          logo: `${process.env.VUE_APP_ASSETS}/woocommerce-logo.jpg`,\n          title: 'Woocommerce',\n          type: 'woocommerce',\n          isChoose: false,\n          example: 'http://wp.lionnix.net/',\n        },\n      ],\n      url: '',\n    }\n  },\n  methods: {\n    ...mapActions('shop', [REMOVE_CONNECT_SHOP, FETCH_SHOP, SELECT_SHOP]),\n\n    async init() {\n      this.isFetching = true\n      await this.fetchShop(this.shop.id)\n      await this.selectShop({ id: this.shop.id })\n\n      this.isFetching = false\n\n      const { message } = this.$route.query\n      if (message) {\n        return this.$toast.open({ type: 'error', message: message })\n      }\n    },\n    connectShop(type) {\n      const check = this.isValidURL(type)\n      if (!check) {\n        return this.$toast.open({ type: 'error', message: 'URL is invalid' })\n      }\n      let urlPath = this.url.trim()\n      urlPath = urlPath.replace(/\\/+$/, '')\n      const url = `${process.env.VUE_APP_BASE_API_ENDPOINT}/platforms/install/${type}?shop_id=${this.shop.id}&domain=${urlPath}`\n\n      window.open(url, '_self')\n    },\n    isValidURL(type) {\n      if (type === 'shopify') {\n        let regex = new RegExp(/^(https:?\\/?\\/?)/gi)\n        this.url = this.url.replace(regex, '')\n\n        regex = new RegExp(/.*(.myshopify.com\\/?)$/gm)\n        const check = regex.test(this.url)\n\n        return check\n      } else {\n        return isValidDomain(this.url)\n      }\n    },\n    chosePlatform(platform) {\n      if (this.shop.domain && this.shop.platform) {\n        return this.$toast.open({\n          type: 'error',\n          message: 'Shop is connecting with other platform',\n        })\n      }\n      this.url = ''\n\n      for (let i = 0; i < this.platforms.length; i++) {\n        this.platforms[i].isChoose = false\n      }\n\n      platform.isChoose = true\n    },\n    confirmRemoveConnectShop() {\n      this.$dialog.confirm({\n        message: 'Are you sure you want to do this?',\n        onConfirm: () => this.removeShop(this.shop),\n      })\n    },\n    async removeShop(shop) {\n      const response = await this.removeConnectShop(shop)\n\n      if (!response.success) {\n        return this.$toast.open({ type: 'error', message: response.message })\n      }\n    },\n  },\n}\n",{"version":3,"sources":["GeneralSetting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"GeneralSetting.vue","sourceRoot":"src/packages/settings/views","sourcesContent":["<template>\n  <PageDetailLoading v-if=\"isFetching\"></PageDetailLoading>\n  <div class=\"order-view-page page\" v-else>\n    <div class=\"page-header\">\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <p-button icon=\"chevron-left\" class=\"btn-pure pl-0\">\n              <router-link :to=\"{ name: 'settings' }\">Settings</router-link>\n            </p-button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"page-content\">\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div\n              class=\"d-flex align-items-center justify-content-between flex-wrap\"\n            >\n              <div class=\"order-metadata d-flex align-items-center\">\n                <h4 class=\"order-number\">General</h4>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-4 mb-10\">\n            <b>Store Details</b>\n            <p>We will use this information to contact you</p>\n          </div>\n          <div class=\"col-8 mb-10\">\n            <p>Store name</p>\n            <p-input\n              type=\"text\"\n              placeholder=\"Store name\"\n              v-model=\"shop.name\"\n              disabled\n            >\n            </p-input>\n          </div>\n          <div class=\"col-4 \"> </div>\n          <div class=\"col-4\" v-show=\"false\">\n            <p>Account Email</p>\n            <p-input type=\"text\" placeholder=\"Account email\"> </p-input>\n          </div>\n          <div class=\"col-8\">\n            <p>Shop Domain</p>\n            <p-input type=\"text\" disabled v-model=\"shop.domain\"> </p-input>\n          </div>\n        </div>\n        <hr v-show=\"false\" />\n        <div class=\"row\" v-show=\"false\">\n          <div class=\"col-4\">\n            <b>Store currency</b>\n          </div>\n          <div class=\"col-8\">\n            <p>Store currency</p>\n            <p-input type=\"text\" placeholder=\"Store currency\"> </p-input>\n          </div>\n        </div>\n        <hr />\n        <div class=\"row\">\n          <div class=\"col-4\">\n            <b>Connect shop</b>\n          </div>\n          <div\n            class=\"col-4\"\n            v-for=\"(platform, i) in platforms\"\n            :key=\"i\"\n            v-show=\"\n              (platform.type === shop.platform && shop.domain !== '') ||\n                shop.platform === ''\n            \"\n          >\n            <div class=\"panel panel-bordered\">\n              <div class=\"panel-heading\">\n                <img :src=\"platform.logo\" height=\"190px\" alt=\"No Thumbnail\" />\n              </div>\n              <div class=\"d-flex justify-content-between choose-shop\">\n                <template\n                  v-if=\"platform.type === shop.platform && shop.domain !== ''\"\n                >\n                  <b>{{ shop.domain }}</b>\n                  <p-button type=\"danger\" @click=\"confirmRemoveConnectShop\">\n                    Disconnect\n                  </p-button>\n                </template>\n                <template v-else-if=\"platform.isChoose\">\n                  <p-input\n                    type=\"text\"\n                    v-model=\"url\"\n                    :placeholder=\"platform.example\"\n                  />\n                  <p-button type=\"primary\" @click=\"connectShop(platform.type)\">\n                    Connect\n                  </p-button>\n                </template>\n                <template v-else>\n                  <b>{{ platform.title }}</b>\n                  <p-button type=\"primary\" @click=\"chosePlatform(platform)\">\n                    Choose\n                  </p-button>\n                </template>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.justify-content-between {\n  justify-content: space-between;\n}\n.choose-shop {\n  padding: 30px 10px;\n}\n</style>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\nimport { isValidDomain } from '@core/utils'\nimport { REMOVE_CONNECT_SHOP, FETCH_SHOP, SELECT_SHOP } from '../../shop/store'\n\nexport default {\n  mounted() {\n    this.init()\n  },\n  computed: {\n    ...mapState('shop', {\n      shop: (state) => state.shop,\n    }),\n  },\n  data() {\n    return {\n      isFetching: false,\n      platforms: [\n        {\n          logo: `${process.env.VUE_APP_ASSETS}/shopify-logo.jpg`,\n          type: 'shopify',\n          title: 'Shopify',\n          isChoose: false,\n          example: 'shop-lionnix.myshopify.com',\n        },\n        {\n          logo: `${process.env.VUE_APP_ASSETS}/woocommerce-logo.jpg`,\n          title: 'Woocommerce',\n          type: 'woocommerce',\n          isChoose: false,\n          example: 'http://wp.lionnix.net/',\n        },\n      ],\n      url: '',\n    }\n  },\n  methods: {\n    ...mapActions('shop', [REMOVE_CONNECT_SHOP, FETCH_SHOP, SELECT_SHOP]),\n\n    async init() {\n      this.isFetching = true\n      await this.fetchShop(this.shop.id)\n      await this.selectShop({ id: this.shop.id })\n\n      this.isFetching = false\n\n      const { message } = this.$route.query\n      if (message) {\n        return this.$toast.open({ type: 'error', message: message })\n      }\n    },\n    connectShop(type) {\n      const check = this.isValidURL(type)\n      if (!check) {\n        return this.$toast.open({ type: 'error', message: 'URL is invalid' })\n      }\n      let urlPath = this.url.trim()\n      urlPath = urlPath.replace(/\\/+$/, '')\n      const url = `${process.env.VUE_APP_BASE_API_ENDPOINT}/platforms/install/${type}?shop_id=${this.shop.id}&domain=${urlPath}`\n\n      window.open(url, '_self')\n    },\n    isValidURL(type) {\n      if (type === 'shopify') {\n        let regex = new RegExp(/^(https:?\\/?\\/?)/gi)\n        this.url = this.url.replace(regex, '')\n\n        regex = new RegExp(/.*(.myshopify.com\\/?)$/gm)\n        const check = regex.test(this.url)\n\n        return check\n      } else {\n        return isValidDomain(this.url)\n      }\n    },\n    chosePlatform(platform) {\n      if (this.shop.domain && this.shop.platform) {\n        return this.$toast.open({\n          type: 'error',\n          message: 'Shop is connecting with other platform',\n        })\n      }\n      this.url = ''\n\n      for (let i = 0; i < this.platforms.length; i++) {\n        this.platforms[i].isChoose = false\n      }\n\n      platform.isChoose = true\n    },\n    confirmRemoveConnectShop() {\n      this.$dialog.confirm({\n        message: 'Are you sure you want to do this?',\n        onConfirm: () => this.removeShop(this.shop),\n      })\n    },\n    async removeShop(shop) {\n      const response = await this.removeConnectShop(shop)\n\n      if (!response.success) {\n        return this.$toast.open({ type: 'error', message: response.message })\n      }\n    },\n  },\n}\n</script>\n"]}]}