{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/views/SignUp.vue?vue&type=template&id=70c0e017&scoped=true&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/views/SignUp.vue","mtime":1605110441124},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1604479001773},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"page vertical-align\" }, [\n    _c(\"div\", { staticClass: \"vertical-align-middle\" }, [\n      _vm._m(0),\n      _c(\n        \"form\",\n        {\n          attrs: { model: _vm.form },\n          on: {\n            submit: function($event) {\n              $event.preventDefault()\n              return _vm.onSignUp($event)\n            }\n          }\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"mb-16\" },\n            [\n              _c(\"label\", { staticClass: \"font-weight-bold\" }, [\n                _vm._v(\"Email\")\n              ]),\n              _c(\"p-input\", {\n                attrs: {\n                  placeholder: \"you@example.com\",\n                  type: \"email\",\n                  validate: \"on\",\n                  required: _vm.requiredEmail\n                },\n                on: {\n                  status: function($event) {\n                    return _vm.checkEmail($event)\n                  },\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.onSignUp($event)\n                  }\n                },\n                model: {\n                  value: _vm.user.email,\n                  callback: function($$v) {\n                    _vm.$set(_vm.user, \"email\", $$v)\n                  },\n                  expression: \"user.email\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"mb-16\" },\n            [\n              _c(\"label\", { staticClass: \"font-weight-bold\" }, [\n                _vm._v(\"Username\")\n              ]),\n              _c(\"p-input\", {\n                attrs: {\n                  placeholder: \"Username\",\n                  type: \"username\",\n                  validate: \"on\",\n                  required: _vm.requiredUsername\n                },\n                on: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.onSignUp($event)\n                  },\n                  status: function($event) {\n                    return _vm.checkUsername($event)\n                  }\n                },\n                model: {\n                  value: _vm.user.username,\n                  callback: function($$v) {\n                    _vm.$set(_vm.user, \"username\", $$v)\n                  },\n                  expression: \"user.username\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"mb-16\" },\n            [\n              _c(\"label\", { staticClass: \"font-weight-bold\" }, [\n                _vm._v(\"Password\")\n              ]),\n              _c(\"p-input\", {\n                attrs: {\n                  placeholder: \"Enter password\",\n                  hiddenPass: \"on\",\n                  type: \"password\",\n                  validate: \"on\",\n                  required: _vm.requiredPassword\n                },\n                on: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.onSignUp($event)\n                  },\n                  status: function($event) {\n                    return _vm.checkPassword($event)\n                  }\n                },\n                model: {\n                  value: _vm.user.password,\n                  callback: function($$v) {\n                    _vm.$set(_vm.user, \"password\", $$v)\n                  },\n                  expression: \"user.password\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\"div\", { staticClass: \"mb-16\" }, [\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"col-md-6 p-0\" },\n                [\n                  _c(\"label\", { staticClass: \"font-weight-bold\" }, [\n                    _vm._v(\"Shop name\")\n                  ]),\n                  _c(\"p-input\", {\n                    attrs: {\n                      placeholder: \"Your shop name\",\n                      type: \"shopname\",\n                      validate: \"on\",\n                      required: _vm.requiredShopname\n                    },\n                    on: {\n                      keyup: function($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"enter\",\n                            13,\n                            $event.key,\n                            \"Enter\"\n                          )\n                        ) {\n                          return null\n                        }\n                        return _vm.onSignUp($event)\n                      },\n                      status: function($event) {\n                        return _vm.checkShopname($event)\n                      }\n                    },\n                    model: {\n                      value: _vm.shop_name,\n                      callback: function($$v) {\n                        _vm.shop_name = $$v\n                      },\n                      expression: \"shop_name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"col-md-6 pr-0\" },\n                [\n                  _c(\"label\", { staticClass: \"font-weight-bold\" }, [\n                    _vm._v(\"Phone\")\n                  ]),\n                  _c(\"select-phone\", {\n                    staticClass: \"select-phone\",\n                    attrs: {\n                      \"current-number\": _vm.numberC,\n                      \"list-number\": _vm.listNumber\n                    },\n                    model: {\n                      value: _vm.country_code,\n                      callback: function($$v) {\n                        _vm.country_code = $$v\n                      },\n                      expression: \"country_code\"\n                    }\n                  }),\n                  _c(\"p-input\", {\n                    attrs: {\n                      placeholder: \"Ex. 923 456 789\",\n                      type: \"phonenumber\",\n                      validate: \"on\",\n                      required: _vm.requiredPhonenumber\n                    },\n                    on: {\n                      keyup: function($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"enter\",\n                            13,\n                            $event.key,\n                            \"Enter\"\n                          )\n                        ) {\n                          return null\n                        }\n                        return _vm.onSignUp($event)\n                      },\n                      status: function($event) {\n                        return _vm.checkPhonenumber($event)\n                      }\n                    },\n                    model: {\n                      value: _vm.user.phone_number,\n                      callback: function($$v) {\n                        _vm.$set(_vm.user, \"phone_number\", $$v)\n                      },\n                      expression: \"user.phone_number\"\n                    }\n                  })\n                ],\n                1\n              )\n            ])\n          ]),\n          _c(\n            \"div\",\n            { staticClass: \"captcha mt-40 mb-20\" },\n            [\n              _c(\"vue-recaptcha\", {\n                ref: \"recapcha\",\n                attrs: {\n                  sitekey: \"\" + _vm.recapchaKey,\n                  loadRecaptchaScript: true\n                },\n                on: { verify: _vm.onVerify, expired: _vm.onCaptchaExpired }\n              }),\n              _vm.check == false\n                ? _c(\"span\", { staticClass: \"invalid-error\" }, [\n                    _vm._v(\"\\n          Please check the captcha\\n        \")\n                  ])\n                : _vm._e()\n            ],\n            1\n          ),\n          _vm._m(1),\n          _c(\n            \"p-button\",\n            {\n              staticClass: \"btn btn-special btn-primary mt-20 \",\n              attrs: { loading: _vm.isLoading },\n              on: { click: _vm.onSignUp }\n            },\n            [_vm._v(\"\\n        Sign up\\n      \")]\n          )\n        ],\n        1\n      ),\n      _c(\n        \"p\",\n        { staticClass: \"text-center mb-80\" },\n        [\n          _vm._v(\"\\n      Already have an account?\\n      \"),\n          _c(\n            \"router-link\",\n            {\n              staticClass: \"font-weight-600 creatAcount\",\n              attrs: { to: { name: \"sign-in\" } }\n            },\n            [_vm._v(\"Sign in\")]\n          )\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"header mb-40\" }, [\n      _c(\"h2\", { staticClass: \"header-2\" }, [\n        _vm._v(\"\\n        Sign up to Lionnix\\n      \")\n      ]),\n      _c(\"span\", { staticClass: \"brand-text-little\" }, [\n        _vm._v(\"Best quality. Lowest base cost. The most optimal system.\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"span\", { staticClass: \"font-size-12\" }, [\n      _vm._v(\"By creating an account, you agree to Lionnix's\\n        \"),\n      _c(\n        \"a\",\n        { attrs: { target: \"_blank\", href: \"https://lionnix.com/FAQ\" } },\n        [_vm._v(\"Terms of Service\")]\n      ),\n      _vm._v(\".\")\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}