{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/design/views/components/ModalCreateDesign.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/design/views/components/ModalCreateDesign.vue","mtime":1603898990380},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'ModalChangeDesign',\n  props: {\n    visible: {\n      type: Boolean,\n      default: true,\n    },\n    createDesign: {\n      type: Function,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      sku: '',\n      loading: false,\n    }\n  },\n  methods: {\n    handleClose() {\n      this.$emit('update:visible', false)\n    },\n\n    async handleCreateDesign() {\n      const validate = await this.$validator.validateAll()\n\n      if (!validate) {\n        return\n      }\n\n      this.loading = true\n      const result = await this.createDesign({ sku: this.sku })\n      this.loading = false\n\n      if (result && result.success) {\n        this.$emit('created', result.id)\n      } else {\n        this.$toast.open({\n          message: result.message,\n          type: 'error',\n        })\n      }\n    },\n  },\n}\n",{"version":3,"sources":["ModalCreateDesign.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ModalCreateDesign.vue","sourceRoot":"src/packages/design/views/components","sourcesContent":["<template>\n  <p-modal\n    :active=\"visible\"\n    title=\"Tạo thư mục design mới\"\n    @close=\"handleClose\"\n  >\n    <div\n      class=\"form-group\"\n      :class=\"[\n        { 'has-success': !errors.has('sku') },\n        { 'has-danger': errors.has('sku') },\n      ]\"\n    >\n      <label for=\"sku\" class=\"form-control-label\">\n        SKU\n      </label>\n      <p-input\n        v-model=\"sku\"\n        name=\"sku\"\n        id=\"sku\"\n        v-validate=\"'required|alpha_dash|min:3'\"\n      >\n      </p-input>\n      <span class=\"invalid-feedback\" v-if=\"errors.has('sku')\">\n        {{ errors.first('sku') }}\n      </span>\n    </div>\n\n    <template slot=\"footer\">\n      <p-button type=\"default\" @click=\"handleClose\" :disable=\"loading\">\n        Cancel\n      </p-button>\n      <p-button type=\"primary\" @click=\"handleCreateDesign\" :disable=\"loading\">\n        Tạo\n      </p-button>\n    </template>\n  </p-modal>\n</template>\n\n<script>\nexport default {\n  name: 'ModalChangeDesign',\n  props: {\n    visible: {\n      type: Boolean,\n      default: true,\n    },\n    createDesign: {\n      type: Function,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      sku: '',\n      loading: false,\n    }\n  },\n  methods: {\n    handleClose() {\n      this.$emit('update:visible', false)\n    },\n\n    async handleCreateDesign() {\n      const validate = await this.$validator.validateAll()\n\n      if (!validate) {\n        return\n      }\n\n      this.loading = true\n      const result = await this.createDesign({ sku: this.sku })\n      this.loading = false\n\n      if (result && result.success) {\n        this.$emit('created', result.id)\n      } else {\n        this.$toast.open({\n          message: result.message,\n          type: 'error',\n        })\n      }\n    },\n  },\n}\n</script>\n"]}]}