{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/components/ConditionItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/components/ConditionItem.vue","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { cloneDeep } from '@core/utils'\nimport {\n  conditionColumns,\n  productConditionRelations,\n  quantityConditionRelations,\n  types,\n} from '../../constant'\nexport default {\n  name: 'ConditionItem',\n  props: {\n    type: {\n      type: String,\n      default: types.product_type,\n    },\n    condition: {\n      type: Object,\n      default: () => {\n        return {\n          column: 'tag',\n          relation: 'equals',\n          condition: '',\n        }\n      },\n    },\n    disableRemove: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    conditionColumns() {\n      return conditionColumns\n    },\n\n    relations() {\n      return this.type === types.quantity\n        ? quantityConditionRelations\n        : productConditionRelations\n    },\n\n    selectedProperty() {\n      return this.conditionColumns.find(\n        ({ value }) => value === this.internalValue.column\n      )\n    },\n  },\n  data() {\n    return {\n      internalValue: {},\n    }\n  },\n  created() {\n    this.internalValue = cloneDeep(this.condition)\n  },\n  methods: {\n    handleRemove() {\n      this.$emit('remove', this.value)\n    },\n  },\n  watch: {\n    condition: {\n      handler: function(val) {\n        this.internalValue = cloneDeep(val)\n      },\n      deep: true,\n    },\n    internalValue: {\n      handler: function(val) {\n        if (\n          JSON.stringify(this.internalValue) != JSON.stringify(this.condition)\n        ) {\n          this.$emit('input', val)\n        }\n      },\n      deep: true,\n    },\n  },\n}\n",{"version":3,"sources":["ConditionItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ConditionItem.vue","sourceRoot":"src/packages/order-mapping/views/components","sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-11\">\n      <div class=\"row\">\n        <div class=\"col-6 col-sm-4 mt-2 d-flex pr-2\">\n          <p-select v-model=\"internalValue.column\">\n            <option\n              v-for=\"column in conditionColumns\"\n              :key=\"column.value\"\n              :value=\"column.value\"\n            >\n              {{ column.text }}\n            </option>\n          </p-select>\n        </div>\n        <div class=\"col-6 col-sm-4 mt-2 d-flex px-2\">\n          <p-select v-model=\"internalValue.relation\" class=\"flex-fill\">\n            <option\n              :value=\"relation.value\"\n              v-for=\"relation in relations\"\n              :key=\"relation.value\"\n            >\n              {{ relation.text }}\n            </option>\n          </p-select>\n        </div>\n\n        <div\n          class=\"col-12 col-sm-4 mt-2 mb-0 px-2 form-group\"\n          v-if=\"selectedProperty\"\n        >\n          <input\n            :class=\"[{ 'is-invalid': errors.has('condition') }]\"\n            type=\"text\"\n            v-model=\"internalValue.condition\"\n            v-validate=\"'required'\"\n            name=\"condition\"\n            class=\"flex-fill form-control\"\n          />\n          <div class=\"invalid-feedback\" v-if=\"errors.has('condition')\">\n            Field is required\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-1 mt-2 pl-2\">\n      <p-button\n        type=\"default\"\n        icon=\"close\"\n        @click.prevent=\"handleRemove\"\n        v-if=\"!disableRemove\"\n      >\n      </p-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { cloneDeep } from '@core/utils'\nimport {\n  conditionColumns,\n  productConditionRelations,\n  quantityConditionRelations,\n  types,\n} from '../../constant'\nexport default {\n  name: 'ConditionItem',\n  props: {\n    type: {\n      type: String,\n      default: types.product_type,\n    },\n    condition: {\n      type: Object,\n      default: () => {\n        return {\n          column: 'tag',\n          relation: 'equals',\n          condition: '',\n        }\n      },\n    },\n    disableRemove: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    conditionColumns() {\n      return conditionColumns\n    },\n\n    relations() {\n      return this.type === types.quantity\n        ? quantityConditionRelations\n        : productConditionRelations\n    },\n\n    selectedProperty() {\n      return this.conditionColumns.find(\n        ({ value }) => value === this.internalValue.column\n      )\n    },\n  },\n  data() {\n    return {\n      internalValue: {},\n    }\n  },\n  created() {\n    this.internalValue = cloneDeep(this.condition)\n  },\n  methods: {\n    handleRemove() {\n      this.$emit('remove', this.value)\n    },\n  },\n  watch: {\n    condition: {\n      handler: function(val) {\n        this.internalValue = cloneDeep(val)\n      },\n      deep: true,\n    },\n    internalValue: {\n      handler: function(val) {\n        if (\n          JSON.stringify(this.internalValue) != JSON.stringify(this.condition)\n        ) {\n          this.$emit('input', val)\n        }\n      },\n      deep: true,\n    },\n  },\n}\n</script>\n"]}]}