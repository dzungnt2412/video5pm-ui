{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/views/components/OrderItems.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/views/components/OrderItems.vue","mtime":1603898990380},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Thumbnail from '@components/shared/Thumbnail'\nimport ModalChangeDesign from './ModalChangeDesign'\nexport default {\n  name: 'OrdersItems',\n  components: {\n    Thumbnail,\n    ModalChangeDesign,\n  },\n  props: {\n    display: {\n      type: String,\n      default: 'order',\n    },\n    items: {\n      type: Array,\n      default: () => [],\n    },\n    orderId: {\n      type: Number,\n      default: 0,\n    },\n    editing: {\n      type: Boolean,\n      default: false,\n    },\n    fetchDesigns: {\n      type: Function,\n      default: () => {},\n    },\n    productTypes: {\n      type: Array,\n      default: () => [],\n    },\n    designs: {\n      type: Array,\n      default: () => [],\n    },\n    shopId: {\n      type: Number,\n      default: 0,\n    },\n    isAllowUpdate: {\n      type: Boolean,\n      default: false,\n    },\n    order: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      isVisible: false,\n      item: {},\n    }\n  },\n  computed: {\n    imagePlaceholder() {\n      return require('@assets/img/image-placeholder.png')\n    },\n  },\n  methods: {\n    handleChangeDesign(item) {\n      if (!this.isAllowUpdate) return\n      this.item = item\n      this.isVisible = true\n    },\n\n    handleSelectedDesign({ url, design }) {\n      this.$emit('selectedDesign', {\n        design,\n        url,\n        item: this.item,\n        orderId: this.orderId,\n      })\n      this.isVisible = false\n    },\n\n    getAttributes(attributes) {\n      const attribute = []\n\n      if (attributes) {\n        Object.keys(attributes).forEach((key) => {\n          attribute.push(`${key}: ${attributes[key]}`)\n        })\n      }\n\n      return attribute.join(' | ')\n    },\n\n    getPrice(item) {\n      if (typeof item.product_type !== 'undefined' && item.product_type.price) {\n        return item.product_type.price\n      }\n\n      return item.price || 0\n    },\n  },\n}\n",{"version":3,"sources":["OrderItems.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"OrderItems.vue","sourceRoot":"src/packages/container/views/components","sourcesContent":["<template>\n  <div class=\"table-responsive order-items\">\n    <table\n      class=\"table table-hover order-items-table\"\n      :style=\"{ 'min-width': '1200px' }\"\n    >\n      <thead>\n        <tr>\n          <th>Design</th>\n          <th :style=\"{ width: '150px' }\">Sản phẩm</th>\n          <th :style=\"{ width: '150px' }\">Loại sản phẩm</th>\n          <th :style=\"{ width: '150px' }\">SKU</th>\n          <th>Attributes</th>\n          <th class=\"text-center\" :style=\"{ width: '120px' }\">Số lượng</th>\n          <th class=\"text-right\">Giá</th>\n          <th class=\"text-center\" :style=\"{ width: '150px' }\"> Vận chuyển</th>\n          <th class=\"text-center\" :style=\"{ width: '150px' }\"\n            >Giá vận chuyển</th\n          >\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(item, index) in items\" :key=\"index\">\n          <td>\n            <template v-if=\"item.image\">\n              <a href=\"#\" @click.prevent=\"handleChangeDesign(item)\">\n                <p-tooltip\n                  label=\"sửa design\"\n                  position=\"right\"\n                  type=\"dark\"\n                  :active=\"isAllowUpdate\"\n                >\n                  <div class=\"order-thumbnail\">\n                    <thumbnail class=\"order-image\" :src=\"item.image\" />\n                  </div>\n                </p-tooltip>\n              </a>\n            </template>\n            <template v-else>\n              <a href=\"#\" @click.prevent=\"handleChangeDesign(item)\">\n                <p-tooltip\n                  label=\"Chọn design\"\n                  position=\"right\"\n                  type=\"dark\"\n                  :active=\"isAllowUpdate\"\n                >\n                  <div class=\"order-thumbnail\">\n                    <img\n                      class=\"order-image order-image-placeholder\"\n                      :src=\"imagePlaceholder\"\n                    />\n                  </div>\n                </p-tooltip>\n              </a>\n            </template>\n          </td>\n          <td>\n            <p-input\n              v-if=\"editing\"\n              type=\"text\"\n              placeholder=\"Name\"\n              v-model=\"item.name\"\n            >\n            </p-input>\n            <span v-else>\n              {{ item.name }}\n            </span>\n          </td>\n          <td>\n            <span v-if=\"item.product_variant\">{{\n              item.product_variant.name\n            }}</span>\n            <span v-else class=\"badge badge-warning\">{{\n              'Chưa phân loại'\n            }}</span>\n          </td>\n          <td :style=\"{ 'max-width': '200px' }\">\n            <p-input\n              v-if=\"editing\"\n              type=\"text\"\n              placeholder=\"SKU\"\n              v-model=\"item.sku\"\n            >\n            </p-input>\n            <span v-else>\n              {{ item.sku }}\n            </span>\n          </td>\n          <td>\n            <template v-if=\"item.attribute\">\n              <template v-if=\"editing\">\n                <div\n                  class=\"form-group form-material\"\n                  v-for=\"(_, key) in item.attribute\"\n                  :key=\"key\"\n                >\n                  <label class=\"form-control-label\">{{ key }}</label>\n                  <input class=\"form-control\" v-model=\"item.attribute[key]\" />\n                </div>\n              </template>\n              <div v-else>\n                <div v-for=\"(_, key) in item.attribute\" :key=\"key\">\n                  {{ `${key}: ${item.attribute[key]}` }}\n                </div>\n              </div>\n            </template>\n          </td>\n          <td class=\"text-center\" :style=\"{ 'max-width': '150px' }\">\n            <p-input\n              v-if=\"editing\"\n              placeholder=\"Qty\"\n              v-model.number=\"item.quantity\"\n              type=\"number\"\n            >\n            </p-input>\n            <span v-else>\n              {{ item.quantity }}\n            </span>\n          </td>\n          <td class=\"text-right\">\n            {{ getPrice(item) | formatPrice }}\n          </td>\n          <td class=\"text-center\">\n            <span v-if=\"order.shipping_method\">{{\n              order.shipping_method\n            }}</span>\n            <span class=\"badge badge-round badge-warning\" v-else>\n              Pending\n            </span>\n          </td>\n          <td class=\"text-center\">\n            <template\n              v-if=\"order && order.shipping_code && item.product_base_id\"\n            >\n              <span v-if=\"item.shipping_fee\">\n                {{ item.shipping_fee | formatPrice }}\n              </span>\n              <span v-else>\n                Free\n              </span>\n            </template>\n            <template v-else>\n              <span class=\"badge badge-round badge-warning\">\n                Pending\n              </span>\n            </template>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <modal-change-design\n      :sku=\"item.sku\"\n      :visible.sync=\"isVisible\"\n      :fetch-designs=\"fetchDesigns\"\n      :shop-id=\"shopId\"\n      @selected=\"handleSelectedDesign\"\n      v-if=\"isVisible\"\n    />\n  </div>\n</template>\n\n<script>\nimport Thumbnail from '@components/shared/Thumbnail'\nimport ModalChangeDesign from './ModalChangeDesign'\nexport default {\n  name: 'OrdersItems',\n  components: {\n    Thumbnail,\n    ModalChangeDesign,\n  },\n  props: {\n    display: {\n      type: String,\n      default: 'order',\n    },\n    items: {\n      type: Array,\n      default: () => [],\n    },\n    orderId: {\n      type: Number,\n      default: 0,\n    },\n    editing: {\n      type: Boolean,\n      default: false,\n    },\n    fetchDesigns: {\n      type: Function,\n      default: () => {},\n    },\n    productTypes: {\n      type: Array,\n      default: () => [],\n    },\n    designs: {\n      type: Array,\n      default: () => [],\n    },\n    shopId: {\n      type: Number,\n      default: 0,\n    },\n    isAllowUpdate: {\n      type: Boolean,\n      default: false,\n    },\n    order: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      isVisible: false,\n      item: {},\n    }\n  },\n  computed: {\n    imagePlaceholder() {\n      return require('@assets/img/image-placeholder.png')\n    },\n  },\n  methods: {\n    handleChangeDesign(item) {\n      if (!this.isAllowUpdate) return\n      this.item = item\n      this.isVisible = true\n    },\n\n    handleSelectedDesign({ url, design }) {\n      this.$emit('selectedDesign', {\n        design,\n        url,\n        item: this.item,\n        orderId: this.orderId,\n      })\n      this.isVisible = false\n    },\n\n    getAttributes(attributes) {\n      const attribute = []\n\n      if (attributes) {\n        Object.keys(attributes).forEach((key) => {\n          attribute.push(`${key}: ${attributes[key]}`)\n        })\n      }\n\n      return attribute.join(' | ')\n    },\n\n    getPrice(item) {\n      if (typeof item.product_type !== 'undefined' && item.product_type.price) {\n        return item.product_type.price\n      }\n\n      return item.price || 0\n    },\n  },\n}\n</script>\n"]}]}