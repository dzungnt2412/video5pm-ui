{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/components/layouts/v2/Header.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/components/layouts/v2/Header.vue","mtime":1604479001981},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport http from '@core/services/http'\nimport Browser from '@core/helpers/browser'\nimport { mapState, mapMutations, mapActions } from 'vuex'\nimport SocketService from '@core/services/socket'\nimport {\n  FULLFILL_EXPORT_BUCKET,\n  ORDER_EXPORT_BUCKET,\n} from '@core/constants/storage'\nimport {\n  PUSH_NOTIFICATION,\n  FETCH_NOTIFICATIONS,\n  COUNT_NOTIFICATIONS,\n  COUNT_NOTIFICATIONS_UNREAD,\n  READ_NOTIFICATIONS,\n} from '@/packages/shared/store'\n\nexport default {\n  name: 'Header',\n  props: {\n    shop: {\n      type: Object,\n      default: () => {},\n    },\n    shops: {\n      type: Array,\n      default: () => [],\n    },\n    isSidebarOpen: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  created() {\n    const vm = this\n    SocketService.connect((e) => {\n      let msg = JSON.parse(e.data)\n      vm.pushNotification(msg)\n    })\n\n    this.init()\n  },\n  data() {\n    return {\n      isFetchNotity: false,\n      isShowNavbarOnMobile: false,\n      socket: null,\n    }\n  },\n  computed: {\n    ...mapState('shared', {\n      notifications: (state) => state.notifications,\n      countNoti: (state) => state.countNoti,\n      countNotiUnread: (state) => state.countNotiUnread,\n    }),\n\n    validShops() {\n      return this.shop && this.shops\n        ? this.shops.filter(({ id }) => id !== this.shop.id)\n        : []\n    },\n  },\n  methods: {\n    ...mapActions('shared', [\n      FETCH_NOTIFICATIONS,\n      COUNT_NOTIFICATIONS,\n      COUNT_NOTIFICATIONS_UNREAD,\n      READ_NOTIFICATIONS,\n    ]),\n    ...mapMutations('shared', [PUSH_NOTIFICATION]),\n\n    async scrollHandler(e) {\n      let element = e.target\n      let length = this.notifications.length\n      if (this.countNoti <= length) {\n        return\n      }\n\n      if (this.isFetchNotity) {\n        return\n      }\n\n      this.isFetchNotity = true\n\n      if (element.scrollHeight - element.scrollTop === element.clientHeight) {\n        let last = this.notifications[length - 1]\n        await this.fetchNotifications({ limit: 10, last_id: last.id })\n        await this.readNotifications()\n      }\n\n      this.isFetchNotity = false\n    },\n\n    async init() {\n      await Promise.all([\n        this.fetchNotifications({ limit: 10 }),\n        this.countNotifications(),\n        this.countNotificationsUnread({ status: 'unread' }),\n      ])\n    },\n\n    handleSelectShop(shop) {\n      this.$emit('selectShop', shop)\n    },\n    toggleShowSidebar() {\n      this.$emit('toggleShowSidebar')\n    },\n    toggleShowNavbar() {\n      this.isShowNavbarOnMobile = !this.isShowNavbarOnMobile\n    },\n    async downloadFile(url, item_type) {\n      let type\n      if (item_type === 'export') {\n        type = ORDER_EXPORT_BUCKET\n      } else if (item_type === 'export_fullfill') {\n        type = FULLFILL_EXPORT_BUCKET\n      }\n      const arr = url.split('/')\n      arr.shift()\n\n      const fileName = arr.join('_')\n\n      const data = await http.get(\n        `/uploads/file-export/download?type=${type}&url=${url}`,\n        {\n          type: 'blob',\n        }\n      )\n      try {\n        Browser.downloadBlob(data, `${fileName}.csv`)\n      } catch (error) {\n        this.$toast.open({ type: 'error', message: 'File error !!!' })\n      }\n    },\n    async onOpenDropdownNotifi(v) {\n      if (v) {\n        await this.readNotifications()\n      }\n    },\n  },\n}\n",null]}