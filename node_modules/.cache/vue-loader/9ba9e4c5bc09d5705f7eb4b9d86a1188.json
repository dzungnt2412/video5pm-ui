{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/ticket/views/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/ticket/views/List.vue","mtime":1603898990384},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapActions } from 'vuex'\nimport EmptySearchResult from '@components/shared/EmptySearchResult'\nimport debounce from 'lodash/debounce'\nimport mixinRoute from '@core/mixins/route'\nimport mixinTable from '@core/mixins/table'\nimport { VclTable } from 'vue-content-loading'\nimport ModalFilter from './components/ModalFilter'\nimport { truncate } from '@core/utils/string'\n\nexport default {\n  name: 'TicketList',\n  mixins: [mixinRoute, mixinTable],\n  components: {\n    EmptySearchResult,\n    VclTable,\n    ModalFilter,\n  },\n  data() {\n    return {\n      showModalFilter: false,\n      isFetching: false,\n      result: {},\n      filterKeyShow: [\n        'support',\n        'search',\n        'category',\n        'seller',\n        'accountant',\n        'start_date',\n        'end_date',\n        'sort',\n      ],\n      filter: {\n        page: 1,\n        search: '',\n        sort: '',\n        limit: 50,\n      },\n    }\n  },\n  filters: {\n    textKeyFilter(v) {\n      return v.replace('_', ' ')\n    },\n  },\n  computed: {\n    ...mapState('ticket', {\n      tickets: (state) => state.tickets,\n      count: (state) => state.count,\n      categories: (state) => state.categories,\n    }),\n\n    ticketStatus() {\n      return ['open', 'process', 'close']\n    },\n  },\n  created() {\n    this.filter = this.getRouteQuery()\n  },\n  methods: {\n    truncate,\n    ...mapActions('ticket', ['fetchTickets', 'fetchCategories']),\n\n    async init() {\n      this.isFetching = true\n      this.handleUpdateRouteQuery()\n      this.result = await this.fetchTickets(this.filter)\n      await this.fetchCategories()\n      this.isFetching = false\n    },\n\n    handleSearch: debounce(function(e) {\n      this.filter.search = e.target.value\n    }, 500),\n\n    handlerCreateTicket() {\n      this.$router.push({ name: 'ticket-form' })\n    },\n\n    onSort(order) {\n      this.filter.sort = order\n    },\n    handlerShowModalFilter() {\n      this.showModalFilter = true\n    },\n\n    handlerFilterAdvanced(v) {\n      this.filter = Object.assign(this.filter, v)\n      this.init()\n      this.showModalFilter = false\n    },\n  },\n  watch: {\n    filter: {\n      handler: function() {\n        this.init()\n      },\n      deep: true,\n    },\n  },\n}\n",{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/packages/ticket/views","sourcesContent":["<template>\n  <div>\n    <p-input\n      placeholder=\"Tìm kiếm ticket theo Mã đơn hàng/Tiêu đề\"\n      prefixIcon=\"search\"\n      class=\"mb-2 taf\"\n      type=\"search\"\n      :value=\"filter.search\"\n      @keyup.enter=\"handleSearch\"\n    >\n      <template slot=\"append\">\n        <p-button\n          type=\"default\"\n          icon=\"close\"\n          v-if=\"filter.search\"\n          @click=\"clearSearch\"\n        ></p-button>\n        <p-button type=\"default\" slot=\"trigger\" @click=\"handlerShowModalFilter\">\n          <span class=\"mr-10\">Lọc nâng cao</span>\n        </p-button>\n        <p-dropdown class=\"ml-20\" :dropdown-class=\"'dropdown-menu-right'\">\n          <p-button type=\"dark\" slot=\"trigger\">\n            <span class=\"mr-10\">Sắp xếp</span>\n            <p-icon :icon-pack=\"'md'\" name=\"swap-vertical\"></p-icon>\n          </p-button>\n          <template>\n            <p-dropdown-item @click=\"onSort('created_at:desc')\"\n              >Ngày tạo mới nhất</p-dropdown-item\n            >\n            <p-dropdown-item @click=\"onSort('created_at:asc')\"\n              >Ngày tạo cũ nhất</p-dropdown-item\n            >\n            <p-dropdown-item @click=\"onSort('updated_at:desc')\"\n              >Ngày trả lời mới nhất</p-dropdown-item\n            >\n            <p-dropdown-item @click=\"onSort('updated_at:asc')\"\n              >Ngày trả lời cũ nhất</p-dropdown-item\n            >\n          </template>\n        </p-dropdown>\n      </template>\n    </p-input>\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"d-filters\">\n          <!-- eslint-disable -->\n          <div\n            v-for=\"(item, key) in filter\"\n            :key=\"key\"\n            v-if=\"item && filterKeyShow.indexOf(key) !== -1\"\n            class=\"badge badge-lg badge-outline badge-dark\"\n          >\n            <span>{{ key | textKeyFilter }}: {{ item }}</span>\n            <a href=\"#\" @click=\"filter[key] = ''\"\n              ><p-icon name=\"close-mini\"></p-icon\n            ></a>\n          </div>\n          <!-- eslint-enable -->\n        </div>\n        <VclTable class=\"my-20\" v-if=\"isFetching\"></VclTable>\n        <template v-else-if=\"tickets.length\">\n          <div class=\"table-responsive-xl\">\n            <table class=\"table table-hover table-border\">\n              <thead>\n                <tr>\n                  <th width=\"50\">ID</th>\n                  <th>Tiêu đề</th>\n                  <th>Mã đơn hàng</th>\n                  <th class=\"text-right\">Ngày tạo</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"(item, index) in tickets\" :key=\"index\">\n                  <td>{{ item.id }}</td>\n                  <td>\n                    <router-link\n                      class=\"text-no-underline\"\n                      slot=\"reference\"\n                      :to=\"{\n                        name: 'ticket-view',\n                        params: { id: item.id },\n                      }\"\n                    >\n                      <strong>{{ truncate(item.subject, 50) }}</strong>\n                    </router-link>\n                  </td>\n                  <td>{{ item.ref_id }}</td>\n                  <td class=\"text-right\">{{\n                    item.created_at | datetime('dd/MM/yyyy HH:mm')\n                  }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div class=\"d-flex justify-content-between align-items-center\">\n            <span>{{ paginationLabel }}</span>\n            <p-pagination\n              :total=\"count\"\n              :perPage=\"filter.limit\"\n              :current.sync=\"filter.page\"\n              size=\"sm\"\n            ></p-pagination>\n          </div>\n        </template>\n        <EmptySearchResult\n          v-else\n          title=\"Không tìm thấy ticket\"\n        ></EmptySearchResult>\n      </div>\n    </div>\n    <modal-filter\n      :visible.sync=\"showModalFilter\"\n      :categories=\"categories\"\n      @update=\"handlerFilterAdvanced\"\n    ></modal-filter>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\nimport EmptySearchResult from '@components/shared/EmptySearchResult'\nimport debounce from 'lodash/debounce'\nimport mixinRoute from '@core/mixins/route'\nimport mixinTable from '@core/mixins/table'\nimport { VclTable } from 'vue-content-loading'\nimport ModalFilter from './components/ModalFilter'\nimport { truncate } from '@core/utils/string'\n\nexport default {\n  name: 'TicketList',\n  mixins: [mixinRoute, mixinTable],\n  components: {\n    EmptySearchResult,\n    VclTable,\n    ModalFilter,\n  },\n  data() {\n    return {\n      showModalFilter: false,\n      isFetching: false,\n      result: {},\n      filterKeyShow: [\n        'support',\n        'search',\n        'category',\n        'seller',\n        'accountant',\n        'start_date',\n        'end_date',\n        'sort',\n      ],\n      filter: {\n        page: 1,\n        search: '',\n        sort: '',\n        limit: 50,\n      },\n    }\n  },\n  filters: {\n    textKeyFilter(v) {\n      return v.replace('_', ' ')\n    },\n  },\n  computed: {\n    ...mapState('ticket', {\n      tickets: (state) => state.tickets,\n      count: (state) => state.count,\n      categories: (state) => state.categories,\n    }),\n\n    ticketStatus() {\n      return ['open', 'process', 'close']\n    },\n  },\n  created() {\n    this.filter = this.getRouteQuery()\n  },\n  methods: {\n    truncate,\n    ...mapActions('ticket', ['fetchTickets', 'fetchCategories']),\n\n    async init() {\n      this.isFetching = true\n      this.handleUpdateRouteQuery()\n      this.result = await this.fetchTickets(this.filter)\n      await this.fetchCategories()\n      this.isFetching = false\n    },\n\n    handleSearch: debounce(function(e) {\n      this.filter.search = e.target.value\n    }, 500),\n\n    handlerCreateTicket() {\n      this.$router.push({ name: 'ticket-form' })\n    },\n\n    onSort(order) {\n      this.filter.sort = order\n    },\n    handlerShowModalFilter() {\n      this.showModalFilter = true\n    },\n\n    handlerFilterAdvanced(v) {\n      this.filter = Object.assign(this.filter, v)\n      this.init()\n      this.showModalFilter = false\n    },\n  },\n  watch: {\n    filter: {\n      handler: function() {\n        this.init()\n      },\n      deep: true,\n    },\n  },\n}\n</script>\n"]}]}