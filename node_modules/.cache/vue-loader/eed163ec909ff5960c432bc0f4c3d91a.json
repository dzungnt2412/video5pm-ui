{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/views/components/ModalCreateOrAppendContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/views/components/ModalCreateOrAppendContainer.vue","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ORDER_STATUS_PENDING } from '@core/constants'\n\nexport default {\n  name: 'ModalCreateOrAppendContainer',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n    loading: {\n      type: Boolean,\n      default: false,\n    },\n    orders: {\n      type: Array,\n      default: () => [],\n    },\n    containers: {\n      type: Array,\n      default: () => [],\n    },\n    fetchContainers: {\n      type: Function,\n      default: () => {},\n    },\n    shopId: {\n      type: Number,\n      default: 0,\n    },\n  },\n  computed: {\n    availableOrders() {\n      return this.orders.filter(({ status }) => status === 'pending')\n    },\n    isHasInvalidOrders() {\n      return this.availableOrders.length < this.orders.length\n    },\n    buttonText() {\n      return this.selectedContainer ? 'Gán vào delivery order' : 'Create'\n    },\n  },\n  data() {\n    return {\n      isFetching: false,\n      selectedContainer: 0,\n    }\n  },\n  mounted() {\n    this.handleFetchContainers()\n  },\n  methods: {\n    handleClose() {\n      this.$emit('update:visible', false)\n    },\n\n    async handleFetchContainers() {\n      this.isFetching = true\n      const payload = {\n        status: ORDER_STATUS_PENDING,\n        limit: 250,\n      }\n\n      const result = await this.fetchContainers(payload)\n      this.isFetching = false\n\n      if (!result.success) {\n        this.$toast.open({ type: 'error', message: result.message })\n      }\n    },\n\n    handleSave() {\n      const ids = this.availableOrders.map(({ id }) => id)\n      this.$emit('save', {\n        ids,\n        containerId: this.selectedContainer,\n      })\n    },\n  },\n}\n",null]}