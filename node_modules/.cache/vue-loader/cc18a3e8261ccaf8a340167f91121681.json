{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/views/ContainerList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/container/views/ContainerList.vue","mtime":1604479001985},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { VclTable } from 'vue-content-loading'\nimport { mapState, mapActions } from 'vuex'\nimport mixinRoute from '@core/mixins/route'\nimport mixinTable from '@core/mixins/table'\nimport { FETCH_CONTAINERS } from '../store/types'\nimport { CONTAINER_STATUS } from '../constants'\nimport EmptySearchResult from '@components/shared/EmptySearchResult'\nimport StatusTab from '@components/shared/StatusTab'\nimport mixinContainerExport from '@/packages/container/mixins/container-export'\n\nexport default {\n  name: 'ContainerList',\n  mixins: [mixinRoute, mixinTable, mixinContainerExport],\n  components: {\n    StatusTab,\n    VclTable,\n    EmptySearchResult,\n  },\n  computed: {\n    ...mapState('container', {\n      count: (state) => state.containerCount,\n      containers: (state) => state.containers,\n    }),\n    containerStatus() {\n      return CONTAINER_STATUS\n    },\n    notFoundImage() {\n      return require('@assets/img/notfound.svg')\n    },\n  },\n  data() {\n    return {\n      isFetching: true,\n      result: {},\n      actions: {},\n    }\n  },\n  created() {\n    this.filter = this.getRouteQuery()\n  },\n  methods: {\n    ...mapActions('container', [FETCH_CONTAINERS]),\n\n    async handleFetchContainers() {\n      this.isFetching = true\n      this.handleUpdateRouteQuery()\n      this.result = await this.fetchContainers(this.filter)\n      this.isFetching = false\n    },\n\n    handleActionItem() {},\n  },\n  watch: {\n    filter: {\n      handler: function() {\n        this.handleFetchContainers()\n      },\n      deep: true,\n    },\n  },\n}\n",{"version":3,"sources":["ContainerList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ContainerList.vue","sourceRoot":"src/packages/container/views","sourcesContent":["<template>\n  <div class=\"order-list-page page\">\n    <div class=\"page-content container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-xl-12\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <status-tab v-model=\"filter.status\" :status=\"containerStatus\" />\n              <p-input\n                placeholder=\"Tìm kiếm delivery order theo ID\"\n                prefixIcon=\"search\"\n                class=\"mb-2\"\n                type=\"username\"\n                :value=\"filter.search\"\n                @keyup.enter=\"handleSearch\"\n              >\n                <template slot=\"append\">\n                  <p-button\n                    type=\"default\"\n                    icon=\"close\"\n                    v-if=\"filter.search\"\n                    @click=\"clearSearch\"\n                  ></p-button>\n                </template>\n              </p-input>\n              <VclTable class=\"my-20\" v-if=\"isFetching\"> </VclTable>\n              <template v-else-if=\"containers.length\">\n                <div class=\"table-responsive\">\n                  <table class=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th width=\"80\">ID</th>\n                        <th>Tổng tiền</th>\n                        <th>Ngày</th>\n                        <th>Trạng thái</th>\n                        <th class=\"text-right\">Chức năng</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"(item, index) in containers\" :key=\"index\">\n                        <td width=\"80\">\n                          <router-link\n                            class=\"text-no-underline\"\n                            :to=\"{\n                              name: 'container-view',\n                              params: { id: item.id },\n                            }\"\n                          >\n                            {{ item.id }}\n                          </router-link>\n                        </td>\n                        <td>\n                          <span v-if=\"item.status === 'pending'\">\n                            Pending\n                          </span>\n                          <span v-else>\n                            {{ item.total_amount | formatPrice }}\n                          </span>\n                        </td>\n                        <td>\n                          {{ item.created_at | date }}\n                        </td>\n                        <td>\n                          <span v-status:status=\"item.status\"></span>\n                        </td>\n                        <td class=\"text-right\">\n                          <p-popover\n                            class=\"mx-10\"\n                            placement=\"top\"\n                            trigger=\"hover\"\n                            type=\"dark\"\n                            content=\"Xem chi tiết\"\n                            compact\n                          >\n                            <router-link\n                              slot=\"reference\"\n                              :to=\"{\n                                name: 'container-view',\n                                params: { id: item.id },\n                              }\"\n                            >\n                              <p-icon name=\"eye\" iconPack=\"md\"></p-icon>\n                            </router-link>\n                          </p-popover>\n                          <p-popover\n                            class=\"mx-10\"\n                            placement=\"top\"\n                            trigger=\"hover\"\n                            type=\"dark\"\n                            content=\"Tải xuống\"\n                            compact\n                          >\n                            <a\n                              slot=\"reference\"\n                              href=\"#\"\n                              @click.prevent=\"handleExportContainer(item.id)\"\n                            >\n                              <p-icon\n                                name=\"long-arrow-down \"\n                                iconPack=\"md\"\n                              ></p-icon>\n                            </a>\n                          </p-popover>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div class=\"d-flex justify-content-between align-items-center\">\n                  <span>\n                    {{ paginationLabel }}\n                  </span>\n                  <p-pagination\n                    :total=\"count\"\n                    :perPage=\"filter.limit\"\n                    :current.sync=\"filter.page\"\n                    size=\"sm\"\n                  >\n                  </p-pagination>\n                </div>\n              </template>\n              <template v-else>\n                <EmptySearchResult\n                  title=\"Không tìm thấy delivery order\"\n                ></EmptySearchResult>\n              </template>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { VclTable } from 'vue-content-loading'\nimport { mapState, mapActions } from 'vuex'\nimport mixinRoute from '@core/mixins/route'\nimport mixinTable from '@core/mixins/table'\nimport { FETCH_CONTAINERS } from '../store/types'\nimport { CONTAINER_STATUS } from '../constants'\nimport EmptySearchResult from '@components/shared/EmptySearchResult'\nimport StatusTab from '@components/shared/StatusTab'\nimport mixinContainerExport from '@/packages/container/mixins/container-export'\n\nexport default {\n  name: 'ContainerList',\n  mixins: [mixinRoute, mixinTable, mixinContainerExport],\n  components: {\n    StatusTab,\n    VclTable,\n    EmptySearchResult,\n  },\n  computed: {\n    ...mapState('container', {\n      count: (state) => state.containerCount,\n      containers: (state) => state.containers,\n    }),\n    containerStatus() {\n      return CONTAINER_STATUS\n    },\n    notFoundImage() {\n      return require('@assets/img/notfound.svg')\n    },\n  },\n  data() {\n    return {\n      isFetching: true,\n      result: {},\n      actions: {},\n    }\n  },\n  created() {\n    this.filter = this.getRouteQuery()\n  },\n  methods: {\n    ...mapActions('container', [FETCH_CONTAINERS]),\n\n    async handleFetchContainers() {\n      this.isFetching = true\n      this.handleUpdateRouteQuery()\n      this.result = await this.fetchContainers(this.filter)\n      this.isFetching = false\n    },\n\n    handleActionItem() {},\n  },\n  watch: {\n    filter: {\n      handler: function() {\n        this.handleFetchContainers()\n      },\n      deep: true,\n    },\n  },\n}\n</script>\n"]}]}