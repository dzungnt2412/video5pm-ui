{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/dashboard/views/components/Seller.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/dashboard/views/components/Seller.vue","mtime":1603898990380},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapGetters, mapActions } from 'vuex'\nimport { FETCH_COUNTRIES } from '@/packages/shared/store'\nimport {\n  FETCH_STATISTIC_ORDERS,\n  FETCH_STATISTIC_TOP_SALES_COUNTRIES,\n  GET_PERCENT_TOP_SALES_COUNTRIES,\n  GET_STATISTICS_ORDERS_SELLER,\n} from '../../store'\nimport StatisticCard from './StatisticCard'\nimport GlobalSalesTopLocations from './SellerGlobalSalesTopLocations'\nimport ShopService from '@core/services/shop'\n\nexport default {\n  name: 'Dashboard',\n  components: { StatisticCard, GlobalSalesTopLocations },\n  computed: {\n    ...mapState('dashboard', {\n      statisticTopSalesCountries: (state) => state.statisticTopSalesCountries,\n    }),\n    ...mapGetters('dashboard', {\n      statisticsSales: GET_PERCENT_TOP_SALES_COUNTRIES,\n      statisticsOrders: GET_STATISTICS_ORDERS_SELLER,\n    }),\n    hasStatisticTopCountries() {\n      return (\n        this.statisticTopSalesCountries &&\n        Object.keys(this.statisticTopSalesCountries).length\n      )\n    },\n  },\n  data() {\n    return {\n      isFetchingStatisticOrders: false,\n      resultStatisticOrders: {},\n      isFetchingStatisticTopCountries: false,\n      resultStatisticTopCountries: {},\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  methods: {\n    ...mapActions('dashboard', [\n      FETCH_STATISTIC_ORDERS,\n      FETCH_STATISTIC_TOP_SALES_COUNTRIES,\n    ]),\n    ...mapActions('shared', [FETCH_COUNTRIES]),\n\n    init() {\n      this.fetchCountries()\n      this.handleFetchStatisticOrders()\n      this.handleFetchTopCountries()\n    },\n\n    async handleFetchStatisticOrders() {\n      this.isFetchingStatisticOrders = true\n      this.resultStatisticOrders = await this.fetchStatisticOrders({\n        shop_id: ShopService.getId(),\n      })\n      this.isFetchingStatisticOrders = false\n    },\n\n    async handleFetchTopCountries() {\n      this.isFetchingStatisticTopCountries = true\n      this.resultStatisticTopCountries = await this.fetchStatisticTopSalesCountries(\n        {\n          shop_id: ShopService.getId(),\n        }\n      )\n      this.isFetchingStatisticTopCountries = false\n    },\n  },\n}\n",{"version":3,"sources":["Seller.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Seller.vue","sourceRoot":"src/packages/dashboard/views/components","sourcesContent":["<template>\n  <div class=\"page\">\n    <div class=\"page-content container-fluid\">\n      <statistic-card :statistics=\"statisticsOrders\" />\n      <div\n        class=\"row\"\n        v-if=\"statisticTopSalesCountries && hasStatisticTopCountries\"\n      >\n        <div class=\"col-12\">\n          <div class=\"card card-shadow table-row\">\n            <div class=\"card-header card-header-transparent py-20\">\n              <span class=\"text-body blue-grey-700 font-weight-700\">\n                Quốc gia có doanh thu tốt nhất\n              </span>\n            </div>\n            <global-sales-top-locations\n              :map-data=\"statisticTopSalesCountries\"\n              :sales=\"statisticsSales\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters, mapActions } from 'vuex'\nimport { FETCH_COUNTRIES } from '@/packages/shared/store'\nimport {\n  FETCH_STATISTIC_ORDERS,\n  FETCH_STATISTIC_TOP_SALES_COUNTRIES,\n  GET_PERCENT_TOP_SALES_COUNTRIES,\n  GET_STATISTICS_ORDERS_SELLER,\n} from '../../store'\nimport StatisticCard from './StatisticCard'\nimport GlobalSalesTopLocations from './SellerGlobalSalesTopLocations'\nimport ShopService from '@core/services/shop'\n\nexport default {\n  name: 'Dashboard',\n  components: { StatisticCard, GlobalSalesTopLocations },\n  computed: {\n    ...mapState('dashboard', {\n      statisticTopSalesCountries: (state) => state.statisticTopSalesCountries,\n    }),\n    ...mapGetters('dashboard', {\n      statisticsSales: GET_PERCENT_TOP_SALES_COUNTRIES,\n      statisticsOrders: GET_STATISTICS_ORDERS_SELLER,\n    }),\n    hasStatisticTopCountries() {\n      return (\n        this.statisticTopSalesCountries &&\n        Object.keys(this.statisticTopSalesCountries).length\n      )\n    },\n  },\n  data() {\n    return {\n      isFetchingStatisticOrders: false,\n      resultStatisticOrders: {},\n      isFetchingStatisticTopCountries: false,\n      resultStatisticTopCountries: {},\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  methods: {\n    ...mapActions('dashboard', [\n      FETCH_STATISTIC_ORDERS,\n      FETCH_STATISTIC_TOP_SALES_COUNTRIES,\n    ]),\n    ...mapActions('shared', [FETCH_COUNTRIES]),\n\n    init() {\n      this.fetchCountries()\n      this.handleFetchStatisticOrders()\n      this.handleFetchTopCountries()\n    },\n\n    async handleFetchStatisticOrders() {\n      this.isFetchingStatisticOrders = true\n      this.resultStatisticOrders = await this.fetchStatisticOrders({\n        shop_id: ShopService.getId(),\n      })\n      this.isFetchingStatisticOrders = false\n    },\n\n    async handleFetchTopCountries() {\n      this.isFetchingStatisticTopCountries = true\n      this.resultStatisticTopCountries = await this.fetchStatisticTopSalesCountries(\n        {\n          shop_id: ShopService.getId(),\n        }\n      )\n      this.isFetchingStatisticTopCountries = false\n    },\n  },\n}\n</script>\n"]}]}