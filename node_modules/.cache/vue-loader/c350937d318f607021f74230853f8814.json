{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/user/views/ChangePassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/user/views/ChangePassword.vue","mtime":1604479001993},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapActions } from 'vuex'\nimport { CHANGE_PASSWORD } from '../store'\n\nexport default {\n  name: 'ChangeProfile',\n  computed: {\n    ...mapState('user', {\n      current: (state) => state.current,\n    }),\n  },\n  data() {\n    return {\n      password: {\n        current_password: '',\n        new_password: '',\n        confirm_password: '',\n      },\n      isChanging: false,\n    }\n  },\n  methods: {\n    ...mapActions('user', [CHANGE_PASSWORD]),\n\n    async handleChangePassword() {\n      const validate = await this.$validator.validateAll()\n\n      if (!validate) {\n        return\n      }\n\n      this.isChanging = true\n      const result = await this.changePassword(this.password)\n\n      if (result.success) {\n        this.$set(this, 'password', {})\n        this.$validator.reset()\n        this.$toast.open({\n          type: 'success',\n          message: 'Đổi mật khẩu thành công',\n        })\n      } else {\n        this.$toast.open({ type: 'error', message: result.message })\n      }\n\n      this.isChanging = false\n    },\n  },\n}\n",{"version":3,"sources":["ChangePassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ChangePassword.vue","sourceRoot":"src/packages/user/views","sourcesContent":["<template>\n  <div class=\"page\">\n    <div class=\"page-content\">\n      <div class=\"row annotated-section d-flex justify-content-between my-20\">\n        <div class=\"col-12 col-sm-3\">\n          <h3 class=\"annotated-section__title\">Đổi mật khẩu</h3>\n        </div>\n        <div class=\"col-12 col-sm-8\">\n          <div class=\"panel\">\n            <div class=\"panel-body container-fluid\">\n              <div class=\"form-group\">\n                <label for=\"current-password\">\n                  Mật khẩu hiện tại\n                </label>\n                <input\n                  :class=\"[\n                    { 'is-valid': !errors.has('current_password') },\n                    { 'is-invalid': errors.has('current_password') },\n                  ]\"\n                  class=\"form-control\"\n                  v-model=\"password.current_password\"\n                  v-validate=\"'required|min:6'\"\n                  data-vv-as=\"current password\"\n                  name=\"current_password\"\n                  type=\"password\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  v-if=\"errors.has('current_password')\"\n                >\n                  {{ errors.first('current_password') }}\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"new-password\">\n                  Mật khẩu mới\n                </label>\n                <input\n                  :class=\"[\n                    { 'is-valid': !errors.has('new_password') },\n                    { 'is-invalid': errors.has('new_password') },\n                  ]\"\n                  class=\"form-control\"\n                  id=\"new-password\"\n                  v-model=\"password.new_password\"\n                  v-validate=\"'required|min:6'\"\n                  data-vv-as=\"new password\"\n                  name=\"new_password\"\n                  type=\"password\"\n                />\n                <div class=\"invalid-feedback\" v-if=\"errors.has('new_password')\">\n                  {{ errors.first('new_password') }}\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"confirm-password\">\n                  Xác nhận lại mật khẩu\n                </label>\n                <input\n                  :class=\"[\n                    { 'is-valid': !errors.has('confirm_password') },\n                    { 'is-invalid': errors.has('confirm_password') },\n                  ]\"\n                  class=\"form-control\"\n                  id=\"confirm-password\"\n                  v-model=\"password.confirm_password\"\n                  v-validate=\"'required|min:6'\"\n                  data-vv-as=\"confirm password\"\n                  name=\"confirm_password\"\n                  type=\"password\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  v-if=\"errors.has('confirm_password')\"\n                >\n                  {{ errors.first('confirm_password') }}\n                </div>\n              </div>\n\n              <p-button\n                @click=\"handleChangePassword\"\n                :loading=\"isChanging\"\n                :disabled=\"isChanging\"\n              >\n                Đổi mật khẩu\n              </p-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\nimport { CHANGE_PASSWORD } from '../store'\n\nexport default {\n  name: 'ChangeProfile',\n  computed: {\n    ...mapState('user', {\n      current: (state) => state.current,\n    }),\n  },\n  data() {\n    return {\n      password: {\n        current_password: '',\n        new_password: '',\n        confirm_password: '',\n      },\n      isChanging: false,\n    }\n  },\n  methods: {\n    ...mapActions('user', [CHANGE_PASSWORD]),\n\n    async handleChangePassword() {\n      const validate = await this.$validator.validateAll()\n\n      if (!validate) {\n        return\n      }\n\n      this.isChanging = true\n      const result = await this.changePassword(this.password)\n\n      if (result.success) {\n        this.$set(this, 'password', {})\n        this.$validator.reset()\n        this.$toast.open({\n          type: 'success',\n          message: 'Đổi mật khẩu thành công',\n        })\n      } else {\n        this.$toast.open({ type: 'error', message: result.message })\n      }\n\n      this.isChanging = false\n    },\n  },\n}\n</script>\n"]}]}