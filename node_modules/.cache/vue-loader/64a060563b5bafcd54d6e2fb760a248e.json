{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/OptionMappingForm.vue?vue&type=template&id=7f5cc833&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/OptionMappingForm.vue","mtime":1603898990380},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1597736282333},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.isFetching\n    ? _c(\"PageDetailLoading\")\n    : _c(\n        \"div\",\n        { staticClass: \"page\" },\n        [\n          _c(\"UnsavedBar\", {\n            attrs: {\n              show: _vm.isShowUnsavedBar,\n              showDiscard: true,\n              loading: _vm.isSaving,\n              title: \"Save\"\n            },\n            on: { save: _vm.save, discard: _vm.discard }\n          }),\n          _c(\n            \"div\",\n            { staticClass: \"page-header\" },\n            [\n              _c(\n                \"p-button\",\n                {\n                  staticClass: \"btn-pure pl-0 mb-15\",\n                  attrs: { icon: \"chevron-left\" }\n                },\n                [\n                  _c(\n                    \"router-link\",\n                    { attrs: { to: { name: \"option-mapping-list\" } } },\n                    [_vm._v(\"\\n        Option mapping rules\\n      \")]\n                  )\n                ],\n                1\n              ),\n              _c(\"h1\", { staticClass: \"page-title\" }, [\n                _vm._v(_vm._s(_vm.pageTitle))\n              ])\n            ],\n            1\n          ),\n          _c(\"div\", { staticClass: \"page-content container-fluid\" }, [\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12\" }, [\n                _c(\"div\", { staticClass: \"card\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"card-block\" },\n                    [\n                      _c(\"div\", { staticClass: \"row\" }, [\n                        _c(\"div\", { staticClass: \"col-12\" }, [\n                          _c(\"div\", { staticClass: \"d-flex\" }, [\n                            _c(\n                              \"h5\",\n                              { staticClass: \"white-space-nowrap mr-15\" },\n                              [_vm._v(\"Lionnix Product\")]\n                            ),\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group mb-0\" },\n                              [\n                                _c(\n                                  \"p-select\",\n                                  {\n                                    directives: [\n                                      {\n                                        name: \"validate\",\n                                        rawName: \"v-validate\",\n                                        value: \"required\",\n                                        expression: \"'required'\"\n                                      }\n                                    ],\n                                    class: [\n                                      {\n                                        \"is-invalid\": _vm.errors.has(\n                                          \"product_type_id\"\n                                        )\n                                      }\n                                    ],\n                                    attrs: {\n                                      placeholder: \"Select product\",\n                                      name: \"product_type_id\"\n                                    },\n                                    on: { input: _vm.onProductTypeChange },\n                                    model: {\n                                      value: _vm.form.product_type_id,\n                                      callback: function($$v) {\n                                        _vm.$set(\n                                          _vm.form,\n                                          \"product_type_id\",\n                                          $$v\n                                        )\n                                      },\n                                      expression: \"form.product_type_id\"\n                                    }\n                                  },\n                                  _vm._l(_vm.products, function(product) {\n                                    return _c(\n                                      \"option\",\n                                      {\n                                        key: product.id,\n                                        domProps: { value: product.id }\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                        \" +\n                                            _vm._s(product.name) +\n                                            \"\\n                      \"\n                                        )\n                                      ]\n                                    )\n                                  }),\n                                  0\n                                ),\n                                _vm.errors.has(\"product_type_id\")\n                                  ? _c(\n                                      \"div\",\n                                      { staticClass: \"invalid-feedback\" },\n                                      [\n                                        _vm._v(\n                                          \"\\n                      Product type is required\\n                    \"\n                                        )\n                                      ]\n                                    )\n                                  : _vm._e()\n                              ],\n                              1\n                            )\n                          ])\n                        ])\n                      ]),\n                      _c(\"div\", { staticClass: \"row\" }, [\n                        _c(\"div\", { staticClass: \"col-6\" }, [\n                          _c(\"h4\", [_vm._v(\"Lionnix\")])\n                        ]),\n                        _c(\"div\", { staticClass: \"col-6\" }, [\n                          _c(\"h4\", [_vm._v(\"Shop\")])\n                        ])\n                      ]),\n                      _vm._l(_vm.form.rules, function(rule, ruleIndex) {\n                        return _c(\n                          \"div\",\n                          { key: ruleIndex, staticClass: \"row mb-15\" },\n                          [\n                            _c(\"div\", { staticClass: \"col-6\" }, [\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group flex-fill\" },\n                                [\n                                  _c(\"label\", [_vm._v(\"Option\")]),\n                                  _c(\n                                    \"p-select\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"validate\",\n                                          rawName: \"v-validate\",\n                                          value: \"required\",\n                                          expression: \"'required'\"\n                                        }\n                                      ],\n                                      class: [\n                                        {\n                                          \"is-invalid\": _vm.errors.has(\n                                            \"option_set_target-\" + ruleIndex\n                                          )\n                                        }\n                                      ],\n                                      attrs: {\n                                        value: rule.option_set.target_value,\n                                        placeholder: \"Select option set\",\n                                        name: \"option_set_target-\" + ruleIndex\n                                      },\n                                      on: {\n                                        input: function(value) {\n                                          return _vm.onOptionSetTargetValueChange(\n                                            rule,\n                                            value\n                                          )\n                                        }\n                                      }\n                                    },\n                                    _vm._l(_vm.optionSets, function(\n                                      optionSet,\n                                      index\n                                    ) {\n                                      return _c(\n                                        \"option\",\n                                        {\n                                          key: index,\n                                          domProps: { value: optionSet.id }\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n                      \" +\n                                              _vm._s(optionSet.name) +\n                                              \"\\n                    \"\n                                          )\n                                        ]\n                                      )\n                                    }),\n                                    0\n                                  ),\n                                  _vm.errors.has(\n                                    \"option_set_target-\" + ruleIndex\n                                  )\n                                    ? _c(\n                                        \"div\",\n                                        { staticClass: \"invalid-feedback\" },\n                                        [\n                                          _vm._v(\n                                            \"\\n                    Please choose Lionnix option\\n                  \"\n                                          )\n                                        ]\n                                      )\n                                    : _vm._e()\n                                ],\n                                1\n                              )\n                            ]),\n                            _c(\"div\", { staticClass: \"col-6\" }, [\n                              _c(\n                                \"div\",\n                                { staticClass: \"d-flex ml--10 mt--10\" },\n                                [\n                                  _c(\n                                    \"div\",\n                                    {\n                                      staticClass:\n                                        \"form-group flex-fill pl-10 pt-10\"\n                                    },\n                                    [\n                                      _c(\"label\", [_vm._v(\"Option values\")]),\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"validate\",\n                                            rawName: \"v-validate\",\n                                            value: \"required\",\n                                            expression: \"'required'\"\n                                          }\n                                        ],\n                                        staticClass: \"flex-fill form-control\",\n                                        class: [\n                                          {\n                                            \"is-invalid\": _vm.errors.has(\n                                              \"option_conditions-\" + ruleIndex\n                                            )\n                                          }\n                                        ],\n                                        attrs: {\n                                          placeholder:\n                                            \"Option values, separated by commas\",\n                                          type: \"text\",\n                                          name: \"option_conditions-\" + ruleIndex\n                                        },\n                                        domProps: {\n                                          value: rule.option.conditions\n                                        },\n                                        on: {\n                                          input: function(event) {\n                                            return _vm.onRuleOptionConditionsChange(\n                                              rule,\n                                              event.target.value\n                                            )\n                                          }\n                                        }\n                                      }),\n                                      _vm.errors.has(\n                                        \"option_conditions-\" + ruleIndex\n                                      )\n                                        ? _c(\n                                            \"div\",\n                                            { staticClass: \"invalid-feedback\" },\n                                            [\n                                              _vm._v(\n                                                \"\\n                      Please enter option values, separated by commas\\n                    \"\n                                              )\n                                            ]\n                                          )\n                                        : _vm._e()\n                                    ]\n                                  )\n                                ]\n                              )\n                            ]),\n                            _c(\"div\", { staticClass: \"col-6\" }, [\n                              _vm.getOptionsWithOptionSetId(\n                                rule.option_set.target_value\n                              ).length > 0\n                                ? _c(\n                                    \"div\",\n                                    { staticClass: \"form-group mb-2\" },\n                                    [\n                                      _c(\"label\", [\n                                        _vm._v(\n                                          \"\\n                    Values\\n                  \"\n                                        )\n                                      ]),\n                                      _vm._l(\n                                        _vm.getOptionsWithOptionSetId(\n                                          rule.option_set.target_value\n                                        ),\n                                        function(option, index) {\n                                          return _c(\n                                            \"div\",\n                                            {\n                                              key: index,\n                                              staticClass: \"mb-10\"\n                                            },\n                                            [\n                                              _c(\n                                                \"p-select\",\n                                                {\n                                                  directives: [\n                                                    {\n                                                      name: \"validate\",\n                                                      rawName: \"v-validate\",\n                                                      value: \"required\",\n                                                      expression: \"'required'\"\n                                                    }\n                                                  ],\n                                                  class: [\n                                                    {\n                                                      \"is-invalid\": _vm.errors.has(\n                                                        \"option_target-\" +\n                                                          ruleIndex +\n                                                          \"-\" +\n                                                          index\n                                                      )\n                                                    }\n                                                  ],\n                                                  attrs: {\n                                                    value: _vm.getOptionTargetValueByIndex(\n                                                      ruleIndex,\n                                                      index\n                                                    ),\n                                                    placeholder:\n                                                      \"Select option value\",\n                                                    name:\n                                                      \"option_target-\" +\n                                                      ruleIndex +\n                                                      \"-\" +\n                                                      index\n                                                  },\n                                                  on: {\n                                                    input: function(val) {\n                                                      return _vm.setOptionTargetValueByIndex(\n                                                        ruleIndex,\n                                                        index,\n                                                        val\n                                                      )\n                                                    }\n                                                  }\n                                                },\n                                                _vm._l(\n                                                  _vm.getOptionsWithOptionSetId(\n                                                    rule.option_set.target_value\n                                                  ),\n                                                  function(option, index) {\n                                                    return _c(\n                                                      \"option\",\n                                                      {\n                                                        key: index,\n                                                        domProps: {\n                                                          value: option.id\n                                                        }\n                                                      },\n                                                      [\n                                                        _vm._v(\n                                                          \"\\n                        \" +\n                                                            _vm._s(\n                                                              option.value\n                                                            ) +\n                                                            \"\\n                      \"\n                                                        )\n                                                      ]\n                                                    )\n                                                  }\n                                                ),\n                                                0\n                                              ),\n                                              _vm.errors.has(\n                                                \"option_target-\" +\n                                                  ruleIndex +\n                                                  \"-\" +\n                                                  index\n                                              )\n                                                ? _c(\n                                                    \"div\",\n                                                    {\n                                                      staticClass:\n                                                        \"invalid-feedback\"\n                                                    },\n                                                    [\n                                                      _vm._v(\n                                                        \"\\n                      Please choose a option value\\n                    \"\n                                                      )\n                                                    ]\n                                                  )\n                                                : _vm._e()\n                                            ],\n                                            1\n                                          )\n                                        }\n                                      )\n                                    ],\n                                    2\n                                  )\n                                : _vm._e()\n                            ]),\n                            _c(\"div\", { staticClass: \"col-6\" }, [\n                              rule.option.values.length > 0\n                                ? _c(\n                                    \"div\",\n                                    { staticClass: \"form-group mb-0\" },\n                                    [\n                                      _c(\"label\", [\n                                        _vm._v(\n                                          \"\\n                    Values\\n                  \"\n                                        )\n                                      ]),\n                                      _vm._l(rule.option.values, function(\n                                        value,\n                                        index\n                                      ) {\n                                        return _c(\n                                          \"div\",\n                                          { key: index, staticClass: \"mb-10\" },\n                                          [\n                                            _c(\n                                              \"p-select\",\n                                              {\n                                                directives: [\n                                                  {\n                                                    name: \"validate\",\n                                                    rawName: \"v-validate\",\n                                                    value: \"required\",\n                                                    expression: \"'required'\"\n                                                  }\n                                                ],\n                                                class: [\n                                                  {\n                                                    \"is-invalid\": _vm.errors.has(\n                                                      \"option_value-\" +\n                                                        ruleIndex +\n                                                        \"-\" +\n                                                        index\n                                                    )\n                                                  }\n                                                ],\n                                                attrs: {\n                                                  value: _vm.getOptionValueByIndex(\n                                                    ruleIndex,\n                                                    index\n                                                  ),\n                                                  placeholder:\n                                                    \"Select option value\",\n                                                  name:\n                                                    \"option_value-\" +\n                                                    ruleIndex +\n                                                    \"-\" +\n                                                    index\n                                                },\n                                                on: {\n                                                  input: function(val) {\n                                                    return _vm.setOptionValueByIndex(\n                                                      ruleIndex,\n                                                      index,\n                                                      val\n                                                    )\n                                                  }\n                                                }\n                                              },\n                                              _vm._l(\n                                                rule.option.values,\n                                                function(v, index) {\n                                                  return _c(\n                                                    \"option\",\n                                                    {\n                                                      key: index,\n                                                      domProps: { value: v }\n                                                    },\n                                                    [\n                                                      _vm._v(\n                                                        \"\\n                        \" +\n                                                          _vm._s(v) +\n                                                          \"\\n                      \"\n                                                      )\n                                                    ]\n                                                  )\n                                                }\n                                              ),\n                                              0\n                                            ),\n                                            _vm.errors.has(\n                                              \"option_value-\" +\n                                                ruleIndex +\n                                                \"-\" +\n                                                index\n                                            )\n                                              ? _c(\n                                                  \"div\",\n                                                  {\n                                                    staticClass:\n                                                      \"invalid-feedback\"\n                                                  },\n                                                  [\n                                                    _vm._v(\n                                                      \"\\n                      Please choose a option value\\n                    \"\n                                                    )\n                                                  ]\n                                                )\n                                              : _vm._e()\n                                          ],\n                                          1\n                                        )\n                                      })\n                                    ],\n                                    2\n                                  )\n                                : _vm._e()\n                            ]),\n                            _c(\"div\", { staticClass: \"col-12\" }, [\n                              _c(\n                                \"div\",\n                                { staticClass: \"d-flex justify-content-end\" },\n                                [\n                                  _c(\n                                    \"a\",\n                                    {\n                                      staticClass: \"btn-delete-option\",\n                                      attrs: { href: \"#\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.deleteOption(ruleIndex)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                    Delete option\\n                  \"\n                                      )\n                                    ]\n                                  )\n                                ]\n                              )\n                            ])\n                          ]\n                        )\n                      }),\n                      _c(\"div\", { staticClass: \"row\" }, [\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"col-12\",\n                            on: { click: _vm.addNewOption }\n                          },\n                          [\n                            _c(\"p-button\", { attrs: { type: \"default\" } }, [\n                              _vm._v(\"Add new option\")\n                            ])\n                          ],\n                          1\n                        )\n                      ])\n                    ],\n                    2\n                  )\n                ])\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"d-flex justify-content-between\" },\n                  [\n                    _vm.optionMappingState.id\n                      ? _c(\n                          \"p-button\",\n                          {\n                            attrs: { type: \"danger\", loading: _vm.isDeleting },\n                            on: {\n                              click: _vm.showConfirmDelete,\n                              disabled: _vm.isDeleting\n                            }\n                          },\n                          [_vm._v(\"\\n            Delete\\n          \")]\n                        )\n                      : _c(\"div\"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"d-flex\" },\n                      [\n                        _c(\n                          \"p-button\",\n                          {\n                            attrs: { type: \"default\" },\n                            on: { click: _vm.discard }\n                          },\n                          [_vm._v(\"\\n              Cancel\\n            \")]\n                        ),\n                        _c(\n                          \"p-button\",\n                          {\n                            staticClass: \"ml-15\",\n                            attrs: {\n                              disabled: _vm.isSaving,\n                              loading: _vm.isSaving\n                            },\n                            on: { click: _vm.save }\n                          },\n                          [_vm._v(\"\\n              Save\\n            \")]\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ])\n            ])\n          ])\n        ],\n        1\n      )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}