{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/components/ConditionItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/order-mapping/views/components/ConditionItem.vue","mtime":1604479001989},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { cloneDeep } from '@core/utils'\nimport {\n  conditionColumns,\n  productConditionRelations,\n  quantityConditionRelations,\n  types,\n} from '../../constant'\nexport default {\n  name: 'ConditionItem',\n  props: {\n    type: {\n      type: String,\n      default: types.product_type,\n    },\n    condition: {\n      type: Object,\n      default: () => {\n        return {\n          column: 'tag',\n          relation: 'equals',\n          condition: '',\n        }\n      },\n    },\n    disableRemove: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    conditionColumns() {\n      return conditionColumns\n    },\n\n    relations() {\n      return this.type === types.quantity\n        ? quantityConditionRelations\n        : productConditionRelations\n    },\n\n    selectedProperty() {\n      return this.conditionColumns.find(\n        ({ value }) => value === this.internalValue.column\n      )\n    },\n  },\n  data() {\n    return {\n      internalValue: {},\n    }\n  },\n  created() {\n    this.internalValue = cloneDeep(this.condition)\n  },\n  methods: {\n    handleRemove() {\n      this.$emit('remove', this.value)\n    },\n  },\n  watch: {\n    condition: {\n      handler: function(val) {\n        this.internalValue = cloneDeep(val)\n      },\n      deep: true,\n    },\n    internalValue: {\n      handler: function(val) {\n        if (\n          JSON.stringify(this.internalValue) != JSON.stringify(this.condition)\n        ) {\n          this.$emit('input', val)\n        }\n      },\n      deep: true,\n    },\n  },\n}\n",null]}