{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/uikit/components/dropdown/DropdownItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/uikit/components/dropdown/DropdownItem.vue","mtime":1604479001997},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'PDropdownItem',\n  props: {\n    value: {\n      type: [String, Number, Boolean, Object, Array, Symbol, Function],\n      default: null,\n    },\n    separator: Boolean,\n    disabled: Boolean,\n    custom: Boolean,\n    focusable: {\n      type: Boolean,\n      default: true,\n    },\n    paddingless: Boolean,\n    hasLink: Boolean,\n    ariaRole: {\n      type: String,\n      default: '',\n    },\n  },\n  computed: {\n    anchorClasses() {\n      return {\n        'is-disabled': this.$parent.disabled || this.disabled,\n        'is-paddingless': this.paddingless,\n        'is-active': this.isActive,\n      }\n    },\n    itemClasses() {\n      return {\n        'dropdown-item': !this.hasLink,\n        'is-disabled': this.disabled,\n        'is-paddingless': this.paddingless,\n        'is-active': this.isActive,\n        'has-link': this.hasLink,\n      }\n    },\n    ariaRoleItem() {\n      return this.ariaRole === 'menuitem' || this.ariaRole === 'listitem'\n        ? this.ariaRole\n        : null\n    },\n    /**\n     * Check if item can be clickable.\n     */\n    isClickable() {\n      return (\n        !this.$parent.disabled &&\n        !this.separator &&\n        !this.disabled &&\n        !this.custom\n      )\n    },\n    isActive() {\n      if (this.$parent.selected === null) {\n        return false\n      }\n\n      if (this.$parent.multiple) {\n        return this.$parent.selected.indexOf(this.value) >= 0\n      }\n\n      return this.value === this.$parent.selected\n    },\n  },\n  methods: {\n    /**\n     * Click listener, select the item.\n     */\n    selectItem() {\n      if (!this.isClickable) {\n        return\n      }\n\n      this.$parent.selectItem(this.value)\n      this.$emit('click')\n    },\n  },\n  created() {\n    if (!this.$parent.$data.isDropdown) {\n      this.$destroy()\n      throw new Error('You should wrap bDropdownItem on a bDropdown')\n    }\n  },\n}\n",{"version":3,"sources":["DropdownItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DropdownItem.vue","sourceRoot":"uikit/components/dropdown","sourcesContent":["<template>\n  <hr v-if=\"separator\" class=\"dropdown-divider\" />\n  <a\n    v-else-if=\"!custom && !hasLink\"\n    class=\"dropdown-item\"\n    :class=\"anchorClasses\"\n    @click=\"selectItem\"\n    :role=\"ariaRoleItem\"\n    :tabindex=\"focusable ? 0 : null\"\n  >\n    <slot />\n  </a>\n  <div\n    v-else\n    :class=\"itemClasses\"\n    @click=\"selectItem\"\n    :role=\"ariaRoleItem\"\n    :tabindex=\"focusable ? 0 : null\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'PDropdownItem',\n  props: {\n    value: {\n      type: [String, Number, Boolean, Object, Array, Symbol, Function],\n      default: null,\n    },\n    separator: Boolean,\n    disabled: Boolean,\n    custom: Boolean,\n    focusable: {\n      type: Boolean,\n      default: true,\n    },\n    paddingless: Boolean,\n    hasLink: Boolean,\n    ariaRole: {\n      type: String,\n      default: '',\n    },\n  },\n  computed: {\n    anchorClasses() {\n      return {\n        'is-disabled': this.$parent.disabled || this.disabled,\n        'is-paddingless': this.paddingless,\n        'is-active': this.isActive,\n      }\n    },\n    itemClasses() {\n      return {\n        'dropdown-item': !this.hasLink,\n        'is-disabled': this.disabled,\n        'is-paddingless': this.paddingless,\n        'is-active': this.isActive,\n        'has-link': this.hasLink,\n      }\n    },\n    ariaRoleItem() {\n      return this.ariaRole === 'menuitem' || this.ariaRole === 'listitem'\n        ? this.ariaRole\n        : null\n    },\n    /**\n     * Check if item can be clickable.\n     */\n    isClickable() {\n      return (\n        !this.$parent.disabled &&\n        !this.separator &&\n        !this.disabled &&\n        !this.custom\n      )\n    },\n    isActive() {\n      if (this.$parent.selected === null) {\n        return false\n      }\n\n      if (this.$parent.multiple) {\n        return this.$parent.selected.indexOf(this.value) >= 0\n      }\n\n      return this.value === this.$parent.selected\n    },\n  },\n  methods: {\n    /**\n     * Click listener, select the item.\n     */\n    selectItem() {\n      if (!this.isClickable) {\n        return\n      }\n\n      this.$parent.selectItem(this.value)\n      this.$emit('click')\n    },\n  },\n  created() {\n    if (!this.$parent.$data.isDropdown) {\n      this.$destroy()\n      throw new Error('You should wrap bDropdownItem on a bDropdown')\n    }\n  },\n}\n</script>\n"]}]}