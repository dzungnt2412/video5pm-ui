{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/ticket/views/Form.vue?vue&type=template&id=6bef31bf&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/ticket/views/Form.vue","mtime":1603898990384},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1597736282333},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"ticket-page page\" }, [\n    _vm._m(0),\n    _c(\"div\", { staticClass: \"page-content container-fluid\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-xl-6\" }, [\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-block\" },\n              [\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"form-group floating\",\n                    class: [\n                      { \"has-success\": !_vm.errors.has(\"category\") },\n                      { \"has-danger\": _vm.errors.has(\"category\") }\n                    ]\n                  },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(\"Chọn danh mục:\")\n                    ]),\n                    _c(\n                      \"p-select\",\n                      {\n                        directives: [\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: \"required\",\n                            expression: \"'required'\"\n                          }\n                        ],\n                        staticClass: \"floating\",\n                        attrs: { name: \"category\", \"data-vv-as\": \"Danh mục\" },\n                        model: {\n                          value: _vm.form.category,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"category\", $$v)\n                          },\n                          expression: \"form.category\"\n                        }\n                      },\n                      [\n                        _c(\"option\", { attrs: { value: \"\" } }, [\n                          _vm._v(\"Chọn danh mục\")\n                        ]),\n                        _vm._l(_vm.categories, function(text, key) {\n                          return _c(\n                            \"option\",\n                            { key: key, domProps: { value: text } },\n                            [_vm._v(_vm._s(text))]\n                          )\n                        })\n                      ],\n                      2\n                    ),\n                    _vm.errors.has(\"category\")\n                      ? _c(\"span\", { staticClass: \"invalid-feedback\" }, [\n                          _vm._v(_vm._s(_vm.errors.first(\"category\")))\n                        ])\n                      : _vm._e()\n                  ],\n                  1\n                ),\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"form-group floating\",\n                    class: [\n                      { \"has-success\": !_vm.errors.has(\"object_id\") },\n                      { \"has-danger\": _vm.errors.has(\"object_id\") }\n                    ]\n                  },\n                  [\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-6\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\"Chọn shop:\")\n                          ]),\n                          _c(\n                            \"p-select\",\n                            {\n                              staticClass: \"floating\",\n                              attrs: { name: \"shop\", \"data-vv-as\": \"Shop\" },\n                              model: {\n                                value: _vm.shopId,\n                                callback: function($$v) {\n                                  _vm.shopId = $$v\n                                },\n                                expression: \"shopId\"\n                              }\n                            },\n                            [\n                              _c(\"option\", { attrs: { value: \"0\" } }, [\n                                _vm._v(\"-- Chọn một shop --\")\n                              ]),\n                              _vm._l(_vm.shops, function(item) {\n                                return _c(\n                                  \"option\",\n                                  {\n                                    key: item.id,\n                                    domProps: { value: item.id }\n                                  },\n                                  [\n                                    _vm._v(\n                                      _vm._s(item.name) +\n                                        \" - \" +\n                                        _vm._s(item.domain)\n                                    )\n                                  ]\n                                )\n                              })\n                            ],\n                            2\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-6\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\"Chọn mã đơn hàng:\")\n                          ]),\n                          _c(\"multiselect\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required\",\n                                expression: \"'required'\"\n                              }\n                            ],\n                            staticClass: \"multiselect-custom is-fullwidth\",\n                            attrs: {\n                              \"data-vv-as\": \"Đơn hàng\",\n                              name: \"object_id\",\n                              options: _vm.items,\n                              placeholder: \"Chọn đơn hàng\",\n                              loading: _vm.isLoading,\n                              limit: _vm.limit,\n                              \"custom-label\": _vm.customLabel\n                            },\n                            on: {\n                              \"search-change\": _vm.handleSearchOrders,\n                              select: _vm.handleSelect,\n                              remove: _vm.handleRemove\n                            },\n                            model: {\n                              value: _vm.selected,\n                              callback: function($$v) {\n                                _vm.selected = $$v\n                              },\n                              expression: \"selected\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ]),\n                    _vm.errors.has(\"object_id\")\n                      ? _c(\"span\", { staticClass: \"invalid-feedback\" }, [\n                          _vm._v(_vm._s(_vm.errors.first(\"object_id\")))\n                        ])\n                      : _vm._e()\n                  ]\n                ),\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"form-group floating\",\n                    class: [\n                      { \"has-success\": !_vm.errors.has(\"subject\") },\n                      { \"has-danger\": _vm.errors.has(\"subject\") }\n                    ]\n                  },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [_vm._v(\"Tiêu đề:\")]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.form.subject,\n                          expression: \"form.subject\"\n                        },\n                        {\n                          name: \"validate\",\n                          rawName: \"v-validate\",\n                          value: \"required\",\n                          expression: \"'required'\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"text\",\n                        placeholder: \"Tiêu đề  \",\n                        name: \"subject\",\n                        \"data-vv-as\": \"Tiêu đề\"\n                      },\n                      domProps: { value: _vm.form.subject },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(_vm.form, \"subject\", $event.target.value)\n                        }\n                      }\n                    }),\n                    _vm.errors.has(\"subject\")\n                      ? _c(\"span\", { staticClass: \"invalid-feedback\" }, [\n                          _vm._v(\n                            \"\\n                \" +\n                              _vm._s(_vm.errors.first(\"subject\")) +\n                              \"\\n              \"\n                          )\n                        ])\n                      : _vm._e()\n                  ]\n                ),\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"form-group floating\",\n                    class: [\n                      { \"has-success\": !_vm.errors.has(\"content\") },\n                      { \"has-danger\": _vm.errors.has(\"content\") }\n                    ]\n                  },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [_vm._v(\"Nội dung:\")]),\n                    _c(\"textarea\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.form.content,\n                          expression: \"form.content\"\n                        },\n                        {\n                          name: \"validate\",\n                          rawName: \"v-validate\",\n                          value: \"required\",\n                          expression: \"'required'\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        rows: \"5\",\n                        placeholder: \"Nội dung\",\n                        name: \"content\",\n                        \"data-vv-as\": \"Nội dung\"\n                      },\n                      domProps: { value: _vm.form.content },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(_vm.form, \"content\", $event.target.value)\n                        }\n                      }\n                    }),\n                    _vm.errors.has(\"content\")\n                      ? _c(\"span\", { staticClass: \"invalid-feedback\" }, [\n                          _vm._v(\n                            \"\\n                \" +\n                              _vm._s(_vm.errors.first(\"content\")) +\n                              \"\\n              \"\n                          )\n                        ])\n                      : _vm._e()\n                  ]\n                ),\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"form-group floating\",\n                    class: [\n                      { \"has-success\": !_vm.errors.has(\"file\") },\n                      { \"has-danger\": _vm.errors.has(\"file\") }\n                    ]\n                  },\n                  [\n                    _vm.files && _vm.files.length\n                      ? _c(\n                          \"ul\",\n                          {\n                            staticClass:\n                              \"list-group list-group-full ticket-attach-list\"\n                          },\n                          _vm._l(_vm.files, function(item, i) {\n                            return _c(\n                              \"li\",\n                              { key: i, staticClass: \"list-group-item\" },\n                              [\n                                _c(\n                                  \"span\",\n                                  {\n                                    staticClass: \"float-right\",\n                                    on: {\n                                      click: function($event) {\n                                        $event.preventDefault()\n                                        return _vm.showDeleteConfirmation(\n                                          item.uid\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [_c(\"i\", { staticClass: \"icon md-close\" })]\n                                ),\n                                _vm._v(\n                                  \"\\n                  \" +\n                                    _vm._s(item.name) +\n                                    \"\\n                \"\n                                )\n                              ]\n                            )\n                          }),\n                          0\n                        )\n                      : _vm._e(),\n                    _c(\n                      \"upload\",\n                      {\n                        staticClass: \"ticket-uploader\",\n                        attrs: {\n                          action: _vm.uploadFileEndpoint,\n                          accept: \".png,.jpg,.csv,.xlsx,.xls\",\n                          drag: \"\",\n                          multiple: \"\",\n                          \"list-type\": \"picture\",\n                          data: { type: \"tickets\" },\n                          headers: _vm.uploadHeaders,\n                          \"on-error\": _vm.handleErrorFile,\n                          \"on-success\": _vm.handleSuccess,\n                          \"max-file-size\": 4000000\n                        }\n                      },\n                      [\n                        _c(\n                          \"div\",\n                          { staticClass: \"el-upload__text\" },\n                          [\n                            _c(\"p-icon\", {\n                              attrs: {\n                                name: \"attachment-alt\",\n                                \"icon-pack\": \"md\"\n                              }\n                            }),\n                            _vm._v(\n                              \"\\n                  Tải file đính kèm\\n                \"\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    ),\n                    _c(\"p\", [\n                      _vm._v(\n                        \"File đính kèm chỉ hỗ trợ định dạng PNG, JPEG, CSV, XLSX và\\n                không vượt quá 5MB\"\n                      )\n                    ])\n                  ],\n                  1\n                ),\n                _c(\n                  \"p-button\",\n                  {\n                    attrs: { type: \"primary\", disable: _vm.isSubmiting },\n                    on: { click: _vm.handlerCreateTicket }\n                  },\n                  [_c(\"span\", [_vm._v(\"Mở ticket\")])]\n                )\n              ],\n              1\n            )\n          ])\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"page-header\" }, [\n      _c(\"h4\", { staticClass: \"page-title\" }, [_vm._v(\"Tạo mới Ticket\")])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}