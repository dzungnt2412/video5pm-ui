{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/uikit/components/toast/Toast.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/uikit/components/toast/Toast.vue","mtime":1603898990384},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport config from '../../config'\nimport { removeElement } from '../../utils/dom'\n\nexport default {\n  name: 'PToast',\n  props: {\n    type: {\n      type: String,\n      default: 'dark',\n    },\n    message: String,\n    duration: Number,\n    queue: {\n      type: Boolean,\n      default: undefined,\n    },\n    position: {\n      type: String,\n      default: 'top',\n      validator(value) {\n        return (\n          [\n            'top-right',\n            'top',\n            'top-left',\n            'bottom-right',\n            'bottom',\n            'bottom-left',\n          ].indexOf(value) > -1\n        )\n      },\n    },\n    container: String,\n  },\n  data() {\n    return {\n      isActive: false,\n      parentTop: null,\n      parentBottom: null,\n      newContainer: this.container || config.defaultContainerElement,\n      newDuration: this.duration || config.defaultToastDuration,\n    }\n  },\n  computed: {\n    correctParent() {\n      switch (this.position) {\n        case 'top-right':\n        case 'top':\n        case 'top-left':\n          return this.parentTop\n\n        case 'bottom-right':\n        case 'bottom':\n        case 'bottom-left':\n          return this.parentBottom\n      }\n\n      return ''\n    },\n    transition() {\n      switch (this.position) {\n        case 'top-right':\n        case 'top':\n        case 'top-left':\n          return {\n            enter: 'fadeInDown',\n            leave: 'fadeOut',\n          }\n        case 'bottom-right':\n        case 'bottom':\n        case 'bottom-left':\n          return {\n            enter: 'fadeInUp',\n            leave: 'fadeOut',\n          }\n      }\n\n      return {}\n    },\n    transformType() {\n      if (this.type === 'error') {\n        return 'danger'\n      }\n\n      return this.type\n    },\n  },\n  methods: {\n    shouldQueue() {\n      const queue =\n        this.queue !== undefined ? this.queue : config.defaultNoticeQueue\n\n      if (!queue) {\n        return false\n      }\n\n      return (\n        this.parentTop.childElementCount > 0 ||\n        this.parentBottom.childElementCount > 0\n      )\n    },\n\n    close() {\n      clearTimeout(this.timer)\n      this.isActive = false\n\n      // Timeout for the animation complete before destroying\n      setTimeout(() => {\n        this.$destroy()\n        removeElement(this.$el)\n      }, 150)\n    },\n\n    showNotice() {\n      if (this.shouldQueue()) {\n        // Call recursively if should queue\n        setTimeout(() => this.showNotice(), 250)\n        return\n      }\n\n      this.correctParent.insertAdjacentElement('afterbegin', this.$el)\n      this.isActive = true\n\n      if (!this.indefinite) {\n        this.timer = setTimeout(() => this.close(), this.newDuration)\n      }\n    },\n\n    setupContainer() {\n      this.parentTop = document.querySelector('.p-notices.is-top')\n      this.parentBottom = document.querySelector('.p-notices.is-bottom')\n\n      if (this.parentTop && this.parentBottom) {\n        return\n      }\n\n      if (!this.parentTop) {\n        this.parentTop = document.createElement('div')\n        this.parentTop.className = 'p-notices is-top'\n      }\n\n      if (!this.parentBottom) {\n        this.parentBottom = document.createElement('div')\n        this.parentBottom.className = 'p-notices is-bottom'\n      }\n\n      const container =\n        document.querySelector(this.newContainer) || document.body\n\n      container.appendChild(this.parentTop)\n      container.appendChild(this.parentBottom)\n\n      if (this.newContainer) {\n        this.parentTop.classList.add('has-custom-container')\n        this.parentBottom.classList.add('has-custom-container')\n      }\n    },\n  },\n  beforeMount() {\n    this.setupContainer()\n  },\n  mounted() {\n    this.showNotice()\n  },\n}\n",{"version":3,"sources":["Toast.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqfile":"Toast.vue","sourceRoot":"uikit/components/toast","sourcesContent":["<template>\n  <transition\n    :enter-active-class=\"transition.enter\"\n    :leave-active-class=\"transition.leave\"\n  >\n    <div\n      v-show=\"isActive\"\n      class=\"p-toast\"\n      :class=\"[\n        transformType ? `is-${transformType}` : '',\n        position ? `is-${position}` : '',\n      ]\"\n      :aria-hidden=\"!isActive\"\n      role=\"alert\"\n    >\n      <div v-html=\"message\"></div>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport config from '../../config'\nimport { removeElement } from '../../utils/dom'\n\nexport default {\n  name: 'PToast',\n  props: {\n    type: {\n      type: String,\n      default: 'dark',\n    },\n    message: String,\n    duration: Number,\n    queue: {\n      type: Boolean,\n      default: undefined,\n    },\n    position: {\n      type: String,\n      default: 'top',\n      validator(value) {\n        return (\n          [\n            'top-right',\n            'top',\n            'top-left',\n            'bottom-right',\n            'bottom',\n            'bottom-left',\n          ].indexOf(value) > -1\n        )\n      },\n    },\n    container: String,\n  },\n  data() {\n    return {\n      isActive: false,\n      parentTop: null,\n      parentBottom: null,\n      newContainer: this.container || config.defaultContainerElement,\n      newDuration: this.duration || config.defaultToastDuration,\n    }\n  },\n  computed: {\n    correctParent() {\n      switch (this.position) {\n        case 'top-right':\n        case 'top':\n        case 'top-left':\n          return this.parentTop\n\n        case 'bottom-right':\n        case 'bottom':\n        case 'bottom-left':\n          return this.parentBottom\n      }\n\n      return ''\n    },\n    transition() {\n      switch (this.position) {\n        case 'top-right':\n        case 'top':\n        case 'top-left':\n          return {\n            enter: 'fadeInDown',\n            leave: 'fadeOut',\n          }\n        case 'bottom-right':\n        case 'bottom':\n        case 'bottom-left':\n          return {\n            enter: 'fadeInUp',\n            leave: 'fadeOut',\n          }\n      }\n\n      return {}\n    },\n    transformType() {\n      if (this.type === 'error') {\n        return 'danger'\n      }\n\n      return this.type\n    },\n  },\n  methods: {\n    shouldQueue() {\n      const queue =\n        this.queue !== undefined ? this.queue : config.defaultNoticeQueue\n\n      if (!queue) {\n        return false\n      }\n\n      return (\n        this.parentTop.childElementCount > 0 ||\n        this.parentBottom.childElementCount > 0\n      )\n    },\n\n    close() {\n      clearTimeout(this.timer)\n      this.isActive = false\n\n      // Timeout for the animation complete before destroying\n      setTimeout(() => {\n        this.$destroy()\n        removeElement(this.$el)\n      }, 150)\n    },\n\n    showNotice() {\n      if (this.shouldQueue()) {\n        // Call recursively if should queue\n        setTimeout(() => this.showNotice(), 250)\n        return\n      }\n\n      this.correctParent.insertAdjacentElement('afterbegin', this.$el)\n      this.isActive = true\n\n      if (!this.indefinite) {\n        this.timer = setTimeout(() => this.close(), this.newDuration)\n      }\n    },\n\n    setupContainer() {\n      this.parentTop = document.querySelector('.p-notices.is-top')\n      this.parentBottom = document.querySelector('.p-notices.is-bottom')\n\n      if (this.parentTop && this.parentBottom) {\n        return\n      }\n\n      if (!this.parentTop) {\n        this.parentTop = document.createElement('div')\n        this.parentTop.className = 'p-notices is-top'\n      }\n\n      if (!this.parentBottom) {\n        this.parentBottom = document.createElement('div')\n        this.parentBottom.className = 'p-notices is-bottom'\n      }\n\n      const container =\n        document.querySelector(this.newContainer) || document.body\n\n      container.appendChild(this.parentTop)\n      container.appendChild(this.parentBottom)\n\n      if (this.newContainer) {\n        this.parentTop.classList.add('has-custom-container')\n        this.parentBottom.classList.add('has-custom-container')\n      }\n    },\n  },\n  beforeMount() {\n    this.setupContainer()\n  },\n  mounted() {\n    this.showNotice()\n  },\n}\n</script>\n"]}]}