{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/components/layouts/v2/Header.vue?vue&type=style&index=0&id=2b7d58ba&scoped=true&lang=css&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/components/layouts/v2/Header.vue","mtime":1604209554563},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/css-loader/index.js","mtime":1601450297541},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1597736282333},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/postcss-loader/src/index.js","mtime":1597736281462},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.dropdown-item {\n  padding: 2px;\n  height: 50px;\n}\n\n.clearfix > a {\n  padding: 0 15px;\n  display: flex;\n  align-items: center;\n  height: 100% !important;\n  width: 100% !important;\n}\n.list-group-item.dropdown-item {\n  height: 90px;\n}\n",{"version":3,"sources":["Header.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgNA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Header.vue","sourceRoot":"src/components/layouts/v2","sourcesContent":["<template>\n  <nav\n    class=\"site-navbar navbar navbar-default navbar-fixed-top navbar-mega navbar-inverse bg-indigo-600\"\n    role=\"navigation\"\n  >\n    <div class=\"navbar-header\">\n      <button\n        type=\"button\"\n        class=\"navbar-toggler hamburger hamburger-close navbar-toggler-left\"\n        :class=\"{ hided: !isSidebarOpen }\"\n        data-toggle=\"menubar\"\n        @click.prevent=\"toggleShowSidebar\"\n      >\n        <span class=\"sr-only\">Toggle navigation</span>\n        <span class=\"hamburger-bar\"></span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"navbar-toggler collapsed\"\n        data-target=\"#site-navbar-collapse\"\n        data-toggle=\"collapse\"\n        @click.prevent=\"toggleShowNavbar\"\n      >\n        <i class=\"icon wb-more-horizontal\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"navbar-brand navbar-brand-center\">\n        <router-link to=\"/\">\n          <img\n            class=\"navbar-brand-logo\"\n            src=\"@assets/img/logo.png\"\n            title=\"Remark\"\n            alt=\"Lionnix\"\n          />\n          <span class=\"navbar-brand-text hidden-xs-down\">Video5m</span>\n        </router-link>\n      </div>\n    </div>\n\n    <div class=\"navbar-container container-fluid\">\n      <div\n        class=\"navbar-collapse navbar-collapse-toolbar collapse\"\n        :class=\"{ show: isShowNavbarOnMobile }\"\n      >\n        <ul class=\"nav navbar-toolbar\">\n          <li class=\"nav-item hidden-float\">\n            <a\n              href=\"#\"\n              class=\"nav-link\"\n              data-toggle=\"menubar\"\n              @click.prevent=\"toggleShowSidebar\"\n            >\n              <i\n                class=\"icon hamburger hamburger-arrow-left unfolded\"\n                :class=\"{ hided: !isSidebarOpen }\"\n              >\n                <span class=\"sr-only\">Toggle menubar</span>\n                <span class=\"hamburger-bar\"></span>\n              </i>\n            </a>\n          </li>\n          <li class=\"nav-item\" v-if=\"shop && shop.id\">\n            <div class=\"nav-link disabled\">{{\n              shop && shop.name ? shop.name : ''\n            }}</div>\n          </li>\n        </ul>\n        <ul class=\"nav navbar-toolbar navbar-right navbar-toolbar-right\">\n          <li class=\"nav-item dropdown notifications\">\n            <p-dropdown\n              @on-open=\"onOpenDropdownNotifi\"\n              :dropdownClass=\"'dropdown-menu-right dropdown-menu-media'\"\n            >\n              <a\n                class=\"nav-link navbar-avatar\"\n                title=\"Notifications\"\n                slot=\"trigger\"\n              >\n                <i class=\"icon wb-bell\" aria-hidden=\"true\"></i>\n                <span class=\"badge badge-pill badge-danger up\">{{\n                  countNotiUnread\n                }}</span>\n              </a>\n              <div class=\"dropdown-menu-header\">\n                <h5>Thông báo</h5>\n                <span\n                  v-if=\"notifications.length\"\n                  class=\"badge badge-round badge-danger\"\n                  >New {{ countNotiUnread }}</span\n                >\n              </div>\n              <div\n                v-on:scroll.passive=\"scrollHandler\"\n                class=\"list-group custome-scroll-y\"\n              >\n                <div data-role=\"container\">\n                  <div data-role=\"content\">\n                    <a\n                      v-for=\"(item, index) in notifications\"\n                      :key=\"index\"\n                      class=\"list-group-item dropdown-item\"\n                      :class=\"item.status\"\n                    >\n                      <div class=\"media\">\n                        <div class=\"pr-10\">\n                          <i\n                            class=\"icon wb-order bg-red-600 white icon-circle\"\n                            aria-hidden=\"true\"\n                          ></i>\n                        </div>\n                        <div class=\"media-body\">\n                          <h6 class=\"media-heading\">{{ item.title }}</h6>\n                          <p\n                            v-if=\"\n                              item.type === 'export' ||\n                                item.type === 'export_fullfill'\n                            \"\n                            @click=\"downloadFile(item.message, item.type)\"\n                            >Cick To Download</p\n                          >\n                          <p v-else v-html=\"item.message\"></p>\n                          <time class=\"media-meta\">{{\n                            item.created_at | datetime\n                          }}</time>\n                        </div>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div class=\"dropdown-menu-footer\">\n                <a\n                  class=\"dropdown-menu-footer-btn\"\n                  href=\"javascript:void(0)\"\n                  role=\"button\"\n                >\n                  <i class=\"icon wb-settings\" aria-hidden=\"true\"></i>\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"javascript:void(0)\"\n                  role=\"menuitem\"\n                  >Tất cả thông báo</a\n                >\n              </div>\n            </p-dropdown>\n          </li>\n          <li class=\"nav-item dropdown\" v-if=\"shops && shops.length\">\n            <p-dropdown>\n              <a\n                class=\"nav-link navbar-avatar pointer dropdown-toggle\"\n                slot=\"trigger\"\n                :style=\"{ 'line-height': '30px' }\"\n                v-if=\"validShops.length > 0\"\n                >Chọn shop</a\n              >\n              <p-dropdown-item\n                v-for=\"(item, i) in validShops\"\n                :key=\"i\"\n                @click=\"handleSelectShop(item)\"\n                >{{ item.name }}</p-dropdown-item\n              >\n            </p-dropdown>\n          </li>\n          <li class=\"nav-item dropdown\">\n            <p-dropdown>\n              <a class=\"nav-link navbar-avatar pointer\" slot=\"trigger\">\n                <span class=\"avatar\">\n                  <img src=\"@assets/img/avatar-default.svg\" alt=\"...\" />\n                </span>\n              </a>\n              <p-dropdown-item class=\"clearfix\">\n                <router-link\n                  :to=\"{ name: 'shop-add' }\"\n                  :style=\"{ color: 'inherit' }\"\n                >\n                  <p-icon name=\"store\" icon-pack=\"md\"></p-icon>Thêm shop mới\n                </router-link>\n              </p-dropdown-item>\n              <p-dropdown-item class=\"clearfix\">\n                <router-link\n                  :to=\"{ name: 'change-profile' }\"\n                  :style=\"{ color: 'inherit' }\"\n                >\n                  <p-icon name=\"account-o\" icon-pack=\"md\"></p-icon>Sửa thông tin\n                  tài khoản\n                </router-link>\n              </p-dropdown-item>\n              <p-dropdown-item class=\"clearfix\">\n                <router-link\n                  :to=\"{ name: 'change-password' }\"\n                  :style=\"{ color: 'inherit' }\"\n                >\n                  <p-icon name=\"key\" icon-pack=\"md\"></p-icon>Đổi mật khẩu\n                </router-link>\n              </p-dropdown-item>\n              <p-dropdown-item class=\"clearfix\">\n                <router-link to=\"/logout\" :style=\"{ color: 'inherit' }\">\n                  <p-icon name=\"lock-open\" icon-pack=\"md\"></p-icon>Đăng xuất\n                </router-link>\n              </p-dropdown-item>\n            </p-dropdown>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</template>\n<style scoped>\n.dropdown-item {\n  padding: 2px;\n  height: 50px;\n}\n\n.clearfix > a {\n  padding: 0 15px;\n  display: flex;\n  align-items: center;\n  height: 100% !important;\n  width: 100% !important;\n}\n.list-group-item.dropdown-item {\n  height: 90px;\n}\n</style>\n<script>\nimport http from '@core/services/http'\nimport Browser from '@core/helpers/browser'\nimport { mapState, mapMutations, mapActions } from 'vuex'\nimport SocketService from '@core/services/socket'\nimport {\n  FULLFILL_EXPORT_BUCKET,\n  ORDER_EXPORT_BUCKET,\n} from '@core/constants/storage'\nimport {\n  PUSH_NOTIFICATION,\n  FETCH_NOTIFICATIONS,\n  COUNT_NOTIFICATIONS,\n  COUNT_NOTIFICATIONS_UNREAD,\n  READ_NOTIFICATIONS,\n} from '@/packages/shared/store'\n\nexport default {\n  name: 'Header',\n  props: {\n    shop: {\n      type: Object,\n      default: () => {},\n    },\n    shops: {\n      type: Array,\n      default: () => [],\n    },\n    isSidebarOpen: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  created() {\n    const vm = this\n    SocketService.connect((e) => {\n      let msg = JSON.parse(e.data)\n      vm.pushNotification(msg)\n    })\n\n    this.init()\n  },\n  data() {\n    return {\n      isFetchNotity: false,\n      isShowNavbarOnMobile: false,\n      socket: null,\n    }\n  },\n  computed: {\n    ...mapState('shared', {\n      notifications: (state) => state.notifications,\n      countNoti: (state) => state.countNoti,\n      countNotiUnread: (state) => state.countNotiUnread,\n    }),\n\n    validShops() {\n      return this.shop && this.shops\n        ? this.shops.filter(({ id }) => id !== this.shop.id)\n        : []\n    },\n  },\n  methods: {\n    ...mapActions('shared', [\n      FETCH_NOTIFICATIONS,\n      COUNT_NOTIFICATIONS,\n      COUNT_NOTIFICATIONS_UNREAD,\n      READ_NOTIFICATIONS,\n    ]),\n    ...mapMutations('shared', [PUSH_NOTIFICATION]),\n\n    async scrollHandler(e) {\n      let element = e.target\n      let length = this.notifications.length\n      if (this.countNoti <= length) {\n        return\n      }\n\n      if (this.isFetchNotity) {\n        return\n      }\n\n      this.isFetchNotity = true\n\n      if (element.scrollHeight - element.scrollTop === element.clientHeight) {\n        let last = this.notifications[length - 1]\n        await this.fetchNotifications({ limit: 10, last_id: last.id })\n        await this.readNotifications()\n      }\n\n      this.isFetchNotity = false\n    },\n\n    async init() {\n      await Promise.all([\n        this.fetchNotifications({ limit: 10 }),\n        this.countNotifications(),\n        this.countNotificationsUnread({ status: 'unread' }),\n      ])\n    },\n\n    handleSelectShop(shop) {\n      this.$emit('selectShop', shop)\n    },\n    toggleShowSidebar() {\n      this.$emit('toggleShowSidebar')\n    },\n    toggleShowNavbar() {\n      this.isShowNavbarOnMobile = !this.isShowNavbarOnMobile\n    },\n    async downloadFile(url, item_type) {\n      let type\n      if (item_type === 'export') {\n        type = ORDER_EXPORT_BUCKET\n      } else if (item_type === 'export_fullfill') {\n        type = FULLFILL_EXPORT_BUCKET\n      }\n      const arr = url.split('/')\n      arr.shift()\n\n      const fileName = arr.join('_')\n\n      const data = await http.get(\n        `/uploads/file-export/download?type=${type}&url=${url}`,\n        {\n          type: 'blob',\n        }\n      )\n      try {\n        Browser.downloadBlob(data, `${fileName}.csv`)\n      } catch (error) {\n        this.$toast.open({ type: 'error', message: 'File error !!!' })\n      }\n    },\n    async onOpenDropdownNotifi(v) {\n      if (v) {\n        await this.readNotifications()\n      }\n    },\n  },\n}\n</script>\n"]}]}