{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/shop/views/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/shop/views/List.vue","mtime":1603898990384},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { VclTable } from 'vue-content-loading'\nimport { mapActions, mapState } from 'vuex'\nimport mixinRoute from '@core/mixins/route'\nimport mixinTable from '@core/mixins/table'\nimport EmptySearchResult from '@components/shared/EmptySearchResult'\nimport { FETCH_SHOPS } from '../store'\n\nexport default {\n  name: 'ShopList',\n  mixins: [mixinRoute, mixinTable],\n  components: {\n    VclTable,\n    EmptySearchResult,\n  },\n  computed: {\n    ...mapState('shop', {\n      shops: (state) => state.shops,\n    }),\n    ...mapState('shared', {\n      shopList: (state) => state.shops,\n      count: (state) => state.countShop,\n    }),\n  },\n  data() {\n    return {\n      isFetching: false,\n      result: {},\n    }\n  },\n  created() {\n    this.filter = this.getRouteQuery()\n  },\n  methods: {\n    ...mapActions('shop', [FETCH_SHOPS]),\n    ...mapActions('shared', {\n      fetchShopList: FETCH_SHOPS,\n    }),\n\n    async init() {\n      this.isFetching = true\n      this.handleUpdateRouteQuery()\n      this.result = await this.fetchShops(this.filter)\n      this.isFetching = false\n    },\n\n    async handleCopyApiKey(key) {\n      try {\n        await this.$copyText(key)\n        this.$toast.open('Copied')\n      } catch (e) {\n        this.$toast.open({\n          type: 'error',\n          text: 'Có lỗi xảy ra. Vui lòng thử lại.',\n        })\n      }\n    },\n\n    handleActionItem() {},\n  },\n  watch: {\n    filter: {\n      handler: function() {\n        this.init()\n      },\n      deep: true,\n    },\n  },\n}\n",{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/packages/shop/views","sourcesContent":["<template>\n  <div class=\"page\">\n    <div class=\"page-content container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-xl-12\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <VclTable class=\"my-20\" v-if=\"isFetching\"> </VclTable>\n              <template v-else-if=\"shops.length\">\n                <div class=\"table-responsive\">\n                  <table class=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th width=\"80\">ID</th>\n                        <th>Tên shop</th>\n                        <th>Domain</th>\n                        <th>Ngày</th>\n                        <th class=\"text-right\"> </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"(item, i) in shops\" :key=\"i\">\n                        <td>{{ item.id }}</td>\n                        <td>{{ item.name }}</td>\n                        <td>{{ item.domain }}</td>\n                        <td>{{ item.created_at | date }}</td>\n                        <td class=\"text-right\">\n                          <p-popover\n                            class=\"mx-10\"\n                            placement=\"top\"\n                            trigger=\"hover\"\n                            type=\"dark\"\n                            content=\"Sao chép API key\"\n                            compact\n                          >\n                            <a\n                              slot=\"reference\"\n                              href=\"#\"\n                              @click.prevent=\"handleCopyApiKey(item.api_key)\"\n                            >\n                              <p-icon name=\"copy\" iconPack=\"md\"></p-icon>\n                            </a>\n                          </p-popover>\n                          <p-popover\n                            class=\"mx-10\"\n                            placement=\"top\"\n                            trigger=\"hover\"\n                            type=\"dark\"\n                            content=\"Sửa thông tin\"\n                            compact\n                          >\n                            <router-link\n                              slot=\"reference\"\n                              :to=\"{\n                                name: 'shop-edit',\n                                params: { id: item.id },\n                              }\"\n                            >\n                              <p-icon name=\"edit\" iconPack=\"md\"></p-icon>\n                            </router-link>\n                          </p-popover>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div class=\"d-flex justify-content-between align-items-center\">\n                  <span>\n                    {{ paginationLabel }}\n                  </span>\n                  <p-pagination\n                    :total=\"count\"\n                    :perPage=\"filter.limit\"\n                    :current.sync=\"filter.page\"\n                    size=\"sm\"\n                  >\n                  </p-pagination>\n                </div>\n              </template>\n              <EmptySearchResult\n                v-else\n                title=\"No shops found\"\n              ></EmptySearchResult>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { VclTable } from 'vue-content-loading'\nimport { mapActions, mapState } from 'vuex'\nimport mixinRoute from '@core/mixins/route'\nimport mixinTable from '@core/mixins/table'\nimport EmptySearchResult from '@components/shared/EmptySearchResult'\nimport { FETCH_SHOPS } from '../store'\n\nexport default {\n  name: 'ShopList',\n  mixins: [mixinRoute, mixinTable],\n  components: {\n    VclTable,\n    EmptySearchResult,\n  },\n  computed: {\n    ...mapState('shop', {\n      shops: (state) => state.shops,\n    }),\n    ...mapState('shared', {\n      shopList: (state) => state.shops,\n      count: (state) => state.countShop,\n    }),\n  },\n  data() {\n    return {\n      isFetching: false,\n      result: {},\n    }\n  },\n  created() {\n    this.filter = this.getRouteQuery()\n  },\n  methods: {\n    ...mapActions('shop', [FETCH_SHOPS]),\n    ...mapActions('shared', {\n      fetchShopList: FETCH_SHOPS,\n    }),\n\n    async init() {\n      this.isFetching = true\n      this.handleUpdateRouteQuery()\n      this.result = await this.fetchShops(this.filter)\n      this.isFetching = false\n    },\n\n    async handleCopyApiKey(key) {\n      try {\n        await this.$copyText(key)\n        this.$toast.open('Copied')\n      } catch (e) {\n        this.$toast.open({\n          type: 'error',\n          text: 'Có lỗi xảy ra. Vui lòng thử lại.',\n        })\n      }\n    },\n\n    handleActionItem() {},\n  },\n  watch: {\n    filter: {\n      handler: function() {\n        this.init()\n      },\n      deep: true,\n    },\n  },\n}\n</script>\n"]}]}