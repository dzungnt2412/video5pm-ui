{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/auth/views/SignIn.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/auth/views/SignIn.vue","mtime":1604028089987},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions, mapMutations, mapState } from 'vuex'\nimport { SHOW_NOTIFICATION_MESSAGE } from '@/packages/shared/store'\nexport default {\n  name: 'SignIn',\n  data() {\n    return {\n      email: null,\n      password: null,\n      isLoading: false,\n      result: { success: false, message: '' },\n    }\n  },\n  computed: {\n    ...mapState('shared', {\n      notificationMessage: (state) => state.notificationMessage,\n    }),\n  },\n  methods: {\n    ...mapActions('auth', ['signIn']),\n    ...mapMutations('shared', [SHOW_NOTIFICATION_MESSAGE]),\n\n    pushNoti() {\n      this.showNotificationMessage('This is message')\n    },\n\n    async onSignIn() {\n      const validate = await this.$validator.validateAll()\n\n      if (!validate) {\n        return\n      }\n\n      this.isLoading = true\n\n      const data = {\n        password: this.password,\n      }\n\n      if (this.email.includes('@')) {\n        data.email = this.email\n      } else {\n        data.username = this.email\n      }\n\n      this.result = await this.signIn(data)\n      setTimeout(() => {\n        this.isLoading = false\n      }, 2000)\n\n      if (this.result.success) {\n        if (this.result.permission) {\n          return this.$router.push('/')\n        }\n        return this.$toast.open({\n          type: 'error',\n          message: 'You are not allowed to do this action !',\n        })\n      } else {\n        this.$toast.open({ type: 'error', message: this.result.message })\n      }\n    },\n  },\n}\n",{"version":3,"sources":["SignIn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SignIn.vue","sourceRoot":"src/packages/auth/views","sourcesContent":["<template>\n  <div class=\"page vertical-align text-center\">\n    <div class=\"page-content vertical-align-middle\">\n      <div class=\"panel\">\n        <div class=\"panel-body\">\n          <div class=\"brand\">\n            <h2 class=\"brand-text font-size-18\">\n              Đăng nhập\n            </h2>\n          </div>\n          <form @submit.prevent=\"onSignIn\">\n            <div\n              class=\"form-group form-material floating\"\n              :class=\"[\n                { 'has-success': !errors.has('email') },\n                { 'has-danger': errors.has('email') },\n              ]\"\n            >\n              <input\n                class=\"form-control\"\n                v-model=\"email\"\n                name=\"email\"\n                data-vv-as=\"Email\"\n                v-validate=\"'required|min:3'\"\n                @keyup.enter=\"onSignIn\"\n              />\n              <label class=\"floating-label\">Email</label>\n              <span class=\"invalid-feedback\" v-if=\"errors.has('email')\">\n                {{ errors.first('email') }}\n              </span>\n            </div>\n            <div\n              class=\"form-group form-material floating\"\n              :class=\"[\n                { 'has-success': !errors.has('password') },\n                { 'has-danger': errors.has('password') },\n              ]\"\n            >\n              <input\n                v-model=\"password\"\n                class=\"form-control\"\n                v-validate=\"'required|min:6'\"\n                data-vv-as=\"Mật khẩu\"\n                name=\"password\"\n                type=\"password\"\n                @keyup.enter=\"onSignIn\"\n              />\n              <label class=\"floating-label\">Mật khẩu</label>\n              <span class=\"invalid-feedback\" v-if=\"errors.has('password')\">\n                {{ errors.first('password') }}\n              </span>\n            </div>\n            <button class=\"mt-40 btn btn-special btn-primary\">\n              Đăng nhập\n            </button>\n          </form>\n          <p>\n            Bạn chưa có tài khoản?\n            <router-link :to=\"{ name: 'sign-up' }\">Đăng kí tại đây</router-link>\n          </p>\n        </div>\n        <a href=\"#\" class=\"btn btn-primary\" @click=\"pushNoti\">\n          <p-icon name=\"upload\"></p-icon>\n          <span class=\"ml-5\">Notification</span>\n        </a>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapActions, mapMutations, mapState } from 'vuex'\nimport { SHOW_NOTIFICATION_MESSAGE } from '@/packages/shared/store'\nexport default {\n  name: 'SignIn',\n  data() {\n    return {\n      email: null,\n      password: null,\n      isLoading: false,\n      result: { success: false, message: '' },\n    }\n  },\n  computed: {\n    ...mapState('shared', {\n      notificationMessage: (state) => state.notificationMessage,\n    }),\n  },\n  methods: {\n    ...mapActions('auth', ['signIn']),\n    ...mapMutations('shared', [SHOW_NOTIFICATION_MESSAGE]),\n\n    pushNoti() {\n      this.showNotificationMessage('This is message')\n    },\n\n    async onSignIn() {\n      const validate = await this.$validator.validateAll()\n\n      if (!validate) {\n        return\n      }\n\n      this.isLoading = true\n\n      const data = {\n        password: this.password,\n      }\n\n      if (this.email.includes('@')) {\n        data.email = this.email\n      } else {\n        data.username = this.email\n      }\n\n      this.result = await this.signIn(data)\n      setTimeout(() => {\n        this.isLoading = false\n      }, 2000)\n\n      if (this.result.success) {\n        if (this.result.permission) {\n          return this.$router.push('/')\n        }\n        return this.$toast.open({\n          type: 'error',\n          message: 'You are not allowed to do this action !',\n        })\n      } else {\n        this.$toast.open({ type: 'error', message: this.result.message })\n      }\n    },\n  },\n}\n</script>\n"]}]}