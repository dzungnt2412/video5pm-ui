{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/auth/views/SignUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/auth/views/SignUp.vue","mtime":1603898990380},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions } from 'vuex'\n\nexport default {\n  computed: {\n    inputs() {\n      return [\n        {\n          icon: 'face',\n          name: 'Tài khoản',\n          nameAttr: 'username',\n          type: 'text',\n          validate: 'required|min:4|max:36|username',\n        },\n\n        {\n          icon: 'phone',\n          name: 'Số điện thoại',\n          nameAttr: 'phone_number',\n          type: 'text',\n          validate: 'required|phone',\n        },\n\n        {\n          icon: 'email',\n          name: 'Địa chỉ email',\n          nameAttr: 'email',\n          type: 'text',\n          validate: 'required|email',\n        },\n\n        {\n          icon: 'lock_outline',\n          name: 'Mật khẩu',\n          nameAttr: 'password',\n          type: 'password',\n          validate: 'required|min:6',\n        },\n        {\n          icon: 'user_referring_code',\n          name: 'Referring Code',\n          nameAttr: 'user_referring_code',\n          type: 'text',\n          validate: 'username',\n        },\n      ]\n    },\n  },\n  data() {\n    return {\n      user: {\n        username: null,\n        email: null,\n        phone_number: null,\n        password: null,\n        user_referring_code: null,\n      },\n      isLoading: false,\n      isShowSnackbar: false,\n      result: { success: true, message: 'Some thing wrong' },\n      timeout: null,\n    }\n  },\n  created() {\n    if (typeof this.$route.query['ref_code'] !== 'undefined') {\n      this.user.user_referring_code = this.$route.query['ref_code']\n    }\n  },\n  methods: {\n    ...mapActions('auth', ['signUp']),\n\n    async onSignUp() {\n      const validate = await this.$validator.validateAll()\n\n      if (!validate) {\n        return\n      }\n\n      this.isLoading = true\n      this.isShowSnackbar = false\n\n      this.result = await this.signUp(this.user)\n\n      if (this.result.success) {\n        this.$toast.open({\n          type: 'success',\n          message:\n            'Tài khoản của bạn đã được tạo thành công, vui lòng liên hệ bộ phận hỗ trợ để kích hoạt tài khoản',\n          duration: 6000,\n        })\n        this.$router.push({ name: 'sign-in' })\n        return\n      }\n      this.$toast.open({\n        type: 'error',\n        message:\n          this.result.message + ' :</br>' + this.result.errors.join('</br>'),\n        duration: 3000000,\n      })\n\n      setTimeout(() => {\n        this.isLoading = false\n      }, 2000)\n    },\n  },\n}\n",{"version":3,"sources":["SignUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"SignUp.vue","sourceRoot":"src/packages/auth/views","sourcesContent":["<template>\n  <div class=\"page vertical-align text-center\">\n    <div class=\"page-content vertical-align-middle\">\n      <div class=\"panel\">\n        <div class=\"panel-body\">\n          <div class=\"brand\">\n            <h2 class=\"brand-text font-size-18\">\n              Đăng ký\n            </h2>\n          </div>\n          <form @submit.prevent=\"onSignUp\">\n            <div\n              v-for=\"item in inputs\"\n              :key=\"item.nameAttr\"\n              :class=\"[\n                { 'has-success': !errors.has(item.nameAttr) },\n                { 'has-danger': errors.has(item.nameAttr) },\n              ]\"\n              class=\"form-group form-material floating\"\n            >\n              <input\n                class=\"form-control\"\n                v-model=\"user[item.nameAttr]\"\n                v-validate=\"item.validate\"\n                :data-vv-as=\"item.name\"\n                :type=\"item.type\"\n                :name=\"item.nameAttr\"\n                @keyup.enter=\"onSignUp\"\n              />\n              <label class=\"floating-label\">{{ item.name }}</label>\n              <span class=\"invalid-feedback\" v-if=\"errors.has(item.nameAttr)\">\n                {{ errors.first(item.nameAttr) }}\n              </span>\n            </div>\n            <p-button\n              block\n              fullWidth\n              class=\"mt-40\"\n              @click=\"onSignUp\"\n              :loading=\"isLoading\"\n            >\n              Tạo tài khoản\n            </p-button>\n          </form>\n          <p>\n            Bạn đã có tài khoản?\n            <router-link :to=\"{ name: 'sign-in' }\">Đăng nhập ngay</router-link>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapActions } from 'vuex'\n\nexport default {\n  computed: {\n    inputs() {\n      return [\n        {\n          icon: 'face',\n          name: 'Tài khoản',\n          nameAttr: 'username',\n          type: 'text',\n          validate: 'required|min:4|max:36|username',\n        },\n\n        {\n          icon: 'phone',\n          name: 'Số điện thoại',\n          nameAttr: 'phone_number',\n          type: 'text',\n          validate: 'required|phone',\n        },\n\n        {\n          icon: 'email',\n          name: 'Địa chỉ email',\n          nameAttr: 'email',\n          type: 'text',\n          validate: 'required|email',\n        },\n\n        {\n          icon: 'lock_outline',\n          name: 'Mật khẩu',\n          nameAttr: 'password',\n          type: 'password',\n          validate: 'required|min:6',\n        },\n        {\n          icon: 'user_referring_code',\n          name: 'Referring Code',\n          nameAttr: 'user_referring_code',\n          type: 'text',\n          validate: 'username',\n        },\n      ]\n    },\n  },\n  data() {\n    return {\n      user: {\n        username: null,\n        email: null,\n        phone_number: null,\n        password: null,\n        user_referring_code: null,\n      },\n      isLoading: false,\n      isShowSnackbar: false,\n      result: { success: true, message: 'Some thing wrong' },\n      timeout: null,\n    }\n  },\n  created() {\n    if (typeof this.$route.query['ref_code'] !== 'undefined') {\n      this.user.user_referring_code = this.$route.query['ref_code']\n    }\n  },\n  methods: {\n    ...mapActions('auth', ['signUp']),\n\n    async onSignUp() {\n      const validate = await this.$validator.validateAll()\n\n      if (!validate) {\n        return\n      }\n\n      this.isLoading = true\n      this.isShowSnackbar = false\n\n      this.result = await this.signUp(this.user)\n\n      if (this.result.success) {\n        this.$toast.open({\n          type: 'success',\n          message:\n            'Tài khoản của bạn đã được tạo thành công, vui lòng liên hệ bộ phận hỗ trợ để kích hoạt tài khoản',\n          duration: 6000,\n        })\n        this.$router.push({ name: 'sign-in' })\n        return\n      }\n      this.$toast.open({\n        type: 'error',\n        message:\n          this.result.message + ' :</br>' + this.result.errors.join('</br>'),\n        duration: 3000000,\n      })\n\n      setTimeout(() => {\n        this.isLoading = false\n      }, 2000)\n    },\n  },\n}\n</script>\n"]}]}