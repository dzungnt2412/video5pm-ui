{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/uikit/components/multiselect/Multiselect.vue?vue&type=template&id=7060bb3d&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/uikit/components/multiselect/Multiselect.vue","mtime":1604479001997},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1604479001773},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"multiselect\",\n      class: {\n        \"multiselect--active\": _vm.isOpen,\n        \"multiselect--disabled\": _vm.disabled,\n        \"multiselect--above\": _vm.isAbove\n      },\n      attrs: {\n        tabindex: _vm.searchable ? -1 : _vm.tabindex,\n        role: \"combobox\",\n        \"aria-owns\": \"listbox-\" + _vm.id\n      },\n      on: {\n        focus: function($event) {\n          return _vm.activate()\n        },\n        blur: function($event) {\n          _vm.searchable ? false : _vm.deactivate()\n        },\n        keydown: [\n          function($event) {\n            if (\n              !$event.type.indexOf(\"key\") &&\n              _vm._k($event.keyCode, \"down\", 40, $event.key, [\n                \"Down\",\n                \"ArrowDown\"\n              ])\n            ) {\n              return null\n            }\n            if ($event.target !== $event.currentTarget) {\n              return null\n            }\n            $event.preventDefault()\n            return _vm.pointerForward()\n          },\n          function($event) {\n            if (\n              !$event.type.indexOf(\"key\") &&\n              _vm._k($event.keyCode, \"up\", 38, $event.key, [\"Up\", \"ArrowUp\"])\n            ) {\n              return null\n            }\n            if ($event.target !== $event.currentTarget) {\n              return null\n            }\n            $event.preventDefault()\n            return _vm.pointerBackward()\n          }\n        ],\n        keypress: function($event) {\n          if (\n            !$event.type.indexOf(\"key\") &&\n            _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\") &&\n            _vm._k($event.keyCode, \"tab\", 9, $event.key, \"Tab\")\n          ) {\n            return null\n          }\n          $event.stopPropagation()\n          if ($event.target !== $event.currentTarget) {\n            return null\n          }\n          return _vm.addPointerElement($event)\n        },\n        keyup: function($event) {\n          if (\n            !$event.type.indexOf(\"key\") &&\n            _vm._k($event.keyCode, \"esc\", 27, $event.key, [\"Esc\", \"Escape\"])\n          ) {\n            return null\n          }\n          return _vm.deactivate()\n        }\n      }\n    },\n    [\n      _c(\"div\", {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.isOpen,\n            expression: \"isOpen\"\n          }\n        ],\n        staticClass: \"multiselect__overlay\",\n        on: {\n          click: function($event) {\n            return _vm.deactivate()\n          }\n        }\n      }),\n      _vm._t(\n        \"caret\",\n        [\n          _c(\"div\", {\n            staticClass: \"multiselect__select\",\n            on: {\n              mousedown: function($event) {\n                $event.preventDefault()\n                $event.stopPropagation()\n                return _vm.toggle()\n              }\n            }\n          })\n        ],\n        { toggle: _vm.toggle }\n      ),\n      _vm._t(\"clear\", null, { search: _vm.search }),\n      _c(\n        \"div\",\n        { ref: \"tags\", staticClass: \"multiselect__tags\" },\n        [\n          _vm._t(\n            \"selection\",\n            [\n              _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.visibleValues.length > 0,\n                      expression: \"visibleValues.length > 0\"\n                    }\n                  ],\n                  staticClass: \"multiselect__tags-wrap\"\n                },\n                [\n                  _vm._l(_vm.visibleValues, function(option, index) {\n                    return [\n                      _vm._t(\n                        \"tag\",\n                        [\n                          _c(\n                            \"span\",\n                            { key: index, staticClass: \"multiselect__tag\" },\n                            [\n                              _c(\"span\", {\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.getOptionLabel(option)\n                                  )\n                                }\n                              }),\n                              _c(\"i\", {\n                                staticClass: \"multiselect__tag-icon\",\n                                attrs: { \"aria-hidden\": \"true\", tabindex: \"1\" },\n                                on: {\n                                  keypress: function($event) {\n                                    if (\n                                      !$event.type.indexOf(\"key\") &&\n                                      _vm._k(\n                                        $event.keyCode,\n                                        \"enter\",\n                                        13,\n                                        $event.key,\n                                        \"Enter\"\n                                      )\n                                    ) {\n                                      return null\n                                    }\n                                    $event.preventDefault()\n                                    return _vm.removeElement(option)\n                                  },\n                                  mousedown: function($event) {\n                                    $event.preventDefault()\n                                    return _vm.removeElement(option)\n                                  }\n                                }\n                              })\n                            ]\n                          )\n                        ],\n                        {\n                          option: option,\n                          search: _vm.search,\n                          remove: _vm.removeElement\n                        }\n                      )\n                    ]\n                  })\n                ],\n                2\n              ),\n              _vm.internalValue && _vm.internalValue.length > _vm.limit\n                ? [\n                    _vm._t(\"limit\", [\n                      _c(\"strong\", {\n                        staticClass: \"multiselect__strong\",\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.limitText(_vm.internalValue.length - _vm.limit)\n                          )\n                        }\n                      })\n                    ])\n                  ]\n                : _vm._e()\n            ],\n            {\n              search: _vm.search,\n              remove: _vm.removeElement,\n              values: _vm.visibleValues,\n              isOpen: _vm.isOpen\n            }\n          ),\n          _c(\n            \"transition\",\n            { attrs: { name: \"multiselect__loading\" } },\n            [\n              _vm._t(\"loading\", [\n                _c(\"div\", {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.loading,\n                      expression: \"loading\"\n                    }\n                  ],\n                  staticClass: \"multiselect__spinner\"\n                })\n              ])\n            ],\n            2\n          ),\n          _vm.searchable\n            ? _c(\"input\", {\n                ref: \"search\",\n                staticClass: \"multiselect__input\",\n                style: _vm.inputStyle,\n                attrs: {\n                  name: _vm.name,\n                  id: _vm.id,\n                  type: \"text\",\n                  autocomplete: \"off\",\n                  spellcheck: \"false\",\n                  placeholder: _vm.placeholder,\n                  disabled: _vm.disabled,\n                  tabindex: _vm.tabindex,\n                  \"aria-controls\": \"listbox-\" + _vm.id\n                },\n                domProps: { value: _vm.search },\n                on: {\n                  input: function($event) {\n                    return _vm.updateSearch($event.target.value)\n                  },\n                  focus: function($event) {\n                    $event.preventDefault()\n                    return _vm.activate()\n                  },\n                  blur: function($event) {\n                    $event.preventDefault()\n                    return _vm.deactivate()\n                  },\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"esc\", 27, $event.key, [\n                        \"Esc\",\n                        \"Escape\"\n                      ])\n                    ) {\n                      return null\n                    }\n                    return _vm.deactivate()\n                  },\n                  keydown: [\n                    function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"down\", 40, $event.key, [\n                          \"Down\",\n                          \"ArrowDown\"\n                        ])\n                      ) {\n                        return null\n                      }\n                      $event.preventDefault()\n                      return _vm.pointerForward()\n                    },\n                    function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"up\", 38, $event.key, [\n                          \"Up\",\n                          \"ArrowUp\"\n                        ])\n                      ) {\n                        return null\n                      }\n                      $event.preventDefault()\n                      return _vm.pointerBackward()\n                    },\n                    function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"delete\", [8, 46], $event.key, [\n                          \"Backspace\",\n                          \"Delete\",\n                          \"Del\"\n                        ])\n                      ) {\n                        return null\n                      }\n                      $event.stopPropagation()\n                      return _vm.removeLastElement()\n                    }\n                  ],\n                  keypress: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    $event.preventDefault()\n                    $event.stopPropagation()\n                    if ($event.target !== $event.currentTarget) {\n                      return null\n                    }\n                    return _vm.addPointerElement($event)\n                  }\n                }\n              })\n            : _vm._e(),\n          _vm.isSingleLabelVisible\n            ? _c(\n                \"span\",\n                {\n                  staticClass: \"multiselect__single\",\n                  on: {\n                    mousedown: function($event) {\n                      $event.preventDefault()\n                      return _vm.toggle($event)\n                    }\n                  }\n                },\n                [\n                  _vm._t(\n                    \"singleLabel\",\n                    [[_vm._v(_vm._s(_vm.currentOptionLabel))]],\n                    { option: _vm.singleValue }\n                  )\n                ],\n                2\n              )\n            : _vm._e(),\n          _vm.isPlaceholderVisible\n            ? _c(\n                \"span\",\n                {\n                  staticClass: \"multiselect__placeholder\",\n                  on: {\n                    mousedown: function($event) {\n                      $event.preventDefault()\n                      return _vm.toggle($event)\n                    }\n                  }\n                },\n                [\n                  _vm._t(\"placeholder\", [\n                    _vm._v(\"\\n        \" + _vm._s(_vm.placeholder) + \"\\n      \")\n                  ])\n                ],\n                2\n              )\n            : _vm._e()\n        ],\n        2\n      ),\n      _c(\"transition\", { attrs: { name: \"multiselect\" } }, [\n        _c(\n          \"div\",\n          {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: _vm.isOpen,\n                expression: \"isOpen\"\n              }\n            ],\n            ref: \"list\",\n            staticClass: \"multiselect__content-wrapper\",\n            style: { maxHeight: _vm.optimizedHeight + \"px\" },\n            attrs: { tabindex: \"-1\" },\n            on: {\n              focus: _vm.activate,\n              mousedown: function($event) {\n                $event.preventDefault()\n              }\n            }\n          },\n          [\n            _c(\n              \"ul\",\n              {\n                staticClass: \"multiselect__content\",\n                style: _vm.contentStyle,\n                attrs: { role: \"listbox\", id: \"listbox-\" + _vm.id }\n              },\n              [\n                _vm._t(\"beforeList\"),\n                _vm.multiple && _vm.max === _vm.internalValue.length\n                  ? _c(\"li\", [\n                      _c(\n                        \"span\",\n                        { staticClass: \"multiselect__option\" },\n                        [\n                          _vm._t(\"maxElements\", [\n                            _vm._v(\n                              \"Maximum of \" +\n                                _vm._s(_vm.max) +\n                                \" options selected. First remove a selected\\n              option to select another.\"\n                            )\n                          ])\n                        ],\n                        2\n                      )\n                    ])\n                  : _vm._e(),\n                !_vm.max || _vm.internalValue.length < _vm.max\n                  ? _vm._l(_vm.filteredOptions, function(option, index) {\n                      return _c(\n                        \"li\",\n                        {\n                          key: index,\n                          staticClass: \"multiselect__element\",\n                          attrs: {\n                            id: _vm.id + \"-\" + index,\n                            role: !(\n                              option &&\n                              (option.$isLabel || option.$isDisabled)\n                            )\n                              ? \"option\"\n                              : null\n                          }\n                        },\n                        [\n                          !(option && (option.$isLabel || option.$isDisabled))\n                            ? _c(\n                                \"span\",\n                                {\n                                  staticClass: \"multiselect__option\",\n                                  class: _vm.optionHighlight(index, option),\n                                  attrs: {\n                                    \"data-select\":\n                                      option && option.isTag\n                                        ? _vm.tagPlaceholder\n                                        : _vm.selectLabelText,\n                                    \"data-selected\": _vm.selectedLabelText,\n                                    \"data-deselect\": _vm.deselectLabelText\n                                  },\n                                  on: {\n                                    click: function($event) {\n                                      $event.stopPropagation()\n                                      return _vm.select(option)\n                                    },\n                                    mouseenter: function($event) {\n                                      if (\n                                        $event.target !== $event.currentTarget\n                                      ) {\n                                        return null\n                                      }\n                                      return _vm.pointerSet(index)\n                                    }\n                                  }\n                                },\n                                [\n                                  _vm._t(\n                                    \"option\",\n                                    [\n                                      _c(\"span\", [\n                                        _vm._v(\n                                          _vm._s(_vm.getOptionLabel(option))\n                                        )\n                                      ])\n                                    ],\n                                    { option: option, search: _vm.search }\n                                  )\n                                ],\n                                2\n                              )\n                            : _vm._e(),\n                          option && (option.$isLabel || option.$isDisabled)\n                            ? _c(\n                                \"span\",\n                                {\n                                  staticClass: \"multiselect__option\",\n                                  class: _vm.groupHighlight(index, option),\n                                  attrs: {\n                                    \"data-select\":\n                                      _vm.groupSelect &&\n                                      _vm.selectGroupLabelText,\n                                    \"data-deselect\":\n                                      _vm.groupSelect &&\n                                      _vm.deselectGroupLabelText\n                                  },\n                                  on: {\n                                    mouseenter: function($event) {\n                                      if (\n                                        $event.target !== $event.currentTarget\n                                      ) {\n                                        return null\n                                      }\n                                      _vm.groupSelect && _vm.pointerSet(index)\n                                    },\n                                    mousedown: function($event) {\n                                      $event.preventDefault()\n                                      return _vm.selectGroup(option)\n                                    }\n                                  }\n                                },\n                                [\n                                  _vm._t(\n                                    \"option\",\n                                    [\n                                      _c(\"span\", [\n                                        _vm._v(\n                                          _vm._s(_vm.getOptionLabel(option))\n                                        )\n                                      ])\n                                    ],\n                                    { option: option, search: _vm.search }\n                                  )\n                                ],\n                                2\n                              )\n                            : _vm._e()\n                        ]\n                      )\n                    })\n                  : _vm._e(),\n                _c(\n                  \"li\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value:\n                          _vm.showNoResults &&\n                          _vm.filteredOptions.length === 0 &&\n                          _vm.search &&\n                          !_vm.loading,\n                        expression:\n                          \"\\n            showNoResults &&\\n              filteredOptions.length === 0 &&\\n              search &&\\n              !loading\\n          \"\n                      }\n                    ]\n                  },\n                  [\n                    _c(\n                      \"span\",\n                      { staticClass: \"multiselect__option\" },\n                      [\n                        _vm._t(\n                          \"noResult\",\n                          [\n                            _vm._v(\n                              \"No elements found. Consider changing the search query.\"\n                            )\n                          ],\n                          { search: _vm.search }\n                        )\n                      ],\n                      2\n                    )\n                  ]\n                ),\n                _c(\n                  \"li\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value:\n                          _vm.showNoOptions &&\n                          _vm.options.length === 0 &&\n                          !_vm.search &&\n                          !_vm.loading,\n                        expression:\n                          \"\\n            showNoOptions && options.length === 0 && !search && !loading\\n          \"\n                      }\n                    ]\n                  },\n                  [\n                    _c(\n                      \"span\",\n                      { staticClass: \"multiselect__option\" },\n                      [_vm._t(\"noOptions\", [_vm._v(\"List is empty.\")])],\n                      2\n                    )\n                  ]\n                ),\n                _vm._t(\"afterList\")\n              ],\n              2\n            )\n          ]\n        )\n      ])\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}