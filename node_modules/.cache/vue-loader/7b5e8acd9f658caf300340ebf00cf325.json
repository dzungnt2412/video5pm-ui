{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/components/shared/modal/ModalImport.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/components/shared/modal/ModalImport.vue","mtime":1603898990376},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'ModalImport',\n  props: {\n    visible: {\n      type: Boolean,\n    },\n    title: {\n      type: String,\n      default: '',\n    },\n    supportUrl: {\n      type: String,\n      default: '',\n    },\n    uploading: {\n      type: Boolean,\n      default: false,\n    },\n    accept: {\n      type: [Object, Array, String],\n      default: '',\n    },\n    error: {\n      type: String,\n      default: '',\n    },\n  },\n  data() {\n    return {\n      isSubmit: false,\n      file: null,\n      isVisible: false,\n      isValid: true,\n    }\n  },\n  methods: {\n    handleClose() {\n      this.$emit('update:visible', false)\n    },\n    handleSave() {\n      if (this.uploading) {\n        console.log('selected')\n        return\n      }\n      this.$emit('selected', this.file)\n    },\n    handleFileChange(e) {\n      const files = e.target.files || e.dataTransfer.files\n\n      if (files.length) {\n        this.file = files[0]\n      }\n    },\n  },\n  watch: {\n    file: {\n      handler: function(val) {\n        this.file = val\n      },\n      immediate: true,\n    },\n    visible: {\n      handler: function(val) {\n        this.isVisible = val\n      },\n      immediate: true,\n    },\n  },\n}\n",{"version":3,"sources":["ModalImport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ModalImport.vue","sourceRoot":"src/components/shared/modal","sourcesContent":["<template>\n  <p-modal :title=\"title\" :active.sync=\"isVisible\" @close=\"handleClose\">\n    <slot name=\"prepend\"></slot>\n    <div\n      class=\"form-group\"\n      :class=\"[{ 'has-success': !error }, { 'has-danger': error }]\"\n    >\n      <p-upload v-model=\"file\" :accept=\"accept\">\n        <div class=\"btn btn-primary\">\n          <p-icon name=\"upload\"></p-icon>\n          <span class=\"ml-10\">Ch·ªçn file</span>\n        </div>\n      </p-upload>\n      <span class=\"ml-10\" v-if=\"!file\"></span>\n      <span class=\"ml-10\" v-else>{{ file.name }}</span>\n      <span class=\"invalid-feedback\" v-if=\"error\">\n        {{ error }}\n      </span>\n    </div>\n    <slot />\n\n    <template slot=\"footer\">\n      <p-button type=\"default\" @click=\"handleClose\">\n        <span>Cancel</span>\n      </p-button>\n      <p-button\n        type=\"primary\"\n        @click=\"handleSave\"\n        :disabled=\"!file && uploading\"\n      >\n        <span>Upload file</span>\n      </p-button>\n    </template>\n  </p-modal>\n</template>\n\n<script>\nexport default {\n  name: 'ModalImport',\n  props: {\n    visible: {\n      type: Boolean,\n    },\n    title: {\n      type: String,\n      default: '',\n    },\n    supportUrl: {\n      type: String,\n      default: '',\n    },\n    uploading: {\n      type: Boolean,\n      default: false,\n    },\n    accept: {\n      type: [Object, Array, String],\n      default: '',\n    },\n    error: {\n      type: String,\n      default: '',\n    },\n  },\n  data() {\n    return {\n      isSubmit: false,\n      file: null,\n      isVisible: false,\n      isValid: true,\n    }\n  },\n  methods: {\n    handleClose() {\n      this.$emit('update:visible', false)\n    },\n    handleSave() {\n      if (this.uploading) {\n        console.log('selected')\n        return\n      }\n      this.$emit('selected', this.file)\n    },\n    handleFileChange(e) {\n      const files = e.target.files || e.dataTransfer.files\n\n      if (files.length) {\n        this.file = files[0]\n      }\n    },\n  },\n  watch: {\n    file: {\n      handler: function(val) {\n        this.file = val\n      },\n      immediate: true,\n    },\n    visible: {\n      handler: function(val) {\n        this.isVisible = val\n      },\n      immediate: true,\n    },\n  },\n}\n</script>\n"]}]}