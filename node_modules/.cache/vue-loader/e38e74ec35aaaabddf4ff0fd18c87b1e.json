{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/order-mapping/views/OptionMappingForm.vue?vue&type=template&id=7f5cc833&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/src/packages/order-mapping/views/OptionMappingForm.vue","mtime":1603898990380},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1597736282333},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["\n<PageDetailLoading v-if=\"isFetching\"></PageDetailLoading>\n<div class=\"page\" v-else>\n  <UnsavedBar\n    :show=\"isShowUnsavedBar\"\n    :showDiscard=\"true\"\n    :loading=\"isSaving\"\n    @save=\"save\"\n    @discard=\"discard\"\n    title=\"Save\"\n  ></UnsavedBar>\n  <div class=\"page-header\">\n    <p-button icon=\"chevron-left\" class=\"btn-pure pl-0 mb-15\">\n      <router-link :to=\"{ name: 'option-mapping-list' }\">\n        Option mapping rules\n      </router-link>\n    </p-button>\n    <h1 class=\"page-title\">{{ pageTitle }}</h1>\n  </div>\n  <div class=\"page-content container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card\">\n          <div class=\"card-block\">\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <div class=\"d-flex\">\n                  <h5 class=\"white-space-nowrap mr-15\">Lionnix Product</h5>\n                  <div class=\"form-group mb-0\">\n                    <p-select\n                      :class=\"[\n                        { 'is-invalid': errors.has('product_type_id') },\n                      ]\"\n                      v-model=\"form.product_type_id\"\n                      @input=\"onProductTypeChange\"\n                      placeholder=\"Select product\"\n                      v-validate=\"'required'\"\n                      name=\"product_type_id\"\n                    >\n                      <option\n                        v-for=\"product in products\"\n                        :value=\"product.id\"\n                        :key=\"product.id\"\n                      >\n                        {{ product.name }}\n                      </option>\n                    </p-select>\n                    <div\n                      class=\"invalid-feedback\"\n                      v-if=\"errors.has('product_type_id')\"\n                    >\n                      Product type is required\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <h4>Lionnix</h4>\n              </div>\n              <div class=\"col-6\">\n                <h4>Shop</h4>\n              </div>\n            </div>\n            <div\n              class=\"row mb-15\"\n              v-for=\"(rule, ruleIndex) in form.rules\"\n              :key=\"ruleIndex\"\n            >\n              <!-- map option -->\n              <div class=\"col-6\">\n                <div class=\"form-group flex-fill\">\n                  <label>Option</label>\n                  <p-select\n                    :class=\"[\n                      {\n                        'is-invalid': errors.has(\n                          `option_set_target-${ruleIndex}`\n                        ),\n                      },\n                    ]\"\n                    :value=\"rule.option_set.target_value\"\n                    @input=\"\n                      (value) => onOptionSetTargetValueChange(rule, value)\n                    \"\n                    placeholder=\"Select option set\"\n                    v-validate=\"'required'\"\n                    :name=\"`option_set_target-${ruleIndex}`\"\n                  >\n                    <option\n                      v-for=\"(optionSet, index) in optionSets\"\n                      :value=\"optionSet.id\"\n                      :key=\"index\"\n                    >\n                      {{ optionSet.name }}\n                    </option>\n                  </p-select>\n                  <div\n                    class=\"invalid-feedback\"\n                    v-if=\"errors.has(`option_set_target-${ruleIndex}`)\"\n                  >\n                    Please choose Lionnix option\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"d-flex ml--10 mt--10\">\n                  <div class=\"form-group flex-fill pl-10 pt-10\">\n                    <label>Option values</label>\n                    <input\n                      placeholder=\"Option values, separated by commas\"\n                      :class=\"[\n                        {\n                          'is-invalid': errors.has(\n                            `option_conditions-${ruleIndex}`\n                          ),\n                        },\n                      ]\"\n                      type=\"text\"\n                      @input=\"\n                        (event) =>\n                          onRuleOptionConditionsChange(\n                            rule,\n                            event.target.value\n                          )\n                      \"\n                      :value=\"rule.option.conditions\"\n                      class=\"flex-fill form-control\"\n                      v-validate=\"'required'\"\n                      :name=\"`option_conditions-${ruleIndex}`\"\n                    />\n                    <div\n                      class=\"invalid-feedback\"\n                      v-if=\"errors.has(`option_conditions-${ruleIndex}`)\"\n                    >\n                      Please enter option values, separated by commas\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <!-- end map option -->\n\n              <!-- map option values -->\n              <div class=\"col-6\">\n                <div\n                  class=\"form-group mb-2\"\n                  v-if=\"\n                    getOptionsWithOptionSetId(rule.option_set.target_value)\n                      .length > 0\n                  \"\n                >\n                  <label>\n                    Values\n                  </label>\n                  <div\n                    class=\"mb-10\"\n                    v-for=\"(option, index) in getOptionsWithOptionSetId(\n                      rule.option_set.target_value\n                    )\"\n                    :key=\"index\"\n                  >\n                    <p-select\n                      :class=\"[\n                        {\n                          'is-invalid': errors.has(\n                            `option_target-${ruleIndex}-${index}`\n                          ),\n                        },\n                      ]\"\n                      @input=\"\n                        (val) =>\n                          setOptionTargetValueByIndex(ruleIndex, index, val)\n                      \"\n                      :value=\"getOptionTargetValueByIndex(ruleIndex, index)\"\n                      placeholder=\"Select option value\"\n                      v-validate=\"'required'\"\n                      :name=\"`option_target-${ruleIndex}-${index}`\"\n                    >\n                      <option\n                        v-for=\"(option, index) in getOptionsWithOptionSetId(\n                          rule.option_set.target_value\n                        )\"\n                        :key=\"index\"\n                        :value=\"option.id\"\n                      >\n                        {{ option.value }}\n                      </option>\n                    </p-select>\n                    <div\n                      class=\"invalid-feedback\"\n                      v-if=\"errors.has(`option_target-${ruleIndex}-${index}`)\"\n                    >\n                      Please choose a option value\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div\n                  class=\"form-group mb-0\"\n                  v-if=\"rule.option.values.length > 0\"\n                >\n                  <label>\n                    Values\n                  </label>\n                  <div\n                    class=\"mb-10\"\n                    v-for=\"(value, index) in rule.option.values\"\n                    :key=\"index\"\n                  >\n                    <p-select\n                      :class=\"[\n                        {\n                          'is-invalid': errors.has(\n                            `option_value-${ruleIndex}-${index}`\n                          ),\n                        },\n                      ]\"\n                      @input=\"\n                        (val) => setOptionValueByIndex(ruleIndex, index, val)\n                      \"\n                      :value=\"getOptionValueByIndex(ruleIndex, index)\"\n                      placeholder=\"Select option value\"\n                      v-validate=\"'required'\"\n                      :name=\"`option_value-${ruleIndex}-${index}`\"\n                    >\n                      <option\n                        v-for=\"(v, index) in rule.option.values\"\n                        :key=\"index\"\n                        :value=\"v\"\n                      >\n                        {{ v }}\n                      </option>\n                    </p-select>\n                    <div\n                      class=\"invalid-feedback\"\n                      v-if=\"errors.has(`option_value-${ruleIndex}-${index}`)\"\n                    >\n                      Please choose a option value\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <!-- end map option values -->\n              <div class=\"col-12\">\n                <div class=\"d-flex justify-content-end\">\n                  <a\n                    href=\"#\"\n                    class=\"btn-delete-option\"\n                    @click=\"deleteOption(ruleIndex)\"\n                  >\n                    Delete option\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-12\" @click=\"addNewOption\">\n                <p-button type=\"default\">Add new option</p-button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"d-flex justify-content-between\">\n          <p-button\n            type=\"danger\"\n            @click=\"showConfirmDelete\"\n            @disabled=\"isDeleting\"\n            :loading=\"isDeleting\"\n            v-if=\"optionMappingState.id\"\n          >\n            Delete\n          </p-button>\n          <div v-else></div>\n          <div class=\"d-flex\">\n            <p-button type=\"default\" @click=\"discard\">\n              Cancel\n            </p-button>\n            <p-button\n              class=\"ml-15\"\n              @click=\"save\"\n              :disabled=\"isSaving\"\n              :loading=\"isSaving\"\n            >\n              Save\n            </p-button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n",null]}