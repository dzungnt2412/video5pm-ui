{"remainingRequest":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/views/ResetPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/src/packages/auth/views/ResetPassword.vue","mtime":1605110441120},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/thread-loader/dist/cjs.js","mtime":1604479001701},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/babel-loader/lib/index.js","mtime":1604479000077},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/cache-loader/dist/cjs.js","mtime":1604479000133},{"path":"/home/tiendzung/workspace/video5pm/video5pm-ui/node_modules/vue-loader/lib/index.js","mtime":1604479001773}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions } from 'vuex'\n\nexport default {\n  data() {\n    return {\n      result: '',\n      password: null,\n      requiredPassword: false,\n    }\n  },\n  methods: {\n    ...mapActions('auth', ['resetPassword']),\n    checkRequired() {\n      let result = true\n      if (!this.password) {\n        this.requiredPassword = true\n        result = false\n      } else {\n        this.requiredPassword = false\n      }\n      return result\n    },\n    async onReset() {\n      if (!this.checkRequired()) {\n        return\n      }\n      const url = new URL(window.location.href)\n      const code = url.searchParams.get('code')\n      const password = this.password\n      const params = {\n        code: code,\n        password: password,\n      }\n      this.result = await this.resetPassword(params)\n      if (this.result.user) {\n        this.$toast.open({\n          type: 'success',\n          message: 'Password successfully updated.',\n        })\n        setTimeout(() => {\n          return this.$router.push('/sign-in')\n        }, 2000)\n      } else {\n        this.$toast.open({ type: 'error', message: this.result.errorMessage })\n      }\n    },\n  },\n}\n",null]}