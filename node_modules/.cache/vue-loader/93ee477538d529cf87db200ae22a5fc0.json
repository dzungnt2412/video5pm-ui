{"remainingRequest":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tiendzung/workspace/lionnix/lionnix-seller-v2/uikit/components/datepicker/Datepicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/uikit/components/datepicker/Datepicker.vue","mtime":1603898990384},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/babel-loader/lib/index.js","mtime":1597736171393},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/cache-loader/dist/cjs.js","mtime":1601450297498},{"path":"/home/tiendzung/workspace/lionnix/lionnix-seller-v2/node_modules/vue-loader/lib/index.js","mtime":1597736282333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DateRangePicker from 'vue2-daterange-picker'\nexport { date } from '@core/utils/datetime'\nimport 'vue2-daterange-picker/dist/vue2-daterange-picker.css'\n\nexport default {\n  name: 'PDatepicker',\n  components: { DateRangePicker },\n  props: {\n    value: {},\n    label: {\n      type: String,\n      default: 'Choose date range',\n    },\n    singleDatePicker: {\n      type: Boolean,\n      default: false,\n    },\n    timePicker: {\n      type: Boolean,\n      default: false,\n    },\n    opens: {\n      type: String,\n      default: 'left',\n    },\n    minDate: {\n      type: [String, Date],\n      default: '',\n    },\n    maxDate: {\n      type: [String, Date],\n      default: '',\n    },\n    timePicker24Hour: {\n      type: Boolean,\n      default: true,\n    },\n    showWeekNumbers: {\n      type: Boolean,\n      default: false,\n    },\n    showDropdowns: {\n      type: Boolean,\n      default: false,\n    },\n    autoApply: {\n      type: Boolean,\n      default: false,\n    },\n    linkedCalendars: {\n      type: Boolean,\n      default: true,\n    },\n    dateFormat: {\n      type: Function,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      dateRange: {},\n    }\n  },\n  computed: {\n    textValue() {\n      let text = ''\n\n      if (!this.picker) {\n        return ''\n      }\n\n      if (this.picker.startDate) {\n        text = this.picker.startDate\n      }\n\n      if (this.picker.endDate) {\n        text = `to ${this.picker.endDate}`\n      }\n      return text\n    },\n  },\n  methods: {\n    updateValues(e) {\n      this.$emit('input', e)\n      this.$emit('update', e)\n    },\n    checkOpen(e) {\n      this.$emit('check-open', e)\n    },\n  },\n  watch: {\n    value: function(value) {\n      this.dateRange = value\n    },\n  },\n}\n",{"version":3,"sources":["Datepicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Datepicker.vue","sourceRoot":"uikit/components/datepicker","sourcesContent":["<template>\n  <date-range-picker\n    ref=\"picker\"\n    :opens=\"opens\"\n    :locale-data=\"{ firstDay: 1, format: 'YYYY/MM/DD' }\"\n    :minDate=\"minDate\"\n    :maxDate=\"maxDate\"\n    :singleDatePicker=\"singleDatePicker\"\n    :timePicker=\"timePicker\"\n    :timePicker24Hour=\"timePicker24Hour\"\n    :showWeekNumbers=\"showWeekNumbers\"\n    :showDropdowns=\"showDropdowns\"\n    :autoApply=\"autoApply\"\n    v-model=\"dateRange\"\n    @update=\"updateValues\"\n    @toggle=\"checkOpen\"\n    :linkedCalendars=\"linkedCalendars\"\n    :dateFormat=\"dateFormat\"\n  >\n    <div slot=\"input\" slot-scope=\"picker\" style=\"min-width: 350px;\">\n      <span v-if=\"picker.startDate && picker.endDate\">\n        Từ {{ picker.startDate | date('MM/dd/yyyy') }} đến\n        {{ picker.endDate | date('MM/dd/yyyy') }}\n      </span>\n    </div>\n  </date-range-picker>\n</template>\n<script>\nimport DateRangePicker from 'vue2-daterange-picker'\nexport { date } from '@core/utils/datetime'\nimport 'vue2-daterange-picker/dist/vue2-daterange-picker.css'\n\nexport default {\n  name: 'PDatepicker',\n  components: { DateRangePicker },\n  props: {\n    value: {},\n    label: {\n      type: String,\n      default: 'Choose date range',\n    },\n    singleDatePicker: {\n      type: Boolean,\n      default: false,\n    },\n    timePicker: {\n      type: Boolean,\n      default: false,\n    },\n    opens: {\n      type: String,\n      default: 'left',\n    },\n    minDate: {\n      type: [String, Date],\n      default: '',\n    },\n    maxDate: {\n      type: [String, Date],\n      default: '',\n    },\n    timePicker24Hour: {\n      type: Boolean,\n      default: true,\n    },\n    showWeekNumbers: {\n      type: Boolean,\n      default: false,\n    },\n    showDropdowns: {\n      type: Boolean,\n      default: false,\n    },\n    autoApply: {\n      type: Boolean,\n      default: false,\n    },\n    linkedCalendars: {\n      type: Boolean,\n      default: true,\n    },\n    dateFormat: {\n      type: Function,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      dateRange: {},\n    }\n  },\n  computed: {\n    textValue() {\n      let text = ''\n\n      if (!this.picker) {\n        return ''\n      }\n\n      if (this.picker.startDate) {\n        text = this.picker.startDate\n      }\n\n      if (this.picker.endDate) {\n        text = `to ${this.picker.endDate}`\n      }\n      return text\n    },\n  },\n  methods: {\n    updateValues(e) {\n      this.$emit('input', e)\n      this.$emit('update', e)\n    },\n    checkOpen(e) {\n      this.$emit('check-open', e)\n    },\n  },\n  watch: {\n    value: function(value) {\n      this.dateRange = value\n    },\n  },\n}\n</script>\n"]}]}